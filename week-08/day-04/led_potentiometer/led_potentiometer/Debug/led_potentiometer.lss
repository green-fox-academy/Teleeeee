
led_potentiometer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000d54  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ce0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800100  00800100  00000d54  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000d54  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d84  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000098  00000000  00000000  00000dc4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d96  00000000  00000000  00000e5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000926  00000000  00000000  00001bf2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000579  00000000  00000000  00002518  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001b0  00000000  00000000  00002a94  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004f5  00000000  00000000  00002c44  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000880  00000000  00000000  00003139  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  000039b9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__ctors_end>
   4:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
   8:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
   c:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  10:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  14:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  18:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  1c:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  20:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  24:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  28:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  2c:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  30:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  34:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  38:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  3c:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  40:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  44:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  48:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  4c:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  50:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  54:	0c 94 e1 01 	jmp	0x3c2	; 0x3c2 <__vector_21>
  58:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  5c:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  60:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  64:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  68:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  6c:	08 4a       	sbci	r16, 0xA8	; 168
  6e:	d7 3b       	cpi	r29, 0xB7	; 183
  70:	3b ce       	rjmp	.-906    	; 0xfffffce8 <__eeprom_end+0xff7efce8>
  72:	01 6e       	ori	r16, 0xE1	; 225
  74:	84 bc       	out	0x24, r8	; 36
  76:	bf fd       	.word	0xfdbf	; ????
  78:	c1 2f       	mov	r28, r17
  7a:	3d 6c       	ori	r19, 0xCD	; 205
  7c:	74 31       	cpi	r23, 0x14	; 20
  7e:	9a bd       	out	0x2a, r25	; 42
  80:	56 83       	std	Z+6, r21	; 0x06
  82:	3d da       	rcall	.-2950   	; 0xfffff4fe <__eeprom_end+0xff7ef4fe>
  84:	3d 00       	.word	0x003d	; ????
  86:	c7 7f       	andi	r28, 0xF7	; 247
  88:	11 be       	out	0x31, r1	; 49
  8a:	d9 e4       	ldi	r29, 0x49	; 73
  8c:	bb 4c       	sbci	r27, 0xCB	; 203
  8e:	3e 91       	ld	r19, -X
  90:	6b aa       	std	Y+51, r6	; 0x33
  92:	aa be       	out	0x3a, r10	; 58
  94:	00 00       	nop
  96:	00 80       	ld	r0, Z
  98:	3f 00       	.word	0x003f	; ????

0000009a <__ctors_end>:
  9a:	11 24       	eor	r1, r1
  9c:	1f be       	out	0x3f, r1	; 63
  9e:	cf ef       	ldi	r28, 0xFF	; 255
  a0:	d4 e0       	ldi	r29, 0x04	; 4
  a2:	de bf       	out	0x3e, r29	; 62
  a4:	cd bf       	out	0x3d, r28	; 61

000000a6 <__do_clear_bss>:
  a6:	21 e0       	ldi	r18, 0x01	; 1
  a8:	a0 e0       	ldi	r26, 0x00	; 0
  aa:	b1 e0       	ldi	r27, 0x01	; 1
  ac:	01 c0       	rjmp	.+2      	; 0xb0 <.do_clear_bss_start>

000000ae <.do_clear_bss_loop>:
  ae:	1d 92       	st	X+, r1

000000b0 <.do_clear_bss_start>:
  b0:	a4 30       	cpi	r26, 0x04	; 4
  b2:	b2 07       	cpc	r27, r18
  b4:	e1 f7       	brne	.-8      	; 0xae <.do_clear_bss_loop>
  b6:	0e 94 0c 02 	call	0x418	; 0x418 <main>
  ba:	0c 94 6e 06 	jmp	0xcdc	; 0xcdc <_exit>

000000be <__bad_interrupt>:
  be:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c2 <hsvColor>:
    return value;
}


unsigned int hsvColor(double hue, double saturation, double value)
{
  c2:	4f 92       	push	r4
  c4:	5f 92       	push	r5
  c6:	6f 92       	push	r6
  c8:	7f 92       	push	r7
  ca:	8f 92       	push	r8
  cc:	9f 92       	push	r9
  ce:	af 92       	push	r10
  d0:	bf 92       	push	r11
  d2:	cf 92       	push	r12
  d4:	df 92       	push	r13
  d6:	ef 92       	push	r14
  d8:	ff 92       	push	r15
  da:	0f 93       	push	r16
  dc:	1f 93       	push	r17
  de:	cf 93       	push	r28
  e0:	df 93       	push	r29
  e2:	d2 2f       	mov	r29, r18
  e4:	c3 2f       	mov	r28, r19
  e6:	b4 2e       	mov	r11, r20
  e8:	a5 2e       	mov	r10, r21
  ea:	9e 2c       	mov	r9, r14
  ec:	8f 2c       	mov	r8, r15
    double H, S, V;
    double C, X, m;
    double R_, G_, B_;
    double R, G, B;

    H = fmod(hue, 360.0);
  ee:	20 e0       	ldi	r18, 0x00	; 0
  f0:	30 e0       	ldi	r19, 0x00	; 0
  f2:	44 eb       	ldi	r20, 0xB4	; 180
  f4:	53 e4       	ldi	r21, 0x43	; 67
  f6:	0e 94 b0 04 	call	0x960	; 0x960 <fmod>
  fa:	6b 01       	movw	r12, r22
  fc:	7c 01       	movw	r14, r24

    return (red | green | blue);
}

double crop(double value, double min, double max){
    if(value < min) return min;
  fe:	20 e0       	ldi	r18, 0x00	; 0
 100:	30 e0       	ldi	r19, 0x00	; 0
 102:	a9 01       	movw	r20, r18
 104:	6d 2f       	mov	r22, r29
 106:	7c 2f       	mov	r23, r28
 108:	8b 2d       	mov	r24, r11
 10a:	9a 2d       	mov	r25, r10
 10c:	0e 94 c2 03 	call	0x784	; 0x784 <__cmpsf2>
 110:	88 23       	and	r24, r24
 112:	8c f0       	brlt	.+34     	; 0x136 <hsvColor+0x74>
    if(value > max) return max;
 114:	20 e0       	ldi	r18, 0x00	; 0
 116:	30 e0       	ldi	r19, 0x00	; 0
 118:	40 e8       	ldi	r20, 0x80	; 128
 11a:	5f e3       	ldi	r21, 0x3F	; 63
 11c:	6d 2f       	mov	r22, r29
 11e:	7c 2f       	mov	r23, r28
 120:	8b 2d       	mov	r24, r11
 122:	9a 2d       	mov	r25, r10
 124:	0e 94 a3 05 	call	0xb46	; 0xb46 <__gesf2>
 128:	18 16       	cp	r1, r24
 12a:	54 f0       	brlt	.+20     	; 0x140 <hsvColor+0x7e>
    return value;
 12c:	7d 2e       	mov	r7, r29
 12e:	6c 2e       	mov	r6, r28
 130:	cb 2d       	mov	r28, r11
 132:	da 2d       	mov	r29, r10
 134:	09 c0       	rjmp	.+18     	; 0x148 <hsvColor+0x86>

    return (red | green | blue);
}

double crop(double value, double min, double max){
    if(value < min) return min;
 136:	71 2c       	mov	r7, r1
 138:	61 2c       	mov	r6, r1
 13a:	c0 e0       	ldi	r28, 0x00	; 0
 13c:	d0 e0       	ldi	r29, 0x00	; 0
 13e:	04 c0       	rjmp	.+8      	; 0x148 <hsvColor+0x86>
    if(value > max) return max;
 140:	71 2c       	mov	r7, r1
 142:	61 2c       	mov	r6, r1
 144:	c0 e8       	ldi	r28, 0x80	; 128
 146:	df e3       	ldi	r29, 0x3F	; 63

    return (red | green | blue);
}

double crop(double value, double min, double max){
    if(value < min) return min;
 148:	20 e0       	ldi	r18, 0x00	; 0
 14a:	30 e0       	ldi	r19, 0x00	; 0
 14c:	a9 01       	movw	r20, r18
 14e:	69 2d       	mov	r22, r9
 150:	78 2d       	mov	r23, r8
 152:	80 2f       	mov	r24, r16
 154:	91 2f       	mov	r25, r17
 156:	0e 94 c2 03 	call	0x784	; 0x784 <__cmpsf2>
 15a:	88 23       	and	r24, r24
 15c:	7c f0       	brlt	.+30     	; 0x17c <hsvColor+0xba>
    if(value > max) return max;
 15e:	20 e0       	ldi	r18, 0x00	; 0
 160:	30 e0       	ldi	r19, 0x00	; 0
 162:	40 e8       	ldi	r20, 0x80	; 128
 164:	5f e3       	ldi	r21, 0x3F	; 63
 166:	69 2d       	mov	r22, r9
 168:	78 2d       	mov	r23, r8
 16a:	80 2f       	mov	r24, r16
 16c:	91 2f       	mov	r25, r17
 16e:	0e 94 a3 05 	call	0xb46	; 0xb46 <__gesf2>
 172:	18 16       	cp	r1, r24
 174:	44 f0       	brlt	.+16     	; 0x186 <hsvColor+0xc4>
    return value;
 176:	b0 2e       	mov	r11, r16
 178:	a1 2e       	mov	r10, r17
 17a:	0e c0       	rjmp	.+28     	; 0x198 <hsvColor+0xd6>

    return (red | green | blue);
}

double crop(double value, double min, double max){
    if(value < min) return min;
 17c:	91 2c       	mov	r9, r1
 17e:	81 2c       	mov	r8, r1
 180:	b1 2c       	mov	r11, r1
 182:	a1 2c       	mov	r10, r1
 184:	09 c0       	rjmp	.+18     	; 0x198 <hsvColor+0xd6>
    if(value > max) return max;
 186:	91 2c       	mov	r9, r1
 188:	81 2c       	mov	r8, r1
 18a:	68 94       	set
 18c:	bb 24       	eor	r11, r11
 18e:	b7 f8       	bld	r11, 7
 190:	0f 2e       	mov	r0, r31
 192:	ff e3       	ldi	r31, 0x3F	; 63
 194:	af 2e       	mov	r10, r31
 196:	f0 2d       	mov	r31, r0

    H = fmod(hue, 360.0);
    S = crop(saturation, 0.0, 1.0);
    V = crop(value, 0.0, 1.0);

    C = V * S;
 198:	27 2d       	mov	r18, r7
 19a:	36 2d       	mov	r19, r6
 19c:	4c 2f       	mov	r20, r28
 19e:	5d 2f       	mov	r21, r29
 1a0:	69 2d       	mov	r22, r9
 1a2:	78 2d       	mov	r23, r8
 1a4:	8b 2d       	mov	r24, r11
 1a6:	9a 2d       	mov	r25, r10
 1a8:	0e 94 b0 05 	call	0xb60	; 0xb60 <__mulsf3>
 1ac:	d6 2f       	mov	r29, r22
 1ae:	c7 2f       	mov	r28, r23
 1b0:	18 2f       	mov	r17, r24
 1b2:	09 2f       	mov	r16, r25
    X = C * (1 - fabs( fmod( (H/60.0), 2.0 ) - 1 ) );
 1b4:	20 e0       	ldi	r18, 0x00	; 0
 1b6:	30 e0       	ldi	r19, 0x00	; 0
 1b8:	40 e7       	ldi	r20, 0x70	; 112
 1ba:	52 e4       	ldi	r21, 0x42	; 66
 1bc:	c7 01       	movw	r24, r14
 1be:	b6 01       	movw	r22, r12
 1c0:	0e 94 c7 03 	call	0x78e	; 0x78e <__divsf3>
 1c4:	20 e0       	ldi	r18, 0x00	; 0
 1c6:	30 e0       	ldi	r19, 0x00	; 0
 1c8:	40 e0       	ldi	r20, 0x00	; 0
 1ca:	50 e4       	ldi	r21, 0x40	; 64
 1cc:	0e 94 b0 04 	call	0x960	; 0x960 <fmod>
 1d0:	20 e0       	ldi	r18, 0x00	; 0
 1d2:	30 e0       	ldi	r19, 0x00	; 0
 1d4:	40 e8       	ldi	r20, 0x80	; 128
 1d6:	5f e3       	ldi	r21, 0x3F	; 63
 1d8:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <__subsf3>
 1dc:	9b 01       	movw	r18, r22
 1de:	ac 01       	movw	r20, r24
 1e0:	5f 77       	andi	r21, 0x7F	; 127
 1e2:	60 e0       	ldi	r22, 0x00	; 0
 1e4:	70 e0       	ldi	r23, 0x00	; 0
 1e6:	80 e8       	ldi	r24, 0x80	; 128
 1e8:	9f e3       	ldi	r25, 0x3F	; 63
 1ea:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <__subsf3>
 1ee:	2d 2f       	mov	r18, r29
 1f0:	3c 2f       	mov	r19, r28
 1f2:	41 2f       	mov	r20, r17
 1f4:	50 2f       	mov	r21, r16
 1f6:	0e 94 b0 05 	call	0xb60	; 0xb60 <__mulsf3>
 1fa:	76 2e       	mov	r7, r22
 1fc:	67 2e       	mov	r6, r23
 1fe:	58 2e       	mov	r5, r24
 200:	49 2e       	mov	r4, r25
    m = V - C;
 202:	2d 2f       	mov	r18, r29
 204:	3c 2f       	mov	r19, r28
 206:	41 2f       	mov	r20, r17
 208:	50 2f       	mov	r21, r16
 20a:	69 2d       	mov	r22, r9
 20c:	78 2d       	mov	r23, r8
 20e:	8b 2d       	mov	r24, r11
 210:	9a 2d       	mov	r25, r10
 212:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <__subsf3>
 216:	4b 01       	movw	r8, r22
 218:	5c 01       	movw	r10, r24

    if( H >= 0.0 && H < 60.0 )
 21a:	20 e0       	ldi	r18, 0x00	; 0
 21c:	30 e0       	ldi	r19, 0x00	; 0
 21e:	a9 01       	movw	r20, r18
 220:	c7 01       	movw	r24, r14
 222:	b6 01       	movw	r22, r12
 224:	0e 94 a3 05 	call	0xb46	; 0xb46 <__gesf2>
 228:	88 23       	and	r24, r24
 22a:	5c f0       	brlt	.+22     	; 0x242 <hsvColor+0x180>
 22c:	20 e0       	ldi	r18, 0x00	; 0
 22e:	30 e0       	ldi	r19, 0x00	; 0
 230:	40 e7       	ldi	r20, 0x70	; 112
 232:	52 e4       	ldi	r21, 0x42	; 66
 234:	c7 01       	movw	r24, r14
 236:	b6 01       	movw	r22, r12
 238:	0e 94 c2 03 	call	0x784	; 0x784 <__cmpsf2>
 23c:	88 23       	and	r24, r24
 23e:	0c f4       	brge	.+2      	; 0x242 <hsvColor+0x180>
 240:	5b c0       	rjmp	.+182    	; 0x2f8 <hsvColor+0x236>
    {
        R_ = C;
        G_ = X;
        B_ = 0.0;
    }
    else if( H >= 60.0 && H < 120.0 )
 242:	20 e0       	ldi	r18, 0x00	; 0
 244:	30 e0       	ldi	r19, 0x00	; 0
 246:	40 e7       	ldi	r20, 0x70	; 112
 248:	52 e4       	ldi	r21, 0x42	; 66
 24a:	c7 01       	movw	r24, r14
 24c:	b6 01       	movw	r22, r12
 24e:	0e 94 a3 05 	call	0xb46	; 0xb46 <__gesf2>
 252:	88 23       	and	r24, r24
 254:	5c f0       	brlt	.+22     	; 0x26c <hsvColor+0x1aa>
 256:	20 e0       	ldi	r18, 0x00	; 0
 258:	30 e0       	ldi	r19, 0x00	; 0
 25a:	40 ef       	ldi	r20, 0xF0	; 240
 25c:	52 e4       	ldi	r21, 0x42	; 66
 25e:	c7 01       	movw	r24, r14
 260:	b6 01       	movw	r22, r12
 262:	0e 94 c2 03 	call	0x784	; 0x784 <__cmpsf2>
 266:	88 23       	and	r24, r24
 268:	0c f4       	brge	.+2      	; 0x26c <hsvColor+0x1aa>
 26a:	4f c0       	rjmp	.+158    	; 0x30a <hsvColor+0x248>
    {
        R_ = X;
        G_ = C;
        B_ = 0.0;
    }
    else if( H >= 120.0 && H < 180.0 )
 26c:	20 e0       	ldi	r18, 0x00	; 0
 26e:	30 e0       	ldi	r19, 0x00	; 0
 270:	40 ef       	ldi	r20, 0xF0	; 240
 272:	52 e4       	ldi	r21, 0x42	; 66
 274:	c7 01       	movw	r24, r14
 276:	b6 01       	movw	r22, r12
 278:	0e 94 a3 05 	call	0xb46	; 0xb46 <__gesf2>
 27c:	88 23       	and	r24, r24
 27e:	5c f0       	brlt	.+22     	; 0x296 <hsvColor+0x1d4>
 280:	20 e0       	ldi	r18, 0x00	; 0
 282:	30 e0       	ldi	r19, 0x00	; 0
 284:	44 e3       	ldi	r20, 0x34	; 52
 286:	53 e4       	ldi	r21, 0x43	; 67
 288:	c7 01       	movw	r24, r14
 28a:	b6 01       	movw	r22, r12
 28c:	0e 94 c2 03 	call	0x784	; 0x784 <__cmpsf2>
 290:	88 23       	and	r24, r24
 292:	0c f4       	brge	.+2      	; 0x296 <hsvColor+0x1d4>
 294:	55 c0       	rjmp	.+170    	; 0x340 <hsvColor+0x27e>
    {
        R_ = 0.0;
        G_ = C;
        B_ = X;
    }
    else if( H >= 180.0 && H < 240.0 )
 296:	20 e0       	ldi	r18, 0x00	; 0
 298:	30 e0       	ldi	r19, 0x00	; 0
 29a:	44 e3       	ldi	r20, 0x34	; 52
 29c:	53 e4       	ldi	r21, 0x43	; 67
 29e:	c7 01       	movw	r24, r14
 2a0:	b6 01       	movw	r22, r12
 2a2:	0e 94 a3 05 	call	0xb46	; 0xb46 <__gesf2>
 2a6:	88 23       	and	r24, r24
 2a8:	54 f0       	brlt	.+20     	; 0x2be <hsvColor+0x1fc>
 2aa:	20 e0       	ldi	r18, 0x00	; 0
 2ac:	30 e0       	ldi	r19, 0x00	; 0
 2ae:	40 e7       	ldi	r20, 0x70	; 112
 2b0:	53 e4       	ldi	r21, 0x43	; 67
 2b2:	c7 01       	movw	r24, r14
 2b4:	b6 01       	movw	r22, r12
 2b6:	0e 94 c2 03 	call	0x784	; 0x784 <__cmpsf2>
 2ba:	88 23       	and	r24, r24
 2bc:	5c f1       	brlt	.+86     	; 0x314 <hsvColor+0x252>
    {
        R_ = 0.0;
        G_ = X;
        B_ = C;
    }
    else if( H >= 240.0 && H < 300.0 )
 2be:	20 e0       	ldi	r18, 0x00	; 0
 2c0:	30 e0       	ldi	r19, 0x00	; 0
 2c2:	40 e7       	ldi	r20, 0x70	; 112
 2c4:	53 e4       	ldi	r21, 0x43	; 67
 2c6:	c7 01       	movw	r24, r14
 2c8:	b6 01       	movw	r22, r12
 2ca:	0e 94 a3 05 	call	0xb46	; 0xb46 <__gesf2>
 2ce:	88 23       	and	r24, r24
 2d0:	74 f1       	brlt	.+92     	; 0x32e <hsvColor+0x26c>
 2d2:	20 e0       	ldi	r18, 0x00	; 0
 2d4:	30 e0       	ldi	r19, 0x00	; 0
 2d6:	46 e9       	ldi	r20, 0x96	; 150
 2d8:	53 e4       	ldi	r21, 0x43	; 67
 2da:	c7 01       	movw	r24, r14
 2dc:	b6 01       	movw	r22, r12
 2de:	0e 94 c2 03 	call	0x784	; 0x784 <__cmpsf2>
 2e2:	88 23       	and	r24, r24
 2e4:	4c f5       	brge	.+82     	; 0x338 <hsvColor+0x276>
    {
        R_ = X;
        G_ = 0.0;
        B_ = C;
 2e6:	7d 2e       	mov	r7, r29
 2e8:	6c 2e       	mov	r6, r28
 2ea:	51 2e       	mov	r5, r17
 2ec:	40 2e       	mov	r4, r16
        B_ = C;
    }
    else if( H >= 240.0 && H < 300.0 )
    {
        R_ = X;
        G_ = 0.0;
 2ee:	d0 e0       	ldi	r29, 0x00	; 0
 2f0:	c0 e0       	ldi	r28, 0x00	; 0
 2f2:	10 e0       	ldi	r17, 0x00	; 0
 2f4:	00 e0       	ldi	r16, 0x00	; 0
 2f6:	24 c0       	rjmp	.+72     	; 0x340 <hsvColor+0x27e>
    m = V - C;

    if( H >= 0.0 && H < 60.0 )
    {
        R_ = C;
        G_ = X;
 2f8:	d7 2d       	mov	r29, r7
 2fa:	c6 2d       	mov	r28, r6
 2fc:	15 2d       	mov	r17, r5
 2fe:	04 2d       	mov	r16, r4
        B_ = 0.0;
 300:	71 2c       	mov	r7, r1
 302:	61 2c       	mov	r6, r1
 304:	51 2c       	mov	r5, r1
 306:	41 2c       	mov	r4, r1
 308:	1b c0       	rjmp	.+54     	; 0x340 <hsvColor+0x27e>
    }
    else if( H >= 60.0 && H < 120.0 )
    {
        R_ = X;
        G_ = C;
        B_ = 0.0;
 30a:	71 2c       	mov	r7, r1
 30c:	61 2c       	mov	r6, r1
 30e:	51 2c       	mov	r5, r1
 310:	41 2c       	mov	r4, r1
 312:	16 c0       	rjmp	.+44     	; 0x340 <hsvColor+0x27e>
 314:	3d 2f       	mov	r19, r29
 316:	2c 2f       	mov	r18, r28
 318:	91 2f       	mov	r25, r17
 31a:	80 2f       	mov	r24, r16
        B_ = X;
    }
    else if( H >= 180.0 && H < 240.0 )
    {
        R_ = 0.0;
        G_ = X;
 31c:	d7 2d       	mov	r29, r7
 31e:	c6 2d       	mov	r28, r6
 320:	15 2d       	mov	r17, r5
 322:	04 2d       	mov	r16, r4
        B_ = C;
 324:	73 2e       	mov	r7, r19
 326:	62 2e       	mov	r6, r18
 328:	59 2e       	mov	r5, r25
 32a:	48 2e       	mov	r4, r24
 32c:	09 c0       	rjmp	.+18     	; 0x340 <hsvColor+0x27e>
        B_ = C;
    }
    else
    {
        R_ = C;
        G_ = 0.0;
 32e:	d0 e0       	ldi	r29, 0x00	; 0
 330:	c0 e0       	ldi	r28, 0x00	; 0
 332:	10 e0       	ldi	r17, 0x00	; 0
 334:	00 e0       	ldi	r16, 0x00	; 0
 336:	04 c0       	rjmp	.+8      	; 0x340 <hsvColor+0x27e>
 338:	d0 e0       	ldi	r29, 0x00	; 0
 33a:	c0 e0       	ldi	r28, 0x00	; 0
 33c:	10 e0       	ldi	r17, 0x00	; 0
 33e:	00 e0       	ldi	r16, 0x00	; 0

    R = (R_ + m) * 255;
    G = (G_ + m) * 255;
    B = (B_ + m) * 255;

    return rgbColor( (unsigned int)R, (unsigned int)G, (unsigned int)B );
 340:	a5 01       	movw	r20, r10
 342:	94 01       	movw	r18, r8
 344:	6d 2f       	mov	r22, r29
 346:	7c 2f       	mov	r23, r28
 348:	81 2f       	mov	r24, r17
 34a:	90 2f       	mov	r25, r16
 34c:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <__addsf3>
 350:	20 e0       	ldi	r18, 0x00	; 0
 352:	30 e0       	ldi	r19, 0x00	; 0
 354:	4f e7       	ldi	r20, 0x7F	; 127
 356:	53 e4       	ldi	r21, 0x43	; 67
 358:	0e 94 b0 05 	call	0xb60	; 0xb60 <__mulsf3>
 35c:	0e 94 39 04 	call	0x872	; 0x872 <__fixunssfsi>
 360:	d6 2f       	mov	r29, r22
 362:	80 e0       	ldi	r24, 0x00	; 0
 364:	c8 2f       	mov	r28, r24
 366:	a5 01       	movw	r20, r10
 368:	94 01       	movw	r18, r8
 36a:	67 2d       	mov	r22, r7
 36c:	76 2d       	mov	r23, r6
 36e:	85 2d       	mov	r24, r5
 370:	94 2d       	mov	r25, r4
 372:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <__addsf3>
 376:	20 e0       	ldi	r18, 0x00	; 0
 378:	30 e0       	ldi	r19, 0x00	; 0
 37a:	4f e7       	ldi	r20, 0x7F	; 127
 37c:	53 e4       	ldi	r21, 0x43	; 67
 37e:	0e 94 b0 05 	call	0xb60	; 0xb60 <__mulsf3>
 382:	0e 94 39 04 	call	0x872	; 0x872 <__fixunssfsi>
 386:	cb 01       	movw	r24, r22
 388:	99 27       	eor	r25, r25
 38a:	8c 2b       	or	r24, r28
 38c:	9d 2b       	or	r25, r29
 38e:	df 91       	pop	r29
 390:	cf 91       	pop	r28
 392:	1f 91       	pop	r17
 394:	0f 91       	pop	r16
 396:	ff 90       	pop	r15
 398:	ef 90       	pop	r14
 39a:	df 90       	pop	r13
 39c:	cf 90       	pop	r12
 39e:	bf 90       	pop	r11
 3a0:	af 90       	pop	r10
 3a2:	9f 90       	pop	r9
 3a4:	8f 90       	pop	r8
 3a6:	7f 90       	pop	r7
 3a8:	6f 90       	pop	r6
 3aa:	5f 90       	pop	r5
 3ac:	4f 90       	pop	r4
 3ae:	08 95       	ret

000003b0 <init_ADC>:
uint16_t duty = 0;
uint16_t all_result_x = 0;
uint16_t all_result_y = 0;

void init_ADC(){
	sei();
 3b0:	78 94       	sei
	ADMUX = 0b00000000;
 3b2:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
	ADCSRA = 0b11101111;
 3b6:	8f ee       	ldi	r24, 0xEF	; 239
 3b8:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
	ADCSRB = 0b00000000;
 3bc:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__DATA_REGION_ORIGIN__+0x1b>
 3c0:	08 95       	ret

000003c2 <__vector_21>:
}

ISR(ADC_vect){
 3c2:	1f 92       	push	r1
 3c4:	0f 92       	push	r0
 3c6:	0f b6       	in	r0, 0x3f	; 63
 3c8:	0f 92       	push	r0
 3ca:	11 24       	eor	r1, r1
 3cc:	2f 93       	push	r18
 3ce:	8f 93       	push	r24
 3d0:	9f 93       	push	r25
	uint8_t result_ADCH;
	uint8_t result_ADCL;
	result_ADCL = ADCL;
 3d2:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
	result_ADCH = ADCH;
 3d6:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
	//duty = abs(100 - all_result_first / 10) ;
	//set_duty(duty);
	if(ADMUX == 0b00000000){
 3da:	90 91 7c 00 	lds	r25, 0x007C	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
 3de:	91 11       	cpse	r25, r1
 3e0:	0a c0       	rjmp	.+20     	; 0x3f6 <__vector_21+0x34>
		all_result_x = (((uint16_t)result_ADCH << 8) | result_ADCL);	
 3e2:	90 e0       	ldi	r25, 0x00	; 0
 3e4:	92 2b       	or	r25, r18
 3e6:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <all_result_x+0x1>
 3ea:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <all_result_x>
		ADMUX = 0b00000001;
 3ee:	81 e0       	ldi	r24, 0x01	; 1
 3f0:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
 3f4:	08 c0       	rjmp	.+16     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
	}else{
		all_result_y = (((uint16_t)result_ADCH << 8) | result_ADCL);
 3f6:	90 e0       	ldi	r25, 0x00	; 0
 3f8:	92 2b       	or	r25, r18
 3fa:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
 3fe:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
		ADMUX = 0b00000000;
 402:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
	}
	cli();
 406:	f8 94       	cli
}
 408:	9f 91       	pop	r25
 40a:	8f 91       	pop	r24
 40c:	2f 91       	pop	r18
 40e:	0f 90       	pop	r0
 410:	0f be       	out	0x3f, r0	; 63
 412:	0f 90       	pop	r0
 414:	1f 90       	pop	r1
 416:	18 95       	reti

00000418 <main>:



int main(void)
{
 418:	cf 93       	push	r28
 41a:	df 93       	push	r29
 41c:	cd b7       	in	r28, 0x3d	; 61
 41e:	de b7       	in	r29, 0x3e	; 62
 420:	60 97       	sbiw	r28, 0x10	; 16
 422:	0f b6       	in	r0, 0x3f	; 63
 424:	f8 94       	cli
 426:	de bf       	out	0x3e, r29	; 62
 428:	0f be       	out	0x3f, r0	; 63
 42a:	cd bf       	out	0x3d, r28	; 61
	
	init_fast_pwm_first_channel();
 42c:	0e 94 c1 02 	call	0x582	; 0x582 <init_fast_pwm_first_channel>
	init_fast_pwm_second_channel();
 430:	0e 94 c8 02 	call	0x590	; 0x590 <init_fast_pwm_second_channel>
	init_fast_pwm_third_channel();
 434:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <init_fast_pwm_third_channel>
	init_ADC();
 438:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <init_ADC>
	
    while (1) 
    {
		volatile float x =  (((float)all_result_x - 512.0)) / 512.0;
 43c:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <all_result_x>
 440:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <all_result_x+0x1>
 444:	80 e0       	ldi	r24, 0x00	; 0
 446:	90 e0       	ldi	r25, 0x00	; 0
 448:	0e 94 68 04 	call	0x8d0	; 0x8d0 <__floatunsisf>
 44c:	20 e0       	ldi	r18, 0x00	; 0
 44e:	30 e0       	ldi	r19, 0x00	; 0
 450:	40 e0       	ldi	r20, 0x00	; 0
 452:	54 e4       	ldi	r21, 0x44	; 68
 454:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <__subsf3>
 458:	20 e0       	ldi	r18, 0x00	; 0
 45a:	30 e0       	ldi	r19, 0x00	; 0
 45c:	40 e0       	ldi	r20, 0x00	; 0
 45e:	5b e3       	ldi	r21, 0x3B	; 59
 460:	0e 94 b0 05 	call	0xb60	; 0xb60 <__mulsf3>
 464:	6d 83       	std	Y+5, r22	; 0x05
 466:	7e 83       	std	Y+6, r23	; 0x06
 468:	8f 83       	std	Y+7, r24	; 0x07
 46a:	98 87       	std	Y+8, r25	; 0x08
		volatile float y =  (((float)all_result_y - 512.0)) / 512.0;
 46c:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <_edata>
 470:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <_edata+0x1>
 474:	80 e0       	ldi	r24, 0x00	; 0
 476:	90 e0       	ldi	r25, 0x00	; 0
 478:	0e 94 68 04 	call	0x8d0	; 0x8d0 <__floatunsisf>
 47c:	20 e0       	ldi	r18, 0x00	; 0
 47e:	30 e0       	ldi	r19, 0x00	; 0
 480:	40 e0       	ldi	r20, 0x00	; 0
 482:	54 e4       	ldi	r21, 0x44	; 68
 484:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <__subsf3>
 488:	20 e0       	ldi	r18, 0x00	; 0
 48a:	30 e0       	ldi	r19, 0x00	; 0
 48c:	40 e0       	ldi	r20, 0x00	; 0
 48e:	5b e3       	ldi	r21, 0x3B	; 59
 490:	0e 94 b0 05 	call	0xb60	; 0xb60 <__mulsf3>
 494:	69 83       	std	Y+1, r22	; 0x01
 496:	7a 83       	std	Y+2, r23	; 0x02
 498:	8b 83       	std	Y+3, r24	; 0x03
 49a:	9c 83       	std	Y+4, r25	; 0x04
		float T = (sqrtf((x * x) + (y * y)))/ 1.414;
 49c:	cd 80       	ldd	r12, Y+5	; 0x05
 49e:	de 80       	ldd	r13, Y+6	; 0x06
 4a0:	ef 80       	ldd	r14, Y+7	; 0x07
 4a2:	f8 84       	ldd	r15, Y+8	; 0x08
 4a4:	8d 80       	ldd	r8, Y+5	; 0x05
 4a6:	9e 80       	ldd	r9, Y+6	; 0x06
 4a8:	af 80       	ldd	r10, Y+7	; 0x07
 4aa:	b8 84       	ldd	r11, Y+8	; 0x08
 4ac:	49 80       	ldd	r4, Y+1	; 0x01
 4ae:	5a 80       	ldd	r5, Y+2	; 0x02
 4b0:	6b 80       	ldd	r6, Y+3	; 0x03
 4b2:	7c 80       	ldd	r7, Y+4	; 0x04
 4b4:	89 81       	ldd	r24, Y+1	; 0x01
 4b6:	9a 81       	ldd	r25, Y+2	; 0x02
 4b8:	ab 81       	ldd	r26, Y+3	; 0x03
 4ba:	bc 81       	ldd	r27, Y+4	; 0x04
 4bc:	89 87       	std	Y+9, r24	; 0x09
 4be:	9a 87       	std	Y+10, r25	; 0x0a
 4c0:	ab 87       	std	Y+11, r26	; 0x0b
 4c2:	bc 87       	std	Y+12, r27	; 0x0c
 4c4:	a5 01       	movw	r20, r10
 4c6:	94 01       	movw	r18, r8
 4c8:	c7 01       	movw	r24, r14
 4ca:	b6 01       	movw	r22, r12
 4cc:	0e 94 b0 05 	call	0xb60	; 0xb60 <__mulsf3>
 4d0:	6d 87       	std	Y+13, r22	; 0x0d
 4d2:	7e 87       	std	Y+14, r23	; 0x0e
 4d4:	8f 87       	std	Y+15, r24	; 0x0f
 4d6:	98 8b       	std	Y+16, r25	; 0x10
 4d8:	a5 01       	movw	r20, r10
 4da:	94 01       	movw	r18, r8
 4dc:	c7 01       	movw	r24, r14
 4de:	b6 01       	movw	r22, r12
 4e0:	0e 94 b0 05 	call	0xb60	; 0xb60 <__mulsf3>
 4e4:	6b 01       	movw	r12, r22
 4e6:	7c 01       	movw	r14, r24
 4e8:	29 85       	ldd	r18, Y+9	; 0x09
 4ea:	3a 85       	ldd	r19, Y+10	; 0x0a
 4ec:	4b 85       	ldd	r20, Y+11	; 0x0b
 4ee:	5c 85       	ldd	r21, Y+12	; 0x0c
 4f0:	c3 01       	movw	r24, r6
 4f2:	b2 01       	movw	r22, r4
 4f4:	0e 94 b0 05 	call	0xb60	; 0xb60 <__mulsf3>
 4f8:	9b 01       	movw	r18, r22
 4fa:	ac 01       	movw	r20, r24
 4fc:	c7 01       	movw	r24, r14
 4fe:	b6 01       	movw	r22, r12
 500:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <__addsf3>
 504:	0e 94 23 06 	call	0xc46	; 0xc46 <sqrt>
 508:	4b 01       	movw	r8, r22
 50a:	5c 01       	movw	r10, r24
		float fi = atan2( y, x);
 50c:	2d 81       	ldd	r18, Y+5	; 0x05
 50e:	3e 81       	ldd	r19, Y+6	; 0x06
 510:	4f 81       	ldd	r20, Y+7	; 0x07
 512:	58 85       	ldd	r21, Y+8	; 0x08
 514:	69 81       	ldd	r22, Y+1	; 0x01
 516:	7a 81       	ldd	r23, Y+2	; 0x02
 518:	8b 81       	ldd	r24, Y+3	; 0x03
 51a:	9c 81       	ldd	r25, Y+4	; 0x04
 51c:	0e 94 63 03 	call	0x6c6	; 0x6c6 <atan2>
 520:	6b 01       	movw	r12, r22
 522:	7c 01       	movw	r14, r24
		float degree = (fi/M_PI) * 180.0;
		
		uint32_t RGB = hsvColor(degree, T, 1.0);
 524:	24 ef       	ldi	r18, 0xF4	; 244
 526:	3d ef       	ldi	r19, 0xFD	; 253
 528:	44 eb       	ldi	r20, 0xB4	; 180
 52a:	5f e3       	ldi	r21, 0x3F	; 63
 52c:	c5 01       	movw	r24, r10
 52e:	b4 01       	movw	r22, r8
 530:	0e 94 c7 03 	call	0x78e	; 0x78e <__divsf3>
 534:	4b 01       	movw	r8, r22
 536:	5c 01       	movw	r10, r24
 538:	2b ed       	ldi	r18, 0xDB	; 219
 53a:	3f e0       	ldi	r19, 0x0F	; 15
 53c:	49 e4       	ldi	r20, 0x49	; 73
 53e:	50 e4       	ldi	r21, 0x40	; 64
 540:	c7 01       	movw	r24, r14
 542:	b6 01       	movw	r22, r12
 544:	0e 94 c7 03 	call	0x78e	; 0x78e <__divsf3>
 548:	20 e0       	ldi	r18, 0x00	; 0
 54a:	30 e0       	ldi	r19, 0x00	; 0
 54c:	44 e3       	ldi	r20, 0x34	; 52
 54e:	53 e4       	ldi	r21, 0x43	; 67
 550:	0e 94 b0 05 	call	0xb60	; 0xb60 <__mulsf3>
 554:	e1 2c       	mov	r14, r1
 556:	f1 2c       	mov	r15, r1
 558:	00 e8       	ldi	r16, 0x80	; 128
 55a:	1f e3       	ldi	r17, 0x3F	; 63
 55c:	a5 01       	movw	r20, r10
 55e:	94 01       	movw	r18, r8
 560:	0e 94 61 00 	call	0xc2	; 0xc2 <hsvColor>
 564:	5c 01       	movw	r10, r24
 566:	6c 01       	movw	r12, r24
 568:	e1 2c       	mov	r14, r1
 56a:	f1 2c       	mov	r15, r1
		uint8_t G = 0 | (RGB >> 8);
		uint8_t B = 0 | (RGB >> 0);
		
		
			
		set_duty_R(R);
 56c:	8e 2d       	mov	r24, r14
 56e:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <set_duty_R>
		set_duty_B(B);
 572:	8a 2d       	mov	r24, r10
 574:	0e 94 da 02 	call	0x5b4	; 0x5b4 <set_duty_B>
		set_duty_G(G);
 578:	8d 2d       	mov	r24, r13
 57a:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <set_duty_G>
		sei();
 57e:	78 94       	sei
 580:	5d cf       	rjmp	.-326    	; 0x43c <main+0x24>

00000582 <init_fast_pwm_first_channel>:

void init_phase_correct_pwm(){
	
	DDRD |= 1 << 6;
	TCCR0A = 0b10000011;
	TCCR0B = 0b00000001;
 582:	80 e4       	ldi	r24, 0x40	; 64
 584:	8a b9       	out	0x0a, r24	; 10
 586:	83 e8       	ldi	r24, 0x83	; 131
 588:	84 bd       	out	0x24, r24	; 36
 58a:	83 e0       	ldi	r24, 0x03	; 3
 58c:	85 bd       	out	0x25, r24	; 37
 58e:	08 95       	ret

00000590 <init_fast_pwm_second_channel>:
 590:	21 9a       	sbi	0x04, 1	; 4
 592:	81 e8       	ldi	r24, 0x81	; 129
 594:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
 598:	8b e0       	ldi	r24, 0x0B	; 11
 59a:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
 59e:	08 95       	ret

000005a0 <init_fast_pwm_third_channel>:
 5a0:	23 9a       	sbi	0x04, 3	; 4
 5a2:	83 e8       	ldi	r24, 0x83	; 131
 5a4:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__DATA_REGION_ORIGIN__+0x50>
 5a8:	83 e0       	ldi	r24, 0x03	; 3
 5aa:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__DATA_REGION_ORIGIN__+0x51>
 5ae:	08 95       	ret

000005b0 <set_duty_R>:
	
}

void set_duty_R(uint8_t duty){
	OCR0A = duty;
 5b0:	87 bd       	out	0x27, r24	; 39
 5b2:	08 95       	ret

000005b4 <set_duty_B>:
}

void set_duty_B(uint8_t duty){
	OCR1A = duty;
 5b4:	90 e0       	ldi	r25, 0x00	; 0
 5b6:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
 5ba:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
 5be:	08 95       	ret

000005c0 <set_duty_G>:
}

void set_duty_G(uint8_t duty){
	OCR2A = duty ;
 5c0:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__DATA_REGION_ORIGIN__+0x53>
 5c4:	08 95       	ret

000005c6 <__subsf3>:
 5c6:	50 58       	subi	r21, 0x80	; 128

000005c8 <__addsf3>:
 5c8:	bb 27       	eor	r27, r27
 5ca:	aa 27       	eor	r26, r26
 5cc:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <__addsf3x>
 5d0:	0c 94 69 05 	jmp	0xad2	; 0xad2 <__fp_round>
 5d4:	0e 94 5b 05 	call	0xab6	; 0xab6 <__fp_pscA>
 5d8:	38 f0       	brcs	.+14     	; 0x5e8 <__addsf3+0x20>
 5da:	0e 94 62 05 	call	0xac4	; 0xac4 <__fp_pscB>
 5de:	20 f0       	brcs	.+8      	; 0x5e8 <__addsf3+0x20>
 5e0:	39 f4       	brne	.+14     	; 0x5f0 <__addsf3+0x28>
 5e2:	9f 3f       	cpi	r25, 0xFF	; 255
 5e4:	19 f4       	brne	.+6      	; 0x5ec <__addsf3+0x24>
 5e6:	26 f4       	brtc	.+8      	; 0x5f0 <__addsf3+0x28>
 5e8:	0c 94 31 05 	jmp	0xa62	; 0xa62 <__fp_nan>
 5ec:	0e f4       	brtc	.+2      	; 0x5f0 <__addsf3+0x28>
 5ee:	e0 95       	com	r30
 5f0:	e7 fb       	bst	r30, 7
 5f2:	0c 94 1d 05 	jmp	0xa3a	; 0xa3a <__fp_inf>

000005f6 <__addsf3x>:
 5f6:	e9 2f       	mov	r30, r25
 5f8:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <__fp_split3>
 5fc:	58 f3       	brcs	.-42     	; 0x5d4 <__addsf3+0xc>
 5fe:	ba 17       	cp	r27, r26
 600:	62 07       	cpc	r22, r18
 602:	73 07       	cpc	r23, r19
 604:	84 07       	cpc	r24, r20
 606:	95 07       	cpc	r25, r21
 608:	20 f0       	brcs	.+8      	; 0x612 <__addsf3x+0x1c>
 60a:	79 f4       	brne	.+30     	; 0x62a <__addsf3x+0x34>
 60c:	a6 f5       	brtc	.+104    	; 0x676 <__addsf3x+0x80>
 60e:	0c 94 9c 05 	jmp	0xb38	; 0xb38 <__fp_zero>
 612:	0e f4       	brtc	.+2      	; 0x616 <__addsf3x+0x20>
 614:	e0 95       	com	r30
 616:	0b 2e       	mov	r0, r27
 618:	ba 2f       	mov	r27, r26
 61a:	a0 2d       	mov	r26, r0
 61c:	0b 01       	movw	r0, r22
 61e:	b9 01       	movw	r22, r18
 620:	90 01       	movw	r18, r0
 622:	0c 01       	movw	r0, r24
 624:	ca 01       	movw	r24, r20
 626:	a0 01       	movw	r20, r0
 628:	11 24       	eor	r1, r1
 62a:	ff 27       	eor	r31, r31
 62c:	59 1b       	sub	r21, r25
 62e:	99 f0       	breq	.+38     	; 0x656 <__addsf3x+0x60>
 630:	59 3f       	cpi	r21, 0xF9	; 249
 632:	50 f4       	brcc	.+20     	; 0x648 <__addsf3x+0x52>
 634:	50 3e       	cpi	r21, 0xE0	; 224
 636:	68 f1       	brcs	.+90     	; 0x692 <__addsf3x+0x9c>
 638:	1a 16       	cp	r1, r26
 63a:	f0 40       	sbci	r31, 0x00	; 0
 63c:	a2 2f       	mov	r26, r18
 63e:	23 2f       	mov	r18, r19
 640:	34 2f       	mov	r19, r20
 642:	44 27       	eor	r20, r20
 644:	58 5f       	subi	r21, 0xF8	; 248
 646:	f3 cf       	rjmp	.-26     	; 0x62e <__addsf3x+0x38>
 648:	46 95       	lsr	r20
 64a:	37 95       	ror	r19
 64c:	27 95       	ror	r18
 64e:	a7 95       	ror	r26
 650:	f0 40       	sbci	r31, 0x00	; 0
 652:	53 95       	inc	r21
 654:	c9 f7       	brne	.-14     	; 0x648 <__addsf3x+0x52>
 656:	7e f4       	brtc	.+30     	; 0x676 <__addsf3x+0x80>
 658:	1f 16       	cp	r1, r31
 65a:	ba 0b       	sbc	r27, r26
 65c:	62 0b       	sbc	r22, r18
 65e:	73 0b       	sbc	r23, r19
 660:	84 0b       	sbc	r24, r20
 662:	ba f0       	brmi	.+46     	; 0x692 <__addsf3x+0x9c>
 664:	91 50       	subi	r25, 0x01	; 1
 666:	a1 f0       	breq	.+40     	; 0x690 <__addsf3x+0x9a>
 668:	ff 0f       	add	r31, r31
 66a:	bb 1f       	adc	r27, r27
 66c:	66 1f       	adc	r22, r22
 66e:	77 1f       	adc	r23, r23
 670:	88 1f       	adc	r24, r24
 672:	c2 f7       	brpl	.-16     	; 0x664 <__addsf3x+0x6e>
 674:	0e c0       	rjmp	.+28     	; 0x692 <__addsf3x+0x9c>
 676:	ba 0f       	add	r27, r26
 678:	62 1f       	adc	r22, r18
 67a:	73 1f       	adc	r23, r19
 67c:	84 1f       	adc	r24, r20
 67e:	48 f4       	brcc	.+18     	; 0x692 <__addsf3x+0x9c>
 680:	87 95       	ror	r24
 682:	77 95       	ror	r23
 684:	67 95       	ror	r22
 686:	b7 95       	ror	r27
 688:	f7 95       	ror	r31
 68a:	9e 3f       	cpi	r25, 0xFE	; 254
 68c:	08 f0       	brcs	.+2      	; 0x690 <__addsf3x+0x9a>
 68e:	b0 cf       	rjmp	.-160    	; 0x5f0 <__addsf3+0x28>
 690:	93 95       	inc	r25
 692:	88 0f       	add	r24, r24
 694:	08 f0       	brcs	.+2      	; 0x698 <__addsf3x+0xa2>
 696:	99 27       	eor	r25, r25
 698:	ee 0f       	add	r30, r30
 69a:	97 95       	ror	r25
 69c:	87 95       	ror	r24
 69e:	08 95       	ret
 6a0:	0e 94 5b 05 	call	0xab6	; 0xab6 <__fp_pscA>
 6a4:	60 f0       	brcs	.+24     	; 0x6be <__addsf3x+0xc8>
 6a6:	80 e8       	ldi	r24, 0x80	; 128
 6a8:	91 e0       	ldi	r25, 0x01	; 1
 6aa:	09 f4       	brne	.+2      	; 0x6ae <__addsf3x+0xb8>
 6ac:	9e ef       	ldi	r25, 0xFE	; 254
 6ae:	0e 94 62 05 	call	0xac4	; 0xac4 <__fp_pscB>
 6b2:	28 f0       	brcs	.+10     	; 0x6be <__addsf3x+0xc8>
 6b4:	40 e8       	ldi	r20, 0x80	; 128
 6b6:	51 e0       	ldi	r21, 0x01	; 1
 6b8:	71 f4       	brne	.+28     	; 0x6d6 <atan2+0x10>
 6ba:	5e ef       	ldi	r21, 0xFE	; 254
 6bc:	0c c0       	rjmp	.+24     	; 0x6d6 <atan2+0x10>
 6be:	0c 94 31 05 	jmp	0xa62	; 0xa62 <__fp_nan>
 6c2:	0c 94 9c 05 	jmp	0xb38	; 0xb38 <__fp_zero>

000006c6 <atan2>:
 6c6:	e9 2f       	mov	r30, r25
 6c8:	e0 78       	andi	r30, 0x80	; 128
 6ca:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <__fp_split3>
 6ce:	40 f3       	brcs	.-48     	; 0x6a0 <__addsf3x+0xaa>
 6d0:	09 2e       	mov	r0, r25
 6d2:	05 2a       	or	r0, r21
 6d4:	b1 f3       	breq	.-20     	; 0x6c2 <__addsf3x+0xcc>
 6d6:	26 17       	cp	r18, r22
 6d8:	37 07       	cpc	r19, r23
 6da:	48 07       	cpc	r20, r24
 6dc:	59 07       	cpc	r21, r25
 6de:	38 f0       	brcs	.+14     	; 0x6ee <atan2+0x28>
 6e0:	0e 2e       	mov	r0, r30
 6e2:	07 f8       	bld	r0, 7
 6e4:	e0 25       	eor	r30, r0
 6e6:	69 f0       	breq	.+26     	; 0x702 <atan2+0x3c>
 6e8:	e0 25       	eor	r30, r0
 6ea:	e0 64       	ori	r30, 0x40	; 64
 6ec:	0a c0       	rjmp	.+20     	; 0x702 <atan2+0x3c>
 6ee:	ef 63       	ori	r30, 0x3F	; 63
 6f0:	07 f8       	bld	r0, 7
 6f2:	00 94       	com	r0
 6f4:	07 fa       	bst	r0, 7
 6f6:	db 01       	movw	r26, r22
 6f8:	b9 01       	movw	r22, r18
 6fa:	9d 01       	movw	r18, r26
 6fc:	dc 01       	movw	r26, r24
 6fe:	ca 01       	movw	r24, r20
 700:	ad 01       	movw	r20, r26
 702:	ef 93       	push	r30
 704:	0e 94 de 03 	call	0x7bc	; 0x7bc <__divsf3_pse>
 708:	0e 94 69 05 	call	0xad2	; 0xad2 <__fp_round>
 70c:	0e 94 93 03 	call	0x726	; 0x726 <atan>
 710:	5f 91       	pop	r21
 712:	55 23       	and	r21, r21
 714:	39 f0       	breq	.+14     	; 0x724 <atan2+0x5e>
 716:	2b ed       	ldi	r18, 0xDB	; 219
 718:	3f e0       	ldi	r19, 0x0F	; 15
 71a:	49 e4       	ldi	r20, 0x49	; 73
 71c:	50 fd       	sbrc	r21, 0
 71e:	49 ec       	ldi	r20, 0xC9	; 201
 720:	0c 94 e4 02 	jmp	0x5c8	; 0x5c8 <__addsf3>
 724:	08 95       	ret

00000726 <atan>:
 726:	df 93       	push	r29
 728:	dd 27       	eor	r29, r29
 72a:	b9 2f       	mov	r27, r25
 72c:	bf 77       	andi	r27, 0x7F	; 127
 72e:	40 e8       	ldi	r20, 0x80	; 128
 730:	5f e3       	ldi	r21, 0x3F	; 63
 732:	16 16       	cp	r1, r22
 734:	17 06       	cpc	r1, r23
 736:	48 07       	cpc	r20, r24
 738:	5b 07       	cpc	r21, r27
 73a:	18 f4       	brcc	.+6      	; 0x742 <atan+0x1c>
 73c:	d9 2f       	mov	r29, r25
 73e:	0e 94 a8 05 	call	0xb50	; 0xb50 <inverse>
 742:	9f 93       	push	r25
 744:	8f 93       	push	r24
 746:	7f 93       	push	r23
 748:	6f 93       	push	r22
 74a:	0e 94 63 06 	call	0xcc6	; 0xcc6 <square>
 74e:	ec e6       	ldi	r30, 0x6C	; 108
 750:	f0 e0       	ldi	r31, 0x00	; 0
 752:	0e 94 34 05 	call	0xa68	; 0xa68 <__fp_powser>
 756:	0e 94 69 05 	call	0xad2	; 0xad2 <__fp_round>
 75a:	2f 91       	pop	r18
 75c:	3f 91       	pop	r19
 75e:	4f 91       	pop	r20
 760:	5f 91       	pop	r21
 762:	0e 94 c3 05 	call	0xb86	; 0xb86 <__mulsf3x>
 766:	dd 23       	and	r29, r29
 768:	51 f0       	breq	.+20     	; 0x77e <atan+0x58>
 76a:	90 58       	subi	r25, 0x80	; 128
 76c:	a2 ea       	ldi	r26, 0xA2	; 162
 76e:	2a ed       	ldi	r18, 0xDA	; 218
 770:	3f e0       	ldi	r19, 0x0F	; 15
 772:	49 ec       	ldi	r20, 0xC9	; 201
 774:	5f e3       	ldi	r21, 0x3F	; 63
 776:	d0 78       	andi	r29, 0x80	; 128
 778:	5d 27       	eor	r21, r29
 77a:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <__addsf3x>
 77e:	df 91       	pop	r29
 780:	0c 94 69 05 	jmp	0xad2	; 0xad2 <__fp_round>

00000784 <__cmpsf2>:
 784:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <__fp_cmp>
 788:	08 f4       	brcc	.+2      	; 0x78c <__cmpsf2+0x8>
 78a:	81 e0       	ldi	r24, 0x01	; 1
 78c:	08 95       	ret

0000078e <__divsf3>:
 78e:	0e 94 db 03 	call	0x7b6	; 0x7b6 <__divsf3x>
 792:	0c 94 69 05 	jmp	0xad2	; 0xad2 <__fp_round>
 796:	0e 94 62 05 	call	0xac4	; 0xac4 <__fp_pscB>
 79a:	58 f0       	brcs	.+22     	; 0x7b2 <__divsf3+0x24>
 79c:	0e 94 5b 05 	call	0xab6	; 0xab6 <__fp_pscA>
 7a0:	40 f0       	brcs	.+16     	; 0x7b2 <__divsf3+0x24>
 7a2:	29 f4       	brne	.+10     	; 0x7ae <__divsf3+0x20>
 7a4:	5f 3f       	cpi	r21, 0xFF	; 255
 7a6:	29 f0       	breq	.+10     	; 0x7b2 <__divsf3+0x24>
 7a8:	0c 94 1d 05 	jmp	0xa3a	; 0xa3a <__fp_inf>
 7ac:	51 11       	cpse	r21, r1
 7ae:	0c 94 9d 05 	jmp	0xb3a	; 0xb3a <__fp_szero>
 7b2:	0c 94 31 05 	jmp	0xa62	; 0xa62 <__fp_nan>

000007b6 <__divsf3x>:
 7b6:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <__fp_split3>
 7ba:	68 f3       	brcs	.-38     	; 0x796 <__divsf3+0x8>

000007bc <__divsf3_pse>:
 7bc:	99 23       	and	r25, r25
 7be:	b1 f3       	breq	.-20     	; 0x7ac <__divsf3+0x1e>
 7c0:	55 23       	and	r21, r21
 7c2:	91 f3       	breq	.-28     	; 0x7a8 <__divsf3+0x1a>
 7c4:	95 1b       	sub	r25, r21
 7c6:	55 0b       	sbc	r21, r21
 7c8:	bb 27       	eor	r27, r27
 7ca:	aa 27       	eor	r26, r26
 7cc:	62 17       	cp	r22, r18
 7ce:	73 07       	cpc	r23, r19
 7d0:	84 07       	cpc	r24, r20
 7d2:	38 f0       	brcs	.+14     	; 0x7e2 <__divsf3_pse+0x26>
 7d4:	9f 5f       	subi	r25, 0xFF	; 255
 7d6:	5f 4f       	sbci	r21, 0xFF	; 255
 7d8:	22 0f       	add	r18, r18
 7da:	33 1f       	adc	r19, r19
 7dc:	44 1f       	adc	r20, r20
 7de:	aa 1f       	adc	r26, r26
 7e0:	a9 f3       	breq	.-22     	; 0x7cc <__divsf3_pse+0x10>
 7e2:	35 d0       	rcall	.+106    	; 0x84e <__divsf3_pse+0x92>
 7e4:	0e 2e       	mov	r0, r30
 7e6:	3a f0       	brmi	.+14     	; 0x7f6 <__divsf3_pse+0x3a>
 7e8:	e0 e8       	ldi	r30, 0x80	; 128
 7ea:	32 d0       	rcall	.+100    	; 0x850 <__divsf3_pse+0x94>
 7ec:	91 50       	subi	r25, 0x01	; 1
 7ee:	50 40       	sbci	r21, 0x00	; 0
 7f0:	e6 95       	lsr	r30
 7f2:	00 1c       	adc	r0, r0
 7f4:	ca f7       	brpl	.-14     	; 0x7e8 <__divsf3_pse+0x2c>
 7f6:	2b d0       	rcall	.+86     	; 0x84e <__divsf3_pse+0x92>
 7f8:	fe 2f       	mov	r31, r30
 7fa:	29 d0       	rcall	.+82     	; 0x84e <__divsf3_pse+0x92>
 7fc:	66 0f       	add	r22, r22
 7fe:	77 1f       	adc	r23, r23
 800:	88 1f       	adc	r24, r24
 802:	bb 1f       	adc	r27, r27
 804:	26 17       	cp	r18, r22
 806:	37 07       	cpc	r19, r23
 808:	48 07       	cpc	r20, r24
 80a:	ab 07       	cpc	r26, r27
 80c:	b0 e8       	ldi	r27, 0x80	; 128
 80e:	09 f0       	breq	.+2      	; 0x812 <__divsf3_pse+0x56>
 810:	bb 0b       	sbc	r27, r27
 812:	80 2d       	mov	r24, r0
 814:	bf 01       	movw	r22, r30
 816:	ff 27       	eor	r31, r31
 818:	93 58       	subi	r25, 0x83	; 131
 81a:	5f 4f       	sbci	r21, 0xFF	; 255
 81c:	3a f0       	brmi	.+14     	; 0x82c <__divsf3_pse+0x70>
 81e:	9e 3f       	cpi	r25, 0xFE	; 254
 820:	51 05       	cpc	r21, r1
 822:	78 f0       	brcs	.+30     	; 0x842 <__divsf3_pse+0x86>
 824:	0c 94 1d 05 	jmp	0xa3a	; 0xa3a <__fp_inf>
 828:	0c 94 9d 05 	jmp	0xb3a	; 0xb3a <__fp_szero>
 82c:	5f 3f       	cpi	r21, 0xFF	; 255
 82e:	e4 f3       	brlt	.-8      	; 0x828 <__divsf3_pse+0x6c>
 830:	98 3e       	cpi	r25, 0xE8	; 232
 832:	d4 f3       	brlt	.-12     	; 0x828 <__divsf3_pse+0x6c>
 834:	86 95       	lsr	r24
 836:	77 95       	ror	r23
 838:	67 95       	ror	r22
 83a:	b7 95       	ror	r27
 83c:	f7 95       	ror	r31
 83e:	9f 5f       	subi	r25, 0xFF	; 255
 840:	c9 f7       	brne	.-14     	; 0x834 <__divsf3_pse+0x78>
 842:	88 0f       	add	r24, r24
 844:	91 1d       	adc	r25, r1
 846:	96 95       	lsr	r25
 848:	87 95       	ror	r24
 84a:	97 f9       	bld	r25, 7
 84c:	08 95       	ret
 84e:	e1 e0       	ldi	r30, 0x01	; 1
 850:	66 0f       	add	r22, r22
 852:	77 1f       	adc	r23, r23
 854:	88 1f       	adc	r24, r24
 856:	bb 1f       	adc	r27, r27
 858:	62 17       	cp	r22, r18
 85a:	73 07       	cpc	r23, r19
 85c:	84 07       	cpc	r24, r20
 85e:	ba 07       	cpc	r27, r26
 860:	20 f0       	brcs	.+8      	; 0x86a <__divsf3_pse+0xae>
 862:	62 1b       	sub	r22, r18
 864:	73 0b       	sbc	r23, r19
 866:	84 0b       	sbc	r24, r20
 868:	ba 0b       	sbc	r27, r26
 86a:	ee 1f       	adc	r30, r30
 86c:	88 f7       	brcc	.-30     	; 0x850 <__divsf3_pse+0x94>
 86e:	e0 95       	com	r30
 870:	08 95       	ret

00000872 <__fixunssfsi>:
 872:	0e 94 82 05 	call	0xb04	; 0xb04 <__fp_splitA>
 876:	88 f0       	brcs	.+34     	; 0x89a <__fixunssfsi+0x28>
 878:	9f 57       	subi	r25, 0x7F	; 127
 87a:	98 f0       	brcs	.+38     	; 0x8a2 <__fixunssfsi+0x30>
 87c:	b9 2f       	mov	r27, r25
 87e:	99 27       	eor	r25, r25
 880:	b7 51       	subi	r27, 0x17	; 23
 882:	b0 f0       	brcs	.+44     	; 0x8b0 <__fixunssfsi+0x3e>
 884:	e1 f0       	breq	.+56     	; 0x8be <__fixunssfsi+0x4c>
 886:	66 0f       	add	r22, r22
 888:	77 1f       	adc	r23, r23
 88a:	88 1f       	adc	r24, r24
 88c:	99 1f       	adc	r25, r25
 88e:	1a f0       	brmi	.+6      	; 0x896 <__fixunssfsi+0x24>
 890:	ba 95       	dec	r27
 892:	c9 f7       	brne	.-14     	; 0x886 <__fixunssfsi+0x14>
 894:	14 c0       	rjmp	.+40     	; 0x8be <__fixunssfsi+0x4c>
 896:	b1 30       	cpi	r27, 0x01	; 1
 898:	91 f0       	breq	.+36     	; 0x8be <__fixunssfsi+0x4c>
 89a:	0e 94 9c 05 	call	0xb38	; 0xb38 <__fp_zero>
 89e:	b1 e0       	ldi	r27, 0x01	; 1
 8a0:	08 95       	ret
 8a2:	0c 94 9c 05 	jmp	0xb38	; 0xb38 <__fp_zero>
 8a6:	67 2f       	mov	r22, r23
 8a8:	78 2f       	mov	r23, r24
 8aa:	88 27       	eor	r24, r24
 8ac:	b8 5f       	subi	r27, 0xF8	; 248
 8ae:	39 f0       	breq	.+14     	; 0x8be <__fixunssfsi+0x4c>
 8b0:	b9 3f       	cpi	r27, 0xF9	; 249
 8b2:	cc f3       	brlt	.-14     	; 0x8a6 <__fixunssfsi+0x34>
 8b4:	86 95       	lsr	r24
 8b6:	77 95       	ror	r23
 8b8:	67 95       	ror	r22
 8ba:	b3 95       	inc	r27
 8bc:	d9 f7       	brne	.-10     	; 0x8b4 <__fixunssfsi+0x42>
 8be:	3e f4       	brtc	.+14     	; 0x8ce <__fixunssfsi+0x5c>
 8c0:	90 95       	com	r25
 8c2:	80 95       	com	r24
 8c4:	70 95       	com	r23
 8c6:	61 95       	neg	r22
 8c8:	7f 4f       	sbci	r23, 0xFF	; 255
 8ca:	8f 4f       	sbci	r24, 0xFF	; 255
 8cc:	9f 4f       	sbci	r25, 0xFF	; 255
 8ce:	08 95       	ret

000008d0 <__floatunsisf>:
 8d0:	e8 94       	clt
 8d2:	09 c0       	rjmp	.+18     	; 0x8e6 <__floatsisf+0x12>

000008d4 <__floatsisf>:
 8d4:	97 fb       	bst	r25, 7
 8d6:	3e f4       	brtc	.+14     	; 0x8e6 <__floatsisf+0x12>
 8d8:	90 95       	com	r25
 8da:	80 95       	com	r24
 8dc:	70 95       	com	r23
 8de:	61 95       	neg	r22
 8e0:	7f 4f       	sbci	r23, 0xFF	; 255
 8e2:	8f 4f       	sbci	r24, 0xFF	; 255
 8e4:	9f 4f       	sbci	r25, 0xFF	; 255
 8e6:	99 23       	and	r25, r25
 8e8:	a9 f0       	breq	.+42     	; 0x914 <__floatsisf+0x40>
 8ea:	f9 2f       	mov	r31, r25
 8ec:	96 e9       	ldi	r25, 0x96	; 150
 8ee:	bb 27       	eor	r27, r27
 8f0:	93 95       	inc	r25
 8f2:	f6 95       	lsr	r31
 8f4:	87 95       	ror	r24
 8f6:	77 95       	ror	r23
 8f8:	67 95       	ror	r22
 8fa:	b7 95       	ror	r27
 8fc:	f1 11       	cpse	r31, r1
 8fe:	f8 cf       	rjmp	.-16     	; 0x8f0 <__floatsisf+0x1c>
 900:	fa f4       	brpl	.+62     	; 0x940 <__floatsisf+0x6c>
 902:	bb 0f       	add	r27, r27
 904:	11 f4       	brne	.+4      	; 0x90a <__floatsisf+0x36>
 906:	60 ff       	sbrs	r22, 0
 908:	1b c0       	rjmp	.+54     	; 0x940 <__floatsisf+0x6c>
 90a:	6f 5f       	subi	r22, 0xFF	; 255
 90c:	7f 4f       	sbci	r23, 0xFF	; 255
 90e:	8f 4f       	sbci	r24, 0xFF	; 255
 910:	9f 4f       	sbci	r25, 0xFF	; 255
 912:	16 c0       	rjmp	.+44     	; 0x940 <__floatsisf+0x6c>
 914:	88 23       	and	r24, r24
 916:	11 f0       	breq	.+4      	; 0x91c <__floatsisf+0x48>
 918:	96 e9       	ldi	r25, 0x96	; 150
 91a:	11 c0       	rjmp	.+34     	; 0x93e <__floatsisf+0x6a>
 91c:	77 23       	and	r23, r23
 91e:	21 f0       	breq	.+8      	; 0x928 <__floatsisf+0x54>
 920:	9e e8       	ldi	r25, 0x8E	; 142
 922:	87 2f       	mov	r24, r23
 924:	76 2f       	mov	r23, r22
 926:	05 c0       	rjmp	.+10     	; 0x932 <__floatsisf+0x5e>
 928:	66 23       	and	r22, r22
 92a:	71 f0       	breq	.+28     	; 0x948 <__floatsisf+0x74>
 92c:	96 e8       	ldi	r25, 0x86	; 134
 92e:	86 2f       	mov	r24, r22
 930:	70 e0       	ldi	r23, 0x00	; 0
 932:	60 e0       	ldi	r22, 0x00	; 0
 934:	2a f0       	brmi	.+10     	; 0x940 <__floatsisf+0x6c>
 936:	9a 95       	dec	r25
 938:	66 0f       	add	r22, r22
 93a:	77 1f       	adc	r23, r23
 93c:	88 1f       	adc	r24, r24
 93e:	da f7       	brpl	.-10     	; 0x936 <__floatsisf+0x62>
 940:	88 0f       	add	r24, r24
 942:	96 95       	lsr	r25
 944:	87 95       	ror	r24
 946:	97 f9       	bld	r25, 7
 948:	08 95       	ret
 94a:	0e 94 5b 05 	call	0xab6	; 0xab6 <__fp_pscA>
 94e:	20 f0       	brcs	.+8      	; 0x958 <__floatsisf+0x84>
 950:	19 f0       	breq	.+6      	; 0x958 <__floatsisf+0x84>
 952:	0e 94 62 05 	call	0xac4	; 0xac4 <__fp_pscB>
 956:	50 f4       	brcc	.+20     	; 0x96c <fmod+0xc>
 958:	0c 94 31 05 	jmp	0xa62	; 0xa62 <__fp_nan>
 95c:	0c 94 9d 05 	jmp	0xb3a	; 0xb3a <__fp_szero>

00000960 <fmod>:
 960:	e9 2f       	mov	r30, r25
 962:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <__fp_split3>
 966:	88 f3       	brcs	.-30     	; 0x94a <__floatsisf+0x76>
 968:	55 23       	and	r21, r21
 96a:	b1 f3       	breq	.-20     	; 0x958 <__floatsisf+0x84>
 96c:	e7 fb       	bst	r30, 7
 96e:	62 17       	cp	r22, r18
 970:	73 07       	cpc	r23, r19
 972:	84 07       	cpc	r24, r20
 974:	95 07       	cpc	r25, r21
 976:	a8 f1       	brcs	.+106    	; 0x9e2 <fmod+0x82>
 978:	89 f3       	breq	.-30     	; 0x95c <__floatsisf+0x88>
 97a:	e9 2f       	mov	r30, r25
 97c:	ff 27       	eor	r31, r31
 97e:	88 23       	and	r24, r24
 980:	2a f0       	brmi	.+10     	; 0x98c <fmod+0x2c>
 982:	31 97       	sbiw	r30, 0x01	; 1
 984:	66 0f       	add	r22, r22
 986:	77 1f       	adc	r23, r23
 988:	88 1f       	adc	r24, r24
 98a:	da f7       	brpl	.-10     	; 0x982 <fmod+0x22>
 98c:	95 2f       	mov	r25, r21
 98e:	55 27       	eor	r21, r21
 990:	44 23       	and	r20, r20
 992:	32 f0       	brmi	.+12     	; 0x9a0 <fmod+0x40>
 994:	91 50       	subi	r25, 0x01	; 1
 996:	50 40       	sbci	r21, 0x00	; 0
 998:	22 0f       	add	r18, r18
 99a:	33 1f       	adc	r19, r19
 99c:	44 1f       	adc	r20, r20
 99e:	d2 f7       	brpl	.-12     	; 0x994 <fmod+0x34>
 9a0:	bb 27       	eor	r27, r27
 9a2:	e9 1b       	sub	r30, r25
 9a4:	f5 0b       	sbc	r31, r21
 9a6:	62 1b       	sub	r22, r18
 9a8:	73 0b       	sbc	r23, r19
 9aa:	84 0b       	sbc	r24, r20
 9ac:	b1 09       	sbc	r27, r1
 9ae:	b1 f2       	breq	.-84     	; 0x95c <__floatsisf+0x88>
 9b0:	22 f4       	brpl	.+8      	; 0x9ba <fmod+0x5a>
 9b2:	62 0f       	add	r22, r18
 9b4:	73 1f       	adc	r23, r19
 9b6:	84 1f       	adc	r24, r20
 9b8:	b1 1d       	adc	r27, r1
 9ba:	31 97       	sbiw	r30, 0x01	; 1
 9bc:	2a f0       	brmi	.+10     	; 0x9c8 <fmod+0x68>
 9be:	66 0f       	add	r22, r22
 9c0:	77 1f       	adc	r23, r23
 9c2:	88 1f       	adc	r24, r24
 9c4:	bb 1f       	adc	r27, r27
 9c6:	ef cf       	rjmp	.-34     	; 0x9a6 <fmod+0x46>
 9c8:	91 50       	subi	r25, 0x01	; 1
 9ca:	50 40       	sbci	r21, 0x00	; 0
 9cc:	62 f0       	brmi	.+24     	; 0x9e6 <fmod+0x86>
 9ce:	41 f0       	breq	.+16     	; 0x9e0 <fmod+0x80>
 9d0:	88 23       	and	r24, r24
 9d2:	32 f0       	brmi	.+12     	; 0x9e0 <fmod+0x80>
 9d4:	66 0f       	add	r22, r22
 9d6:	77 1f       	adc	r23, r23
 9d8:	88 1f       	adc	r24, r24
 9da:	91 50       	subi	r25, 0x01	; 1
 9dc:	50 40       	sbci	r21, 0x00	; 0
 9de:	c1 f7       	brne	.-16     	; 0x9d0 <fmod+0x70>
 9e0:	93 95       	inc	r25
 9e2:	0c 94 23 05 	jmp	0xa46	; 0xa46 <__fp_mpack>
 9e6:	86 95       	lsr	r24
 9e8:	77 95       	ror	r23
 9ea:	67 95       	ror	r22
 9ec:	9f 5f       	subi	r25, 0xFF	; 255
 9ee:	d9 f7       	brne	.-10     	; 0x9e6 <fmod+0x86>
 9f0:	f7 cf       	rjmp	.-18     	; 0x9e0 <fmod+0x80>

000009f2 <__fp_cmp>:
 9f2:	99 0f       	add	r25, r25
 9f4:	00 08       	sbc	r0, r0
 9f6:	55 0f       	add	r21, r21
 9f8:	aa 0b       	sbc	r26, r26
 9fa:	e0 e8       	ldi	r30, 0x80	; 128
 9fc:	fe ef       	ldi	r31, 0xFE	; 254
 9fe:	16 16       	cp	r1, r22
 a00:	17 06       	cpc	r1, r23
 a02:	e8 07       	cpc	r30, r24
 a04:	f9 07       	cpc	r31, r25
 a06:	c0 f0       	brcs	.+48     	; 0xa38 <__fp_cmp+0x46>
 a08:	12 16       	cp	r1, r18
 a0a:	13 06       	cpc	r1, r19
 a0c:	e4 07       	cpc	r30, r20
 a0e:	f5 07       	cpc	r31, r21
 a10:	98 f0       	brcs	.+38     	; 0xa38 <__fp_cmp+0x46>
 a12:	62 1b       	sub	r22, r18
 a14:	73 0b       	sbc	r23, r19
 a16:	84 0b       	sbc	r24, r20
 a18:	95 0b       	sbc	r25, r21
 a1a:	39 f4       	brne	.+14     	; 0xa2a <__fp_cmp+0x38>
 a1c:	0a 26       	eor	r0, r26
 a1e:	61 f0       	breq	.+24     	; 0xa38 <__fp_cmp+0x46>
 a20:	23 2b       	or	r18, r19
 a22:	24 2b       	or	r18, r20
 a24:	25 2b       	or	r18, r21
 a26:	21 f4       	brne	.+8      	; 0xa30 <__fp_cmp+0x3e>
 a28:	08 95       	ret
 a2a:	0a 26       	eor	r0, r26
 a2c:	09 f4       	brne	.+2      	; 0xa30 <__fp_cmp+0x3e>
 a2e:	a1 40       	sbci	r26, 0x01	; 1
 a30:	a6 95       	lsr	r26
 a32:	8f ef       	ldi	r24, 0xFF	; 255
 a34:	81 1d       	adc	r24, r1
 a36:	81 1d       	adc	r24, r1
 a38:	08 95       	ret

00000a3a <__fp_inf>:
 a3a:	97 f9       	bld	r25, 7
 a3c:	9f 67       	ori	r25, 0x7F	; 127
 a3e:	80 e8       	ldi	r24, 0x80	; 128
 a40:	70 e0       	ldi	r23, 0x00	; 0
 a42:	60 e0       	ldi	r22, 0x00	; 0
 a44:	08 95       	ret

00000a46 <__fp_mpack>:
 a46:	9f 3f       	cpi	r25, 0xFF	; 255
 a48:	31 f0       	breq	.+12     	; 0xa56 <__fp_mpack_finite+0xc>

00000a4a <__fp_mpack_finite>:
 a4a:	91 50       	subi	r25, 0x01	; 1
 a4c:	20 f4       	brcc	.+8      	; 0xa56 <__fp_mpack_finite+0xc>
 a4e:	87 95       	ror	r24
 a50:	77 95       	ror	r23
 a52:	67 95       	ror	r22
 a54:	b7 95       	ror	r27
 a56:	88 0f       	add	r24, r24
 a58:	91 1d       	adc	r25, r1
 a5a:	96 95       	lsr	r25
 a5c:	87 95       	ror	r24
 a5e:	97 f9       	bld	r25, 7
 a60:	08 95       	ret

00000a62 <__fp_nan>:
 a62:	9f ef       	ldi	r25, 0xFF	; 255
 a64:	80 ec       	ldi	r24, 0xC0	; 192
 a66:	08 95       	ret

00000a68 <__fp_powser>:
 a68:	df 93       	push	r29
 a6a:	cf 93       	push	r28
 a6c:	1f 93       	push	r17
 a6e:	0f 93       	push	r16
 a70:	ff 92       	push	r15
 a72:	ef 92       	push	r14
 a74:	df 92       	push	r13
 a76:	7b 01       	movw	r14, r22
 a78:	8c 01       	movw	r16, r24
 a7a:	68 94       	set
 a7c:	06 c0       	rjmp	.+12     	; 0xa8a <__fp_powser+0x22>
 a7e:	da 2e       	mov	r13, r26
 a80:	ef 01       	movw	r28, r30
 a82:	0e 94 c3 05 	call	0xb86	; 0xb86 <__mulsf3x>
 a86:	fe 01       	movw	r30, r28
 a88:	e8 94       	clt
 a8a:	a5 91       	lpm	r26, Z+
 a8c:	25 91       	lpm	r18, Z+
 a8e:	35 91       	lpm	r19, Z+
 a90:	45 91       	lpm	r20, Z+
 a92:	55 91       	lpm	r21, Z+
 a94:	a6 f3       	brts	.-24     	; 0xa7e <__fp_powser+0x16>
 a96:	ef 01       	movw	r28, r30
 a98:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <__addsf3x>
 a9c:	fe 01       	movw	r30, r28
 a9e:	97 01       	movw	r18, r14
 aa0:	a8 01       	movw	r20, r16
 aa2:	da 94       	dec	r13
 aa4:	69 f7       	brne	.-38     	; 0xa80 <__fp_powser+0x18>
 aa6:	df 90       	pop	r13
 aa8:	ef 90       	pop	r14
 aaa:	ff 90       	pop	r15
 aac:	0f 91       	pop	r16
 aae:	1f 91       	pop	r17
 ab0:	cf 91       	pop	r28
 ab2:	df 91       	pop	r29
 ab4:	08 95       	ret

00000ab6 <__fp_pscA>:
 ab6:	00 24       	eor	r0, r0
 ab8:	0a 94       	dec	r0
 aba:	16 16       	cp	r1, r22
 abc:	17 06       	cpc	r1, r23
 abe:	18 06       	cpc	r1, r24
 ac0:	09 06       	cpc	r0, r25
 ac2:	08 95       	ret

00000ac4 <__fp_pscB>:
 ac4:	00 24       	eor	r0, r0
 ac6:	0a 94       	dec	r0
 ac8:	12 16       	cp	r1, r18
 aca:	13 06       	cpc	r1, r19
 acc:	14 06       	cpc	r1, r20
 ace:	05 06       	cpc	r0, r21
 ad0:	08 95       	ret

00000ad2 <__fp_round>:
 ad2:	09 2e       	mov	r0, r25
 ad4:	03 94       	inc	r0
 ad6:	00 0c       	add	r0, r0
 ad8:	11 f4       	brne	.+4      	; 0xade <__fp_round+0xc>
 ada:	88 23       	and	r24, r24
 adc:	52 f0       	brmi	.+20     	; 0xaf2 <__fp_round+0x20>
 ade:	bb 0f       	add	r27, r27
 ae0:	40 f4       	brcc	.+16     	; 0xaf2 <__fp_round+0x20>
 ae2:	bf 2b       	or	r27, r31
 ae4:	11 f4       	brne	.+4      	; 0xaea <__fp_round+0x18>
 ae6:	60 ff       	sbrs	r22, 0
 ae8:	04 c0       	rjmp	.+8      	; 0xaf2 <__fp_round+0x20>
 aea:	6f 5f       	subi	r22, 0xFF	; 255
 aec:	7f 4f       	sbci	r23, 0xFF	; 255
 aee:	8f 4f       	sbci	r24, 0xFF	; 255
 af0:	9f 4f       	sbci	r25, 0xFF	; 255
 af2:	08 95       	ret

00000af4 <__fp_split3>:
 af4:	57 fd       	sbrc	r21, 7
 af6:	90 58       	subi	r25, 0x80	; 128
 af8:	44 0f       	add	r20, r20
 afa:	55 1f       	adc	r21, r21
 afc:	59 f0       	breq	.+22     	; 0xb14 <__fp_splitA+0x10>
 afe:	5f 3f       	cpi	r21, 0xFF	; 255
 b00:	71 f0       	breq	.+28     	; 0xb1e <__fp_splitA+0x1a>
 b02:	47 95       	ror	r20

00000b04 <__fp_splitA>:
 b04:	88 0f       	add	r24, r24
 b06:	97 fb       	bst	r25, 7
 b08:	99 1f       	adc	r25, r25
 b0a:	61 f0       	breq	.+24     	; 0xb24 <__fp_splitA+0x20>
 b0c:	9f 3f       	cpi	r25, 0xFF	; 255
 b0e:	79 f0       	breq	.+30     	; 0xb2e <__fp_splitA+0x2a>
 b10:	87 95       	ror	r24
 b12:	08 95       	ret
 b14:	12 16       	cp	r1, r18
 b16:	13 06       	cpc	r1, r19
 b18:	14 06       	cpc	r1, r20
 b1a:	55 1f       	adc	r21, r21
 b1c:	f2 cf       	rjmp	.-28     	; 0xb02 <__fp_split3+0xe>
 b1e:	46 95       	lsr	r20
 b20:	f1 df       	rcall	.-30     	; 0xb04 <__fp_splitA>
 b22:	08 c0       	rjmp	.+16     	; 0xb34 <__fp_splitA+0x30>
 b24:	16 16       	cp	r1, r22
 b26:	17 06       	cpc	r1, r23
 b28:	18 06       	cpc	r1, r24
 b2a:	99 1f       	adc	r25, r25
 b2c:	f1 cf       	rjmp	.-30     	; 0xb10 <__fp_splitA+0xc>
 b2e:	86 95       	lsr	r24
 b30:	71 05       	cpc	r23, r1
 b32:	61 05       	cpc	r22, r1
 b34:	08 94       	sec
 b36:	08 95       	ret

00000b38 <__fp_zero>:
 b38:	e8 94       	clt

00000b3a <__fp_szero>:
 b3a:	bb 27       	eor	r27, r27
 b3c:	66 27       	eor	r22, r22
 b3e:	77 27       	eor	r23, r23
 b40:	cb 01       	movw	r24, r22
 b42:	97 f9       	bld	r25, 7
 b44:	08 95       	ret

00000b46 <__gesf2>:
 b46:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <__fp_cmp>
 b4a:	08 f4       	brcc	.+2      	; 0xb4e <__gesf2+0x8>
 b4c:	8f ef       	ldi	r24, 0xFF	; 255
 b4e:	08 95       	ret

00000b50 <inverse>:
 b50:	9b 01       	movw	r18, r22
 b52:	ac 01       	movw	r20, r24
 b54:	60 e0       	ldi	r22, 0x00	; 0
 b56:	70 e0       	ldi	r23, 0x00	; 0
 b58:	80 e8       	ldi	r24, 0x80	; 128
 b5a:	9f e3       	ldi	r25, 0x3F	; 63
 b5c:	0c 94 c7 03 	jmp	0x78e	; 0x78e <__divsf3>

00000b60 <__mulsf3>:
 b60:	0e 94 c3 05 	call	0xb86	; 0xb86 <__mulsf3x>
 b64:	0c 94 69 05 	jmp	0xad2	; 0xad2 <__fp_round>
 b68:	0e 94 5b 05 	call	0xab6	; 0xab6 <__fp_pscA>
 b6c:	38 f0       	brcs	.+14     	; 0xb7c <__mulsf3+0x1c>
 b6e:	0e 94 62 05 	call	0xac4	; 0xac4 <__fp_pscB>
 b72:	20 f0       	brcs	.+8      	; 0xb7c <__mulsf3+0x1c>
 b74:	95 23       	and	r25, r21
 b76:	11 f0       	breq	.+4      	; 0xb7c <__mulsf3+0x1c>
 b78:	0c 94 1d 05 	jmp	0xa3a	; 0xa3a <__fp_inf>
 b7c:	0c 94 31 05 	jmp	0xa62	; 0xa62 <__fp_nan>
 b80:	11 24       	eor	r1, r1
 b82:	0c 94 9d 05 	jmp	0xb3a	; 0xb3a <__fp_szero>

00000b86 <__mulsf3x>:
 b86:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <__fp_split3>
 b8a:	70 f3       	brcs	.-36     	; 0xb68 <__mulsf3+0x8>

00000b8c <__mulsf3_pse>:
 b8c:	95 9f       	mul	r25, r21
 b8e:	c1 f3       	breq	.-16     	; 0xb80 <__mulsf3+0x20>
 b90:	95 0f       	add	r25, r21
 b92:	50 e0       	ldi	r21, 0x00	; 0
 b94:	55 1f       	adc	r21, r21
 b96:	62 9f       	mul	r22, r18
 b98:	f0 01       	movw	r30, r0
 b9a:	72 9f       	mul	r23, r18
 b9c:	bb 27       	eor	r27, r27
 b9e:	f0 0d       	add	r31, r0
 ba0:	b1 1d       	adc	r27, r1
 ba2:	63 9f       	mul	r22, r19
 ba4:	aa 27       	eor	r26, r26
 ba6:	f0 0d       	add	r31, r0
 ba8:	b1 1d       	adc	r27, r1
 baa:	aa 1f       	adc	r26, r26
 bac:	64 9f       	mul	r22, r20
 bae:	66 27       	eor	r22, r22
 bb0:	b0 0d       	add	r27, r0
 bb2:	a1 1d       	adc	r26, r1
 bb4:	66 1f       	adc	r22, r22
 bb6:	82 9f       	mul	r24, r18
 bb8:	22 27       	eor	r18, r18
 bba:	b0 0d       	add	r27, r0
 bbc:	a1 1d       	adc	r26, r1
 bbe:	62 1f       	adc	r22, r18
 bc0:	73 9f       	mul	r23, r19
 bc2:	b0 0d       	add	r27, r0
 bc4:	a1 1d       	adc	r26, r1
 bc6:	62 1f       	adc	r22, r18
 bc8:	83 9f       	mul	r24, r19
 bca:	a0 0d       	add	r26, r0
 bcc:	61 1d       	adc	r22, r1
 bce:	22 1f       	adc	r18, r18
 bd0:	74 9f       	mul	r23, r20
 bd2:	33 27       	eor	r19, r19
 bd4:	a0 0d       	add	r26, r0
 bd6:	61 1d       	adc	r22, r1
 bd8:	23 1f       	adc	r18, r19
 bda:	84 9f       	mul	r24, r20
 bdc:	60 0d       	add	r22, r0
 bde:	21 1d       	adc	r18, r1
 be0:	82 2f       	mov	r24, r18
 be2:	76 2f       	mov	r23, r22
 be4:	6a 2f       	mov	r22, r26
 be6:	11 24       	eor	r1, r1
 be8:	9f 57       	subi	r25, 0x7F	; 127
 bea:	50 40       	sbci	r21, 0x00	; 0
 bec:	9a f0       	brmi	.+38     	; 0xc14 <__mulsf3_pse+0x88>
 bee:	f1 f0       	breq	.+60     	; 0xc2c <__mulsf3_pse+0xa0>
 bf0:	88 23       	and	r24, r24
 bf2:	4a f0       	brmi	.+18     	; 0xc06 <__mulsf3_pse+0x7a>
 bf4:	ee 0f       	add	r30, r30
 bf6:	ff 1f       	adc	r31, r31
 bf8:	bb 1f       	adc	r27, r27
 bfa:	66 1f       	adc	r22, r22
 bfc:	77 1f       	adc	r23, r23
 bfe:	88 1f       	adc	r24, r24
 c00:	91 50       	subi	r25, 0x01	; 1
 c02:	50 40       	sbci	r21, 0x00	; 0
 c04:	a9 f7       	brne	.-22     	; 0xbf0 <__mulsf3_pse+0x64>
 c06:	9e 3f       	cpi	r25, 0xFE	; 254
 c08:	51 05       	cpc	r21, r1
 c0a:	80 f0       	brcs	.+32     	; 0xc2c <__mulsf3_pse+0xa0>
 c0c:	0c 94 1d 05 	jmp	0xa3a	; 0xa3a <__fp_inf>
 c10:	0c 94 9d 05 	jmp	0xb3a	; 0xb3a <__fp_szero>
 c14:	5f 3f       	cpi	r21, 0xFF	; 255
 c16:	e4 f3       	brlt	.-8      	; 0xc10 <__mulsf3_pse+0x84>
 c18:	98 3e       	cpi	r25, 0xE8	; 232
 c1a:	d4 f3       	brlt	.-12     	; 0xc10 <__mulsf3_pse+0x84>
 c1c:	86 95       	lsr	r24
 c1e:	77 95       	ror	r23
 c20:	67 95       	ror	r22
 c22:	b7 95       	ror	r27
 c24:	f7 95       	ror	r31
 c26:	e7 95       	ror	r30
 c28:	9f 5f       	subi	r25, 0xFF	; 255
 c2a:	c1 f7       	brne	.-16     	; 0xc1c <__mulsf3_pse+0x90>
 c2c:	fe 2b       	or	r31, r30
 c2e:	88 0f       	add	r24, r24
 c30:	91 1d       	adc	r25, r1
 c32:	96 95       	lsr	r25
 c34:	87 95       	ror	r24
 c36:	97 f9       	bld	r25, 7
 c38:	08 95       	ret
 c3a:	19 f4       	brne	.+6      	; 0xc42 <__mulsf3_pse+0xb6>
 c3c:	16 f4       	brtc	.+4      	; 0xc42 <__mulsf3_pse+0xb6>
 c3e:	0c 94 31 05 	jmp	0xa62	; 0xa62 <__fp_nan>
 c42:	0c 94 23 05 	jmp	0xa46	; 0xa46 <__fp_mpack>

00000c46 <sqrt>:
 c46:	0e 94 82 05 	call	0xb04	; 0xb04 <__fp_splitA>
 c4a:	b8 f3       	brcs	.-18     	; 0xc3a <__mulsf3_pse+0xae>
 c4c:	99 23       	and	r25, r25
 c4e:	c9 f3       	breq	.-14     	; 0xc42 <__mulsf3_pse+0xb6>
 c50:	b6 f3       	brts	.-20     	; 0xc3e <__mulsf3_pse+0xb2>
 c52:	9f 57       	subi	r25, 0x7F	; 127
 c54:	55 0b       	sbc	r21, r21
 c56:	87 ff       	sbrs	r24, 7
 c58:	0e 94 67 06 	call	0xcce	; 0xcce <__fp_norm2>
 c5c:	00 24       	eor	r0, r0
 c5e:	a0 e6       	ldi	r26, 0x60	; 96
 c60:	40 ea       	ldi	r20, 0xA0	; 160
 c62:	90 01       	movw	r18, r0
 c64:	80 58       	subi	r24, 0x80	; 128
 c66:	56 95       	lsr	r21
 c68:	97 95       	ror	r25
 c6a:	28 f4       	brcc	.+10     	; 0xc76 <sqrt+0x30>
 c6c:	80 5c       	subi	r24, 0xC0	; 192
 c6e:	66 0f       	add	r22, r22
 c70:	77 1f       	adc	r23, r23
 c72:	88 1f       	adc	r24, r24
 c74:	20 f0       	brcs	.+8      	; 0xc7e <sqrt+0x38>
 c76:	26 17       	cp	r18, r22
 c78:	37 07       	cpc	r19, r23
 c7a:	48 07       	cpc	r20, r24
 c7c:	30 f4       	brcc	.+12     	; 0xc8a <sqrt+0x44>
 c7e:	62 1b       	sub	r22, r18
 c80:	73 0b       	sbc	r23, r19
 c82:	84 0b       	sbc	r24, r20
 c84:	20 29       	or	r18, r0
 c86:	31 29       	or	r19, r1
 c88:	4a 2b       	or	r20, r26
 c8a:	a6 95       	lsr	r26
 c8c:	17 94       	ror	r1
 c8e:	07 94       	ror	r0
 c90:	20 25       	eor	r18, r0
 c92:	31 25       	eor	r19, r1
 c94:	4a 27       	eor	r20, r26
 c96:	58 f7       	brcc	.-42     	; 0xc6e <sqrt+0x28>
 c98:	66 0f       	add	r22, r22
 c9a:	77 1f       	adc	r23, r23
 c9c:	88 1f       	adc	r24, r24
 c9e:	20 f0       	brcs	.+8      	; 0xca8 <sqrt+0x62>
 ca0:	26 17       	cp	r18, r22
 ca2:	37 07       	cpc	r19, r23
 ca4:	48 07       	cpc	r20, r24
 ca6:	30 f4       	brcc	.+12     	; 0xcb4 <sqrt+0x6e>
 ca8:	62 0b       	sbc	r22, r18
 caa:	73 0b       	sbc	r23, r19
 cac:	84 0b       	sbc	r24, r20
 cae:	20 0d       	add	r18, r0
 cb0:	31 1d       	adc	r19, r1
 cb2:	41 1d       	adc	r20, r1
 cb4:	a0 95       	com	r26
 cb6:	81 f7       	brne	.-32     	; 0xc98 <sqrt+0x52>
 cb8:	b9 01       	movw	r22, r18
 cba:	84 2f       	mov	r24, r20
 cbc:	91 58       	subi	r25, 0x81	; 129
 cbe:	88 0f       	add	r24, r24
 cc0:	96 95       	lsr	r25
 cc2:	87 95       	ror	r24
 cc4:	08 95       	ret

00000cc6 <square>:
 cc6:	9b 01       	movw	r18, r22
 cc8:	ac 01       	movw	r20, r24
 cca:	0c 94 b0 05 	jmp	0xb60	; 0xb60 <__mulsf3>

00000cce <__fp_norm2>:
 cce:	91 50       	subi	r25, 0x01	; 1
 cd0:	50 40       	sbci	r21, 0x00	; 0
 cd2:	66 0f       	add	r22, r22
 cd4:	77 1f       	adc	r23, r23
 cd6:	88 1f       	adc	r24, r24
 cd8:	d2 f7       	brpl	.-12     	; 0xcce <__fp_norm2>
 cda:	08 95       	ret

00000cdc <_exit>:
 cdc:	f8 94       	cli

00000cde <__stop_program>:
 cde:	ff cf       	rjmp	.-2      	; 0xcde <__stop_program>
