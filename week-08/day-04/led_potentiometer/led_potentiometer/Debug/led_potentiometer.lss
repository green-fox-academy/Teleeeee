
led_potentiometer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000d30  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000cbc  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800100  00800100  00000d30  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000d30  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d60  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00000da0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c1c  00000000  00000000  00000e28  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008c2  00000000  00000000  00001a44  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000527  00000000  00000000  00002306  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000164  00000000  00000000  00002830  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004cb  00000000  00000000  00002994  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000f5e  00000000  00000000  00002e5f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  00003dbd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__ctors_end>
   4:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
   8:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
   c:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  10:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  14:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  18:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  1c:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  20:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  24:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  28:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  2c:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  30:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  34:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  38:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  3c:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  40:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  44:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  48:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  4c:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  50:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  54:	0c 94 d6 01 	jmp	0x3ac	; 0x3ac <__vector_21>
  58:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  5c:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  60:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  64:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  68:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  6c:	08 4a       	sbci	r16, 0xA8	; 168
  6e:	d7 3b       	cpi	r29, 0xB7	; 183
  70:	3b ce       	rjmp	.-906    	; 0xfffffce8 <__eeprom_end+0xff7efce8>
  72:	01 6e       	ori	r16, 0xE1	; 225
  74:	84 bc       	out	0x24, r8	; 36
  76:	bf fd       	.word	0xfdbf	; ????
  78:	c1 2f       	mov	r28, r17
  7a:	3d 6c       	ori	r19, 0xCD	; 205
  7c:	74 31       	cpi	r23, 0x14	; 20
  7e:	9a bd       	out	0x2a, r25	; 42
  80:	56 83       	std	Z+6, r21	; 0x06
  82:	3d da       	rcall	.-2950   	; 0xfffff4fe <__eeprom_end+0xff7ef4fe>
  84:	3d 00       	.word	0x003d	; ????
  86:	c7 7f       	andi	r28, 0xF7	; 247
  88:	11 be       	out	0x31, r1	; 49
  8a:	d9 e4       	ldi	r29, 0x49	; 73
  8c:	bb 4c       	sbci	r27, 0xCB	; 203
  8e:	3e 91       	ld	r19, -X
  90:	6b aa       	std	Y+51, r6	; 0x33
  92:	aa be       	out	0x3a, r10	; 58
  94:	00 00       	nop
  96:	00 80       	ld	r0, Z
  98:	3f 00       	.word	0x003f	; ????

0000009a <__ctors_end>:
  9a:	11 24       	eor	r1, r1
  9c:	1f be       	out	0x3f, r1	; 63
  9e:	cf ef       	ldi	r28, 0xFF	; 255
  a0:	d4 e0       	ldi	r29, 0x04	; 4
  a2:	de bf       	out	0x3e, r29	; 62
  a4:	cd bf       	out	0x3d, r28	; 61

000000a6 <__do_clear_bss>:
  a6:	21 e0       	ldi	r18, 0x01	; 1
  a8:	a0 e0       	ldi	r26, 0x00	; 0
  aa:	b1 e0       	ldi	r27, 0x01	; 1
  ac:	01 c0       	rjmp	.+2      	; 0xb0 <.do_clear_bss_start>

000000ae <.do_clear_bss_loop>:
  ae:	1d 92       	st	X+, r1

000000b0 <.do_clear_bss_start>:
  b0:	a4 30       	cpi	r26, 0x04	; 4
  b2:	b2 07       	cpc	r27, r18
  b4:	e1 f7       	brne	.-8      	; 0xae <.do_clear_bss_loop>
  b6:	0e 94 01 02 	call	0x402	; 0x402 <main>
  ba:	0c 94 5c 06 	jmp	0xcb8	; 0xcb8 <_exit>

000000be <__bad_interrupt>:
  be:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c2 <HSVToRGB>:
	double H;
	double S;
	double V;
};

struct RGB HSVToRGB(struct HSV hsv) {
  c2:	2f 92       	push	r2
  c4:	3f 92       	push	r3
  c6:	4f 92       	push	r4
  c8:	5f 92       	push	r5
  ca:	6f 92       	push	r6
  cc:	7f 92       	push	r7
  ce:	8f 92       	push	r8
  d0:	9f 92       	push	r9
  d2:	af 92       	push	r10
  d4:	bf 92       	push	r11
  d6:	cf 92       	push	r12
  d8:	df 92       	push	r13
  da:	ef 92       	push	r14
  dc:	ff 92       	push	r15
  de:	0f 93       	push	r16
  e0:	1f 93       	push	r17
  e2:	cf 93       	push	r28
  e4:	df 93       	push	r29
  e6:	cd b7       	in	r28, 0x3d	; 61
  e8:	de b7       	in	r29, 0x3e	; 62
  ea:	62 97       	sbiw	r28, 0x12	; 18
  ec:	0f b6       	in	r0, 0x3f	; 63
  ee:	f8 94       	cli
  f0:	de bf       	out	0x3e, r29	; 62
  f2:	0f be       	out	0x3f, r0	; 63
  f4:	cd bf       	out	0x3d, r28	; 61
  f6:	e9 82       	std	Y+1, r14	; 0x01
  f8:	fa 82       	std	Y+2, r15	; 0x02
  fa:	0b 83       	std	Y+3, r16	; 0x03
  fc:	1c 83       	std	Y+4, r17	; 0x04
  fe:	2d 83       	std	Y+5, r18	; 0x05
 100:	3e 83       	std	Y+6, r19	; 0x06
 102:	4f 83       	std	Y+7, r20	; 0x07
 104:	58 87       	std	Y+8, r21	; 0x08
 106:	69 87       	std	Y+9, r22	; 0x09
 108:	7a 87       	std	Y+10, r23	; 0x0a
 10a:	8b 87       	std	Y+11, r24	; 0x0b
 10c:	9c 87       	std	Y+12, r25	; 0x0c
 10e:	89 80       	ldd	r8, Y+1	; 0x01
 110:	9a 80       	ldd	r9, Y+2	; 0x02
 112:	ab 80       	ldd	r10, Y+3	; 0x03
 114:	bc 80       	ldd	r11, Y+4	; 0x04
 116:	cd 80       	ldd	r12, Y+5	; 0x05
 118:	de 80       	ldd	r13, Y+6	; 0x06
 11a:	ef 80       	ldd	r14, Y+7	; 0x07
 11c:	f8 84       	ldd	r15, Y+8	; 0x08
 11e:	16 2f       	mov	r17, r22
 120:	07 2f       	mov	r16, r23
 122:	78 2e       	mov	r7, r24
 124:	69 2e       	mov	r6, r25
	double r = 0, g = 0, b = 0;

	if (hsv.S == 0)
 126:	20 e0       	ldi	r18, 0x00	; 0
 128:	30 e0       	ldi	r19, 0x00	; 0
 12a:	a9 01       	movw	r20, r18
 12c:	c7 01       	movw	r24, r14
 12e:	b6 01       	movw	r22, r12
 130:	0e 94 c4 03 	call	0x788	; 0x788 <__cmpsf2>
 134:	88 23       	and	r24, r24
 136:	09 f4       	brne	.+2      	; 0x13a <HSVToRGB+0x78>
 138:	c6 c0       	rjmp	.+396    	; 0x2c6 <HSVToRGB+0x204>
	else
	{
		int i;
		double f, p, q, t;

		if (hsv.H == 360)
 13a:	20 e0       	ldi	r18, 0x00	; 0
 13c:	30 e0       	ldi	r19, 0x00	; 0
 13e:	44 eb       	ldi	r20, 0xB4	; 180
 140:	53 e4       	ldi	r21, 0x43	; 67
 142:	c5 01       	movw	r24, r10
 144:	b4 01       	movw	r22, r8
 146:	0e 94 c4 03 	call	0x788	; 0x788 <__cmpsf2>
 14a:	88 23       	and	r24, r24
 14c:	09 f4       	brne	.+2      	; 0x150 <HSVToRGB+0x8e>
 14e:	cd c0       	rjmp	.+410    	; 0x2ea <HSVToRGB+0x228>
			hsv.H = 0;
		else
			hsv.H = hsv.H / 60;
 150:	20 e0       	ldi	r18, 0x00	; 0
 152:	30 e0       	ldi	r19, 0x00	; 0
 154:	40 e7       	ldi	r20, 0x70	; 112
 156:	52 e4       	ldi	r21, 0x42	; 66
 158:	c5 01       	movw	r24, r10
 15a:	b4 01       	movw	r22, r8
 15c:	0e 94 c9 03 	call	0x792	; 0x792 <__divsf3>
 160:	4b 01       	movw	r8, r22
 162:	5c 01       	movw	r10, r24

		i = (int)trunc(hsv.H);
 164:	0e 94 09 06 	call	0xc12	; 0xc12 <trunc>
 168:	0e 94 3b 04 	call	0x876	; 0x876 <__fixsfsi>
 16c:	7e 87       	std	Y+14, r23	; 0x0e
 16e:	6d 87       	std	Y+13, r22	; 0x0d
		f = hsv.H - i;
 170:	07 2e       	mov	r0, r23
 172:	00 0c       	add	r0, r0
 174:	88 0b       	sbc	r24, r24
 176:	99 0b       	sbc	r25, r25
 178:	0e 94 73 04 	call	0x8e6	; 0x8e6 <__floatsisf>
 17c:	9b 01       	movw	r18, r22
 17e:	ac 01       	movw	r20, r24
 180:	c5 01       	movw	r24, r10
 182:	b4 01       	movw	r22, r8
 184:	0e 94 28 03 	call	0x650	; 0x650 <__subsf3>
 188:	6f 87       	std	Y+15, r22	; 0x0f
 18a:	78 8b       	std	Y+16, r23	; 0x10
 18c:	89 8b       	std	Y+17, r24	; 0x11
 18e:	9a 8b       	std	Y+18, r25	; 0x12

		p = hsv.V * (1.0 - hsv.S);
 190:	a7 01       	movw	r20, r14
 192:	96 01       	movw	r18, r12
 194:	60 e0       	ldi	r22, 0x00	; 0
 196:	70 e0       	ldi	r23, 0x00	; 0
 198:	80 e8       	ldi	r24, 0x80	; 128
 19a:	9f e3       	ldi	r25, 0x3F	; 63
 19c:	0e 94 28 03 	call	0x650	; 0x650 <__subsf3>
 1a0:	21 2f       	mov	r18, r17
 1a2:	30 2f       	mov	r19, r16
 1a4:	47 2d       	mov	r20, r7
 1a6:	56 2d       	mov	r21, r6
 1a8:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__mulsf3>
 1ac:	56 2e       	mov	r5, r22
 1ae:	47 2e       	mov	r4, r23
 1b0:	38 2e       	mov	r3, r24
 1b2:	29 2e       	mov	r2, r25
		q = hsv.V * (1.0 - (hsv.S * f));
 1b4:	a7 01       	movw	r20, r14
 1b6:	96 01       	movw	r18, r12
 1b8:	6f 85       	ldd	r22, Y+15	; 0x0f
 1ba:	78 89       	ldd	r23, Y+16	; 0x10
 1bc:	89 89       	ldd	r24, Y+17	; 0x11
 1be:	9a 89       	ldd	r25, Y+18	; 0x12
 1c0:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__mulsf3>
 1c4:	9b 01       	movw	r18, r22
 1c6:	ac 01       	movw	r20, r24
 1c8:	60 e0       	ldi	r22, 0x00	; 0
 1ca:	70 e0       	ldi	r23, 0x00	; 0
 1cc:	80 e8       	ldi	r24, 0x80	; 128
 1ce:	9f e3       	ldi	r25, 0x3F	; 63
 1d0:	0e 94 28 03 	call	0x650	; 0x650 <__subsf3>
 1d4:	21 2f       	mov	r18, r17
 1d6:	30 2f       	mov	r19, r16
 1d8:	47 2d       	mov	r20, r7
 1da:	56 2d       	mov	r21, r6
 1dc:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__mulsf3>
 1e0:	86 2e       	mov	r8, r22
 1e2:	97 2e       	mov	r9, r23
 1e4:	a8 2e       	mov	r10, r24
 1e6:	b9 2e       	mov	r11, r25
		t = hsv.V * (1.0 - (hsv.S * (1.0 - f)));
 1e8:	2f 85       	ldd	r18, Y+15	; 0x0f
 1ea:	38 89       	ldd	r19, Y+16	; 0x10
 1ec:	49 89       	ldd	r20, Y+17	; 0x11
 1ee:	5a 89       	ldd	r21, Y+18	; 0x12
 1f0:	60 e0       	ldi	r22, 0x00	; 0
 1f2:	70 e0       	ldi	r23, 0x00	; 0
 1f4:	80 e8       	ldi	r24, 0x80	; 128
 1f6:	9f e3       	ldi	r25, 0x3F	; 63
 1f8:	0e 94 28 03 	call	0x650	; 0x650 <__subsf3>
 1fc:	a7 01       	movw	r20, r14
 1fe:	96 01       	movw	r18, r12
 200:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__mulsf3>
 204:	9b 01       	movw	r18, r22
 206:	ac 01       	movw	r20, r24
 208:	60 e0       	ldi	r22, 0x00	; 0
 20a:	70 e0       	ldi	r23, 0x00	; 0
 20c:	80 e8       	ldi	r24, 0x80	; 128
 20e:	9f e3       	ldi	r25, 0x3F	; 63
 210:	0e 94 28 03 	call	0x650	; 0x650 <__subsf3>
 214:	21 2f       	mov	r18, r17
 216:	30 2f       	mov	r19, r16
 218:	47 2d       	mov	r20, r7
 21a:	56 2d       	mov	r21, r6
 21c:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__mulsf3>

		switch (i)
 220:	2d 85       	ldd	r18, Y+13	; 0x0d
 222:	3e 85       	ldd	r19, Y+14	; 0x0e
 224:	22 30       	cpi	r18, 0x02	; 2
 226:	31 05       	cpc	r19, r1
 228:	19 f1       	breq	.+70     	; 0x270 <HSVToRGB+0x1ae>
 22a:	44 f4       	brge	.+16     	; 0x23c <HSVToRGB+0x17a>
 22c:	21 15       	cp	r18, r1
 22e:	31 05       	cpc	r19, r1
 230:	09 f4       	brne	.+2      	; 0x234 <HSVToRGB+0x172>
 232:	52 c0       	rjmp	.+164    	; 0x2d8 <HSVToRGB+0x216>
 234:	21 30       	cpi	r18, 0x01	; 1
 236:	31 05       	cpc	r19, r1
 238:	51 f0       	breq	.+20     	; 0x24e <HSVToRGB+0x18c>
 23a:	6d c0       	rjmp	.+218    	; 0x316 <HSVToRGB+0x254>
 23c:	2d 85       	ldd	r18, Y+13	; 0x0d
 23e:	3e 85       	ldd	r19, Y+14	; 0x0e
 240:	23 30       	cpi	r18, 0x03	; 3
 242:	31 05       	cpc	r19, r1
 244:	31 f1       	breq	.+76     	; 0x292 <HSVToRGB+0x1d0>
 246:	24 30       	cpi	r18, 0x04	; 4
 248:	31 05       	cpc	r19, r1
 24a:	a1 f1       	breq	.+104    	; 0x2b4 <HSVToRGB+0x1f2>
 24c:	64 c0       	rjmp	.+200    	; 0x316 <HSVToRGB+0x254>
 24e:	31 2f       	mov	r19, r17
 250:	20 2f       	mov	r18, r16
 252:	97 2d       	mov	r25, r7
 254:	86 2d       	mov	r24, r6

		i = (int)trunc(hsv.H);
		f = hsv.H - i;

		p = hsv.V * (1.0 - hsv.S);
		q = hsv.V * (1.0 - (hsv.S * f));
 256:	18 2d       	mov	r17, r8
 258:	09 2d       	mov	r16, r9
 25a:	7a 2c       	mov	r7, r10
 25c:	6b 2c       	mov	r6, r11
			hsv.H = hsv.H / 60;

		i = (int)trunc(hsv.H);
		f = hsv.H - i;

		p = hsv.V * (1.0 - hsv.S);
 25e:	85 2c       	mov	r8, r5
 260:	94 2c       	mov	r9, r4
 262:	a3 2c       	mov	r10, r3
 264:	b2 2c       	mov	r11, r2
			b = p;
			break;

		case 1:
			r = q;
			g = hsv.V;
 266:	53 2e       	mov	r5, r19
 268:	42 2e       	mov	r4, r18
 26a:	39 2e       	mov	r3, r25
 26c:	28 2e       	mov	r2, r24
 26e:	53 c0       	rjmp	.+166    	; 0x316 <HSVToRGB+0x254>
		i = (int)trunc(hsv.H);
		f = hsv.H - i;

		p = hsv.V * (1.0 - hsv.S);
		q = hsv.V * (1.0 - (hsv.S * f));
		t = hsv.V * (1.0 - (hsv.S * (1.0 - f)));
 270:	86 2e       	mov	r8, r22
 272:	97 2e       	mov	r9, r23
 274:	a8 2e       	mov	r10, r24
 276:	b9 2e       	mov	r11, r25

		case 2:
			r = p;
			g = hsv.V;
			b = t;
			break;
 278:	31 2f       	mov	r19, r17
 27a:	20 2f       	mov	r18, r16
 27c:	97 2d       	mov	r25, r7
 27e:	86 2d       	mov	r24, r6
			hsv.H = hsv.H / 60;

		i = (int)trunc(hsv.H);
		f = hsv.H - i;

		p = hsv.V * (1.0 - hsv.S);
 280:	15 2d       	mov	r17, r5
 282:	04 2d       	mov	r16, r4
 284:	73 2c       	mov	r7, r3
 286:	62 2c       	mov	r6, r2
			b = p;
			break;

		case 2:
			r = p;
			g = hsv.V;
 288:	53 2e       	mov	r5, r19
 28a:	42 2e       	mov	r4, r18
 28c:	39 2e       	mov	r3, r25
 28e:	28 2e       	mov	r2, r24
			b = t;
			break;
 290:	42 c0       	rjmp	.+132    	; 0x316 <HSVToRGB+0x254>

		case 3:
			r = p;
			g = q;
			b = hsv.V;
			break;
 292:	31 2f       	mov	r19, r17
 294:	20 2f       	mov	r18, r16
 296:	97 2d       	mov	r25, r7
 298:	86 2d       	mov	r24, r6
			hsv.H = hsv.H / 60;

		i = (int)trunc(hsv.H);
		f = hsv.H - i;

		p = hsv.V * (1.0 - hsv.S);
 29a:	15 2d       	mov	r17, r5
 29c:	04 2d       	mov	r16, r4
 29e:	73 2c       	mov	r7, r3
 2a0:	62 2c       	mov	r6, r2
		q = hsv.V * (1.0 - (hsv.S * f));
 2a2:	58 2c       	mov	r5, r8
 2a4:	49 2c       	mov	r4, r9
 2a6:	3a 2c       	mov	r3, r10
 2a8:	2b 2c       	mov	r2, r11
			break;

		case 3:
			r = p;
			g = q;
			b = hsv.V;
 2aa:	83 2e       	mov	r8, r19
 2ac:	92 2e       	mov	r9, r18
 2ae:	a9 2e       	mov	r10, r25
 2b0:	b8 2e       	mov	r11, r24
			break;
 2b2:	31 c0       	rjmp	.+98     	; 0x316 <HSVToRGB+0x254>

		case 4:
			r = t;
			g = p;
			b = hsv.V;
 2b4:	81 2e       	mov	r8, r17
 2b6:	90 2e       	mov	r9, r16
 2b8:	a7 2c       	mov	r10, r7
 2ba:	b6 2c       	mov	r11, r6
		i = (int)trunc(hsv.H);
		f = hsv.H - i;

		p = hsv.V * (1.0 - hsv.S);
		q = hsv.V * (1.0 - (hsv.S * f));
		t = hsv.V * (1.0 - (hsv.S * (1.0 - f)));
 2bc:	16 2f       	mov	r17, r22
 2be:	07 2f       	mov	r16, r23
 2c0:	78 2e       	mov	r7, r24
 2c2:	69 2e       	mov	r6, r25

		case 4:
			r = t;
			g = p;
			b = hsv.V;
			break;
 2c4:	28 c0       	rjmp	.+80     	; 0x316 <HSVToRGB+0x254>

	if (hsv.S == 0)
	{
		r = hsv.V;
		g = hsv.V;
		b = hsv.V;
 2c6:	81 2e       	mov	r8, r17
 2c8:	90 2e       	mov	r9, r16
 2ca:	a7 2c       	mov	r10, r7
 2cc:	b6 2c       	mov	r11, r6
	double r = 0, g = 0, b = 0;

	if (hsv.S == 0)
	{
		r = hsv.V;
		g = hsv.V;
 2ce:	51 2e       	mov	r5, r17
 2d0:	40 2e       	mov	r4, r16
 2d2:	37 2c       	mov	r3, r7
 2d4:	26 2c       	mov	r2, r6
 2d6:	1f c0       	rjmp	.+62     	; 0x316 <HSVToRGB+0x254>
			hsv.H = hsv.H / 60;

		i = (int)trunc(hsv.H);
		f = hsv.H - i;

		p = hsv.V * (1.0 - hsv.S);
 2d8:	85 2c       	mov	r8, r5
 2da:	94 2c       	mov	r9, r4
 2dc:	a3 2c       	mov	r10, r3
 2de:	b2 2c       	mov	r11, r2
		q = hsv.V * (1.0 - (hsv.S * f));
		t = hsv.V * (1.0 - (hsv.S * (1.0 - f)));
 2e0:	56 2e       	mov	r5, r22
 2e2:	47 2e       	mov	r4, r23
 2e4:	38 2e       	mov	r3, r24
 2e6:	29 2e       	mov	r2, r25
 2e8:	16 c0       	rjmp	.+44     	; 0x316 <HSVToRGB+0x254>
			hsv.H = hsv.H / 60;

		i = (int)trunc(hsv.H);
		f = hsv.H - i;

		p = hsv.V * (1.0 - hsv.S);
 2ea:	a7 01       	movw	r20, r14
 2ec:	96 01       	movw	r18, r12
 2ee:	60 e0       	ldi	r22, 0x00	; 0
 2f0:	70 e0       	ldi	r23, 0x00	; 0
 2f2:	80 e8       	ldi	r24, 0x80	; 128
 2f4:	9f e3       	ldi	r25, 0x3F	; 63
 2f6:	0e 94 28 03 	call	0x650	; 0x650 <__subsf3>
 2fa:	21 2f       	mov	r18, r17
 2fc:	30 2f       	mov	r19, r16
 2fe:	47 2d       	mov	r20, r7
 300:	56 2d       	mov	r21, r6
 302:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__mulsf3>
 306:	56 2e       	mov	r5, r22
 308:	47 2e       	mov	r4, r23
 30a:	38 2e       	mov	r3, r24
 30c:	29 2e       	mov	r2, r25
 30e:	86 2e       	mov	r8, r22
 310:	97 2e       	mov	r9, r23
 312:	a8 2e       	mov	r10, r24
 314:	b9 2e       	mov	r11, r25
	struct RGB rgb;
	rgb.R = r * 255;
	rgb.G = g * 255;
	rgb.B = b * 255;

	return rgb;
 316:	20 e0       	ldi	r18, 0x00	; 0
 318:	30 e0       	ldi	r19, 0x00	; 0
 31a:	4f e7       	ldi	r20, 0x7F	; 127
 31c:	53 e4       	ldi	r21, 0x43	; 67
 31e:	61 2f       	mov	r22, r17
 320:	70 2f       	mov	r23, r16
 322:	87 2d       	mov	r24, r7
 324:	96 2d       	mov	r25, r6
 326:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__mulsf3>
 32a:	0e 94 42 04 	call	0x884	; 0x884 <__fixunssfsi>
 32e:	16 2f       	mov	r17, r22
 330:	20 e0       	ldi	r18, 0x00	; 0
 332:	30 e0       	ldi	r19, 0x00	; 0
 334:	4f e7       	ldi	r20, 0x7F	; 127
 336:	53 e4       	ldi	r21, 0x43	; 67
 338:	65 2d       	mov	r22, r5
 33a:	74 2d       	mov	r23, r4
 33c:	83 2d       	mov	r24, r3
 33e:	92 2d       	mov	r25, r2
 340:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__mulsf3>
 344:	0e 94 42 04 	call	0x884	; 0x884 <__fixunssfsi>
 348:	06 2f       	mov	r16, r22
 34a:	20 e0       	ldi	r18, 0x00	; 0
 34c:	30 e0       	ldi	r19, 0x00	; 0
 34e:	4f e7       	ldi	r20, 0x7F	; 127
 350:	53 e4       	ldi	r21, 0x43	; 67
 352:	68 2d       	mov	r22, r8
 354:	79 2d       	mov	r23, r9
 356:	8a 2d       	mov	r24, r10
 358:	9b 2d       	mov	r25, r11
 35a:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__mulsf3>
 35e:	0e 94 42 04 	call	0x884	; 0x884 <__fixunssfsi>
 362:	86 2f       	mov	r24, r22
 364:	61 2f       	mov	r22, r17
 366:	70 2f       	mov	r23, r16
 368:	62 96       	adiw	r28, 0x12	; 18
 36a:	0f b6       	in	r0, 0x3f	; 63
 36c:	f8 94       	cli
 36e:	de bf       	out	0x3e, r29	; 62
 370:	0f be       	out	0x3f, r0	; 63
 372:	cd bf       	out	0x3d, r28	; 61
 374:	df 91       	pop	r29
 376:	cf 91       	pop	r28
 378:	1f 91       	pop	r17
 37a:	0f 91       	pop	r16
 37c:	ff 90       	pop	r15
 37e:	ef 90       	pop	r14
 380:	df 90       	pop	r13
 382:	cf 90       	pop	r12
 384:	bf 90       	pop	r11
 386:	af 90       	pop	r10
 388:	9f 90       	pop	r9
 38a:	8f 90       	pop	r8
 38c:	7f 90       	pop	r7
 38e:	6f 90       	pop	r6
 390:	5f 90       	pop	r5
 392:	4f 90       	pop	r4
 394:	3f 90       	pop	r3
 396:	2f 90       	pop	r2
 398:	08 95       	ret

0000039a <init_ADC>:
uint16_t duty = 0;
uint16_t all_result_x = 0;
uint16_t all_result_y = 0;

void init_ADC(){
	sei();
 39a:	78 94       	sei
	ADMUX = 0b00000000;
 39c:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
	
	ADCSRA = 0b11101111;
 3a0:	8f ee       	ldi	r24, 0xEF	; 239
 3a2:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
	ADCSRB = 0b00000000;
 3a6:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__DATA_REGION_ORIGIN__+0x1b>
 3aa:	08 95       	ret

000003ac <__vector_21>:
}

ISR(ADC_vect){
 3ac:	1f 92       	push	r1
 3ae:	0f 92       	push	r0
 3b0:	0f b6       	in	r0, 0x3f	; 63
 3b2:	0f 92       	push	r0
 3b4:	11 24       	eor	r1, r1
 3b6:	2f 93       	push	r18
 3b8:	8f 93       	push	r24
 3ba:	9f 93       	push	r25
	uint8_t result_ADCH;
	uint8_t result_ADCL;
	result_ADCL = ADCL;
 3bc:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
	result_ADCH = ADCH;
 3c0:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
	//duty = abs(100 - all_result_first / 10) ;
	//set_duty(duty);
	if(ADMUX == 0b00000000){
 3c4:	90 91 7c 00 	lds	r25, 0x007C	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
 3c8:	91 11       	cpse	r25, r1
 3ca:	0a c0       	rjmp	.+20     	; 0x3e0 <__vector_21+0x34>
		all_result_x = (((uint16_t)result_ADCH << 8) | result_ADCL);	
 3cc:	90 e0       	ldi	r25, 0x00	; 0
 3ce:	92 2b       	or	r25, r18
 3d0:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <all_result_x+0x1>
 3d4:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <all_result_x>
		ADMUX = 0b00000001;
 3d8:	81 e0       	ldi	r24, 0x01	; 1
 3da:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
 3de:	08 c0       	rjmp	.+16     	; 0x3f0 <__vector_21+0x44>
	}else{
		all_result_y = (((uint16_t)result_ADCH << 8) | result_ADCL);
 3e0:	90 e0       	ldi	r25, 0x00	; 0
 3e2:	92 2b       	or	r25, r18
 3e4:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
 3e8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
		ADMUX = 0b00000000;
 3ec:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
	}
	cli();
 3f0:	f8 94       	cli
}
 3f2:	9f 91       	pop	r25
 3f4:	8f 91       	pop	r24
 3f6:	2f 91       	pop	r18
 3f8:	0f 90       	pop	r0
 3fa:	0f be       	out	0x3f, r0	; 63
 3fc:	0f 90       	pop	r0
 3fe:	1f 90       	pop	r1
 400:	18 95       	reti

00000402 <main>:



int main(void)
{
 402:	cf 93       	push	r28
 404:	df 93       	push	r29
 406:	cd b7       	in	r28, 0x3d	; 61
 408:	de b7       	in	r29, 0x3e	; 62
 40a:	6f 97       	sbiw	r28, 0x1f	; 31
 40c:	0f b6       	in	r0, 0x3f	; 63
 40e:	f8 94       	cli
 410:	de bf       	out	0x3e, r29	; 62
 412:	0f be       	out	0x3f, r0	; 63
 414:	cd bf       	out	0x3d, r28	; 61
	
	init_fast_pwm_first_channel();
 416:	0e 94 b9 02 	call	0x572	; 0x572 <init_fast_pwm_first_channel>
	init_fast_pwm_second_channel();
 41a:	0e 94 c0 02 	call	0x580	; 0x580 <init_fast_pwm_second_channel>
	init_fast_pwm_third_channel();
 41e:	0e 94 c8 02 	call	0x590	; 0x590 <init_fast_pwm_third_channel>
	init_ADC();
 422:	0e 94 cd 01 	call	0x39a	; 0x39a <init_ADC>
	
    while (1) 
    {
		volatile float x =  (((float)all_result_x - 512.0)) / 512.0; 
 426:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <all_result_x>
 42a:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <all_result_x+0x1>
 42e:	80 e0       	ldi	r24, 0x00	; 0
 430:	90 e0       	ldi	r25, 0x00	; 0
 432:	0e 94 71 04 	call	0x8e2	; 0x8e2 <__floatunsisf>
 436:	20 e0       	ldi	r18, 0x00	; 0
 438:	30 e0       	ldi	r19, 0x00	; 0
 43a:	40 e0       	ldi	r20, 0x00	; 0
 43c:	54 e4       	ldi	r21, 0x44	; 68
 43e:	0e 94 28 03 	call	0x650	; 0x650 <__subsf3>
 442:	20 e0       	ldi	r18, 0x00	; 0
 444:	30 e0       	ldi	r19, 0x00	; 0
 446:	40 e0       	ldi	r20, 0x00	; 0
 448:	5b e3       	ldi	r21, 0x3B	; 59
 44a:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__mulsf3>
 44e:	69 8b       	std	Y+17, r22	; 0x11
 450:	7a 8b       	std	Y+18, r23	; 0x12
 452:	8b 8b       	std	Y+19, r24	; 0x13
 454:	9c 8b       	std	Y+20, r25	; 0x14
		volatile float y =  (((float)all_result_y - 512.0)) / 512.0;
 456:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <_edata>
 45a:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <_edata+0x1>
 45e:	80 e0       	ldi	r24, 0x00	; 0
 460:	90 e0       	ldi	r25, 0x00	; 0
 462:	0e 94 71 04 	call	0x8e2	; 0x8e2 <__floatunsisf>
 466:	20 e0       	ldi	r18, 0x00	; 0
 468:	30 e0       	ldi	r19, 0x00	; 0
 46a:	40 e0       	ldi	r20, 0x00	; 0
 46c:	54 e4       	ldi	r21, 0x44	; 68
 46e:	0e 94 28 03 	call	0x650	; 0x650 <__subsf3>
 472:	20 e0       	ldi	r18, 0x00	; 0
 474:	30 e0       	ldi	r19, 0x00	; 0
 476:	40 e0       	ldi	r20, 0x00	; 0
 478:	5b e3       	ldi	r21, 0x3B	; 59
 47a:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__mulsf3>
 47e:	6d 87       	std	Y+13, r22	; 0x0d
 480:	7e 87       	std	Y+14, r23	; 0x0e
 482:	8f 87       	std	Y+15, r24	; 0x0f
 484:	98 8b       	std	Y+16, r25	; 0x10
		float T = sqrtf((x * x) + (y * y));
 486:	c9 88       	ldd	r12, Y+17	; 0x11
 488:	da 88       	ldd	r13, Y+18	; 0x12
 48a:	eb 88       	ldd	r14, Y+19	; 0x13
 48c:	fc 88       	ldd	r15, Y+20	; 0x14
 48e:	89 88       	ldd	r8, Y+17	; 0x11
 490:	9a 88       	ldd	r9, Y+18	; 0x12
 492:	ab 88       	ldd	r10, Y+19	; 0x13
 494:	bc 88       	ldd	r11, Y+20	; 0x14
 496:	4d 84       	ldd	r4, Y+13	; 0x0d
 498:	5e 84       	ldd	r5, Y+14	; 0x0e
 49a:	6f 84       	ldd	r6, Y+15	; 0x0f
 49c:	78 88       	ldd	r7, Y+16	; 0x10
 49e:	8d 85       	ldd	r24, Y+13	; 0x0d
 4a0:	9e 85       	ldd	r25, Y+14	; 0x0e
 4a2:	af 85       	ldd	r26, Y+15	; 0x0f
 4a4:	b8 89       	ldd	r27, Y+16	; 0x10
 4a6:	88 8f       	std	Y+24, r24	; 0x18
 4a8:	99 8f       	std	Y+25, r25	; 0x19
 4aa:	aa 8f       	std	Y+26, r26	; 0x1a
 4ac:	bb 8f       	std	Y+27, r27	; 0x1b
 4ae:	a5 01       	movw	r20, r10
 4b0:	94 01       	movw	r18, r8
 4b2:	c7 01       	movw	r24, r14
 4b4:	b6 01       	movw	r22, r12
 4b6:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__mulsf3>
 4ba:	6c 8f       	std	Y+28, r22	; 0x1c
 4bc:	7d 8f       	std	Y+29, r23	; 0x1d
 4be:	8e 8f       	std	Y+30, r24	; 0x1e
 4c0:	9f 8f       	std	Y+31, r25	; 0x1f
 4c2:	a5 01       	movw	r20, r10
 4c4:	94 01       	movw	r18, r8
 4c6:	c7 01       	movw	r24, r14
 4c8:	b6 01       	movw	r22, r12
 4ca:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__mulsf3>
 4ce:	6b 01       	movw	r12, r22
 4d0:	7c 01       	movw	r14, r24
 4d2:	28 8d       	ldd	r18, Y+24	; 0x18
 4d4:	39 8d       	ldd	r19, Y+25	; 0x19
 4d6:	4a 8d       	ldd	r20, Y+26	; 0x1a
 4d8:	5b 8d       	ldd	r21, Y+27	; 0x1b
 4da:	c3 01       	movw	r24, r6
 4dc:	b2 01       	movw	r22, r4
 4de:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__mulsf3>
 4e2:	9b 01       	movw	r18, r22
 4e4:	ac 01       	movw	r20, r24
 4e6:	c7 01       	movw	r24, r14
 4e8:	b6 01       	movw	r22, r12
 4ea:	0e 94 29 03 	call	0x652	; 0x652 <__addsf3>
 4ee:	0e 94 c5 05 	call	0xb8a	; 0xb8a <sqrt>
 4f2:	f6 2e       	mov	r15, r22
 4f4:	b7 2e       	mov	r11, r23
 4f6:	c8 2e       	mov	r12, r24
 4f8:	d9 2e       	mov	r13, r25
		float pszi = atan((y/x));
 4fa:	6d 85       	ldd	r22, Y+13	; 0x0d
 4fc:	7e 85       	ldd	r23, Y+14	; 0x0e
 4fe:	8f 85       	ldd	r24, Y+15	; 0x0f
 500:	98 89       	ldd	r25, Y+16	; 0x10
 502:	29 89       	ldd	r18, Y+17	; 0x11
 504:	3a 89       	ldd	r19, Y+18	; 0x12
 506:	4b 89       	ldd	r20, Y+19	; 0x13
 508:	5c 89       	ldd	r21, Y+20	; 0x14
 50a:	0e 94 c9 03 	call	0x792	; 0x792 <__divsf3>
 50e:	0e 94 95 03 	call	0x72a	; 0x72a <atan>
		struct HSV data = {pszi, 0, T};
 512:	e6 2e       	mov	r14, r22
 514:	46 2f       	mov	r20, r22
 516:	57 2f       	mov	r21, r23
 518:	68 2f       	mov	r22, r24
 51a:	79 2f       	mov	r23, r25
 51c:	49 83       	std	Y+1, r20	; 0x01
 51e:	5a 83       	std	Y+2, r21	; 0x02
 520:	6b 83       	std	Y+3, r22	; 0x03
 522:	7c 83       	std	Y+4, r23	; 0x04
 524:	1d 82       	std	Y+5, r1	; 0x05
 526:	1e 82       	std	Y+6, r1	; 0x06
 528:	1f 82       	std	Y+7, r1	; 0x07
 52a:	18 86       	std	Y+8, r1	; 0x08
 52c:	6f 2d       	mov	r22, r15
 52e:	8f 2d       	mov	r24, r15
 530:	9b 2d       	mov	r25, r11
 532:	ac 2d       	mov	r26, r12
 534:	bd 2d       	mov	r27, r13
 536:	89 87       	std	Y+9, r24	; 0x09
 538:	9a 87       	std	Y+10, r25	; 0x0a
 53a:	ab 87       	std	Y+11, r26	; 0x0b
 53c:	bc 87       	std	Y+12, r27	; 0x0c
		struct RGB value = HSVToRGB(data);
 53e:	fa 80       	ldd	r15, Y+2	; 0x02
 540:	0b 81       	ldd	r16, Y+3	; 0x03
 542:	1c 81       	ldd	r17, Y+4	; 0x04
 544:	20 e0       	ldi	r18, 0x00	; 0
 546:	3e 81       	ldd	r19, Y+6	; 0x06
 548:	4f 81       	ldd	r20, Y+7	; 0x07
 54a:	58 85       	ldd	r21, Y+8	; 0x08
 54c:	7a 85       	ldd	r23, Y+10	; 0x0a
 54e:	8b 85       	ldd	r24, Y+11	; 0x0b
 550:	9c 85       	ldd	r25, Y+12	; 0x0c
 552:	0e 94 61 00 	call	0xc2	; 0xc2 <HSVToRGB>
		
		volatile uint8_t R = value.R;
 556:	6f 8b       	std	Y+23, r22	; 0x17
		volatile uint8_t B = value.B;
 558:	8e 8b       	std	Y+22, r24	; 0x16
		volatile uint8_t G = value.G;
 55a:	7d 8b       	std	Y+21, r23	; 0x15
			
		set_duty_R(R);
 55c:	8f 89       	ldd	r24, Y+23	; 0x17
 55e:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <set_duty_R>
		set_duty_B(B);
 562:	8e 89       	ldd	r24, Y+22	; 0x16
 564:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <set_duty_B>
		set_duty_G(G);
 568:	8d 89       	ldd	r24, Y+21	; 0x15
 56a:	0e 94 0b 03 	call	0x616	; 0x616 <set_duty_G>
		sei();
 56e:	78 94       	sei
 570:	5a cf       	rjmp	.-332    	; 0x426 <main+0x24>

00000572 <init_fast_pwm_first_channel>:

void init_phase_correct_pwm(){
	
	DDRD |= 1 << 6;
	TCCR0A = 0b10000011;
	TCCR0B = 0b00000001;
 572:	80 e4       	ldi	r24, 0x40	; 64
 574:	8a b9       	out	0x0a, r24	; 10
 576:	83 e8       	ldi	r24, 0x83	; 131
 578:	84 bd       	out	0x24, r24	; 36
 57a:	83 e0       	ldi	r24, 0x03	; 3
 57c:	85 bd       	out	0x25, r24	; 37
 57e:	08 95       	ret

00000580 <init_fast_pwm_second_channel>:
 580:	21 9a       	sbi	0x04, 1	; 4
 582:	81 e8       	ldi	r24, 0x81	; 129
 584:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
 588:	8f e0       	ldi	r24, 0x0F	; 15
 58a:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
 58e:	08 95       	ret

00000590 <init_fast_pwm_third_channel>:
 590:	23 9a       	sbi	0x04, 3	; 4
 592:	83 e8       	ldi	r24, 0x83	; 131
 594:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__DATA_REGION_ORIGIN__+0x50>
 598:	83 e0       	ldi	r24, 0x03	; 3
 59a:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__DATA_REGION_ORIGIN__+0x51>
 59e:	08 95       	ret

000005a0 <set_duty_R>:
	
}

void set_duty_R(uint8_t duty){
	OCR0A = ((duty/2.0) * 255)/100;
 5a0:	68 2f       	mov	r22, r24
 5a2:	70 e0       	ldi	r23, 0x00	; 0
 5a4:	80 e0       	ldi	r24, 0x00	; 0
 5a6:	90 e0       	ldi	r25, 0x00	; 0
 5a8:	0e 94 73 04 	call	0x8e6	; 0x8e6 <__floatsisf>
 5ac:	20 e0       	ldi	r18, 0x00	; 0
 5ae:	30 e0       	ldi	r19, 0x00	; 0
 5b0:	40 e0       	ldi	r20, 0x00	; 0
 5b2:	5f e3       	ldi	r21, 0x3F	; 63
 5b4:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__mulsf3>
 5b8:	20 e0       	ldi	r18, 0x00	; 0
 5ba:	30 e0       	ldi	r19, 0x00	; 0
 5bc:	4f e7       	ldi	r20, 0x7F	; 127
 5be:	53 e4       	ldi	r21, 0x43	; 67
 5c0:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__mulsf3>
 5c4:	20 e0       	ldi	r18, 0x00	; 0
 5c6:	30 e0       	ldi	r19, 0x00	; 0
 5c8:	48 ec       	ldi	r20, 0xC8	; 200
 5ca:	52 e4       	ldi	r21, 0x42	; 66
 5cc:	0e 94 c9 03 	call	0x792	; 0x792 <__divsf3>
 5d0:	0e 94 42 04 	call	0x884	; 0x884 <__fixunssfsi>
 5d4:	67 bd       	out	0x27, r22	; 39
 5d6:	08 95       	ret

000005d8 <set_duty_B>:
}

void set_duty_B(uint8_t duty){
	OCR1A = ((duty/2.0) * 255)/100;
 5d8:	68 2f       	mov	r22, r24
 5da:	70 e0       	ldi	r23, 0x00	; 0
 5dc:	80 e0       	ldi	r24, 0x00	; 0
 5de:	90 e0       	ldi	r25, 0x00	; 0
 5e0:	0e 94 73 04 	call	0x8e6	; 0x8e6 <__floatsisf>
 5e4:	20 e0       	ldi	r18, 0x00	; 0
 5e6:	30 e0       	ldi	r19, 0x00	; 0
 5e8:	40 e0       	ldi	r20, 0x00	; 0
 5ea:	5f e3       	ldi	r21, 0x3F	; 63
 5ec:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__mulsf3>
 5f0:	20 e0       	ldi	r18, 0x00	; 0
 5f2:	30 e0       	ldi	r19, 0x00	; 0
 5f4:	4f e7       	ldi	r20, 0x7F	; 127
 5f6:	53 e4       	ldi	r21, 0x43	; 67
 5f8:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__mulsf3>
 5fc:	20 e0       	ldi	r18, 0x00	; 0
 5fe:	30 e0       	ldi	r19, 0x00	; 0
 600:	48 ec       	ldi	r20, 0xC8	; 200
 602:	52 e4       	ldi	r21, 0x42	; 66
 604:	0e 94 c9 03 	call	0x792	; 0x792 <__divsf3>
 608:	0e 94 42 04 	call	0x884	; 0x884 <__fixunssfsi>
 60c:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
 610:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
 614:	08 95       	ret

00000616 <set_duty_G>:
}

void set_duty_G(uint8_t duty){
	OCR2A = ((duty/2.0) * 255)/100;
 616:	68 2f       	mov	r22, r24
 618:	70 e0       	ldi	r23, 0x00	; 0
 61a:	80 e0       	ldi	r24, 0x00	; 0
 61c:	90 e0       	ldi	r25, 0x00	; 0
 61e:	0e 94 73 04 	call	0x8e6	; 0x8e6 <__floatsisf>
 622:	20 e0       	ldi	r18, 0x00	; 0
 624:	30 e0       	ldi	r19, 0x00	; 0
 626:	40 e0       	ldi	r20, 0x00	; 0
 628:	5f e3       	ldi	r21, 0x3F	; 63
 62a:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__mulsf3>
 62e:	20 e0       	ldi	r18, 0x00	; 0
 630:	30 e0       	ldi	r19, 0x00	; 0
 632:	4f e7       	ldi	r20, 0x7F	; 127
 634:	53 e4       	ldi	r21, 0x43	; 67
 636:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__mulsf3>
 63a:	20 e0       	ldi	r18, 0x00	; 0
 63c:	30 e0       	ldi	r19, 0x00	; 0
 63e:	48 ec       	ldi	r20, 0xC8	; 200
 640:	52 e4       	ldi	r21, 0x42	; 66
 642:	0e 94 c9 03 	call	0x792	; 0x792 <__divsf3>
 646:	0e 94 42 04 	call	0x884	; 0x884 <__fixunssfsi>
 64a:	60 93 b3 00 	sts	0x00B3, r22	; 0x8000b3 <__DATA_REGION_ORIGIN__+0x53>
 64e:	08 95       	ret

00000650 <__subsf3>:
 650:	50 58       	subi	r21, 0x80	; 128

00000652 <__addsf3>:
 652:	bb 27       	eor	r27, r27
 654:	aa 27       	eor	r26, r26
 656:	0e 94 40 03 	call	0x680	; 0x680 <__addsf3x>
 65a:	0c 94 10 05 	jmp	0xa20	; 0xa20 <__fp_round>
 65e:	0e 94 02 05 	call	0xa04	; 0xa04 <__fp_pscA>
 662:	38 f0       	brcs	.+14     	; 0x672 <__addsf3+0x20>
 664:	0e 94 09 05 	call	0xa12	; 0xa12 <__fp_pscB>
 668:	20 f0       	brcs	.+8      	; 0x672 <__addsf3+0x20>
 66a:	39 f4       	brne	.+14     	; 0x67a <__addsf3+0x28>
 66c:	9f 3f       	cpi	r25, 0xFF	; 255
 66e:	19 f4       	brne	.+6      	; 0x676 <__addsf3+0x24>
 670:	26 f4       	brtc	.+8      	; 0x67a <__addsf3+0x28>
 672:	0c 94 d8 04 	jmp	0x9b0	; 0x9b0 <__fp_nan>
 676:	0e f4       	brtc	.+2      	; 0x67a <__addsf3+0x28>
 678:	e0 95       	com	r30
 67a:	e7 fb       	bst	r30, 7
 67c:	0c 94 d2 04 	jmp	0x9a4	; 0x9a4 <__fp_inf>

00000680 <__addsf3x>:
 680:	e9 2f       	mov	r30, r25
 682:	0e 94 21 05 	call	0xa42	; 0xa42 <__fp_split3>
 686:	58 f3       	brcs	.-42     	; 0x65e <__addsf3+0xc>
 688:	ba 17       	cp	r27, r26
 68a:	62 07       	cpc	r22, r18
 68c:	73 07       	cpc	r23, r19
 68e:	84 07       	cpc	r24, r20
 690:	95 07       	cpc	r25, r21
 692:	20 f0       	brcs	.+8      	; 0x69c <__addsf3x+0x1c>
 694:	79 f4       	brne	.+30     	; 0x6b4 <__addsf3x+0x34>
 696:	a6 f5       	brtc	.+104    	; 0x700 <__addsf3x+0x80>
 698:	0c 94 43 05 	jmp	0xa86	; 0xa86 <__fp_zero>
 69c:	0e f4       	brtc	.+2      	; 0x6a0 <__addsf3x+0x20>
 69e:	e0 95       	com	r30
 6a0:	0b 2e       	mov	r0, r27
 6a2:	ba 2f       	mov	r27, r26
 6a4:	a0 2d       	mov	r26, r0
 6a6:	0b 01       	movw	r0, r22
 6a8:	b9 01       	movw	r22, r18
 6aa:	90 01       	movw	r18, r0
 6ac:	0c 01       	movw	r0, r24
 6ae:	ca 01       	movw	r24, r20
 6b0:	a0 01       	movw	r20, r0
 6b2:	11 24       	eor	r1, r1
 6b4:	ff 27       	eor	r31, r31
 6b6:	59 1b       	sub	r21, r25
 6b8:	99 f0       	breq	.+38     	; 0x6e0 <__addsf3x+0x60>
 6ba:	59 3f       	cpi	r21, 0xF9	; 249
 6bc:	50 f4       	brcc	.+20     	; 0x6d2 <__addsf3x+0x52>
 6be:	50 3e       	cpi	r21, 0xE0	; 224
 6c0:	68 f1       	brcs	.+90     	; 0x71c <__addsf3x+0x9c>
 6c2:	1a 16       	cp	r1, r26
 6c4:	f0 40       	sbci	r31, 0x00	; 0
 6c6:	a2 2f       	mov	r26, r18
 6c8:	23 2f       	mov	r18, r19
 6ca:	34 2f       	mov	r19, r20
 6cc:	44 27       	eor	r20, r20
 6ce:	58 5f       	subi	r21, 0xF8	; 248
 6d0:	f3 cf       	rjmp	.-26     	; 0x6b8 <__addsf3x+0x38>
 6d2:	46 95       	lsr	r20
 6d4:	37 95       	ror	r19
 6d6:	27 95       	ror	r18
 6d8:	a7 95       	ror	r26
 6da:	f0 40       	sbci	r31, 0x00	; 0
 6dc:	53 95       	inc	r21
 6de:	c9 f7       	brne	.-14     	; 0x6d2 <__addsf3x+0x52>
 6e0:	7e f4       	brtc	.+30     	; 0x700 <__addsf3x+0x80>
 6e2:	1f 16       	cp	r1, r31
 6e4:	ba 0b       	sbc	r27, r26
 6e6:	62 0b       	sbc	r22, r18
 6e8:	73 0b       	sbc	r23, r19
 6ea:	84 0b       	sbc	r24, r20
 6ec:	ba f0       	brmi	.+46     	; 0x71c <__addsf3x+0x9c>
 6ee:	91 50       	subi	r25, 0x01	; 1
 6f0:	a1 f0       	breq	.+40     	; 0x71a <__addsf3x+0x9a>
 6f2:	ff 0f       	add	r31, r31
 6f4:	bb 1f       	adc	r27, r27
 6f6:	66 1f       	adc	r22, r22
 6f8:	77 1f       	adc	r23, r23
 6fa:	88 1f       	adc	r24, r24
 6fc:	c2 f7       	brpl	.-16     	; 0x6ee <__addsf3x+0x6e>
 6fe:	0e c0       	rjmp	.+28     	; 0x71c <__addsf3x+0x9c>
 700:	ba 0f       	add	r27, r26
 702:	62 1f       	adc	r22, r18
 704:	73 1f       	adc	r23, r19
 706:	84 1f       	adc	r24, r20
 708:	48 f4       	brcc	.+18     	; 0x71c <__addsf3x+0x9c>
 70a:	87 95       	ror	r24
 70c:	77 95       	ror	r23
 70e:	67 95       	ror	r22
 710:	b7 95       	ror	r27
 712:	f7 95       	ror	r31
 714:	9e 3f       	cpi	r25, 0xFE	; 254
 716:	08 f0       	brcs	.+2      	; 0x71a <__addsf3x+0x9a>
 718:	b0 cf       	rjmp	.-160    	; 0x67a <__addsf3+0x28>
 71a:	93 95       	inc	r25
 71c:	88 0f       	add	r24, r24
 71e:	08 f0       	brcs	.+2      	; 0x722 <__addsf3x+0xa2>
 720:	99 27       	eor	r25, r25
 722:	ee 0f       	add	r30, r30
 724:	97 95       	ror	r25
 726:	87 95       	ror	r24
 728:	08 95       	ret

0000072a <atan>:
 72a:	df 93       	push	r29
 72c:	dd 27       	eor	r29, r29
 72e:	b9 2f       	mov	r27, r25
 730:	bf 77       	andi	r27, 0x7F	; 127
 732:	40 e8       	ldi	r20, 0x80	; 128
 734:	5f e3       	ldi	r21, 0x3F	; 63
 736:	16 16       	cp	r1, r22
 738:	17 06       	cpc	r1, r23
 73a:	48 07       	cpc	r20, r24
 73c:	5b 07       	cpc	r21, r27
 73e:	18 f4       	brcc	.+6      	; 0x746 <atan+0x1c>
 740:	d9 2f       	mov	r29, r25
 742:	0e 94 4a 05 	call	0xa94	; 0xa94 <inverse>
 746:	9f 93       	push	r25
 748:	8f 93       	push	r24
 74a:	7f 93       	push	r23
 74c:	6f 93       	push	r22
 74e:	0e 94 05 06 	call	0xc0a	; 0xc0a <square>
 752:	ec e6       	ldi	r30, 0x6C	; 108
 754:	f0 e0       	ldi	r31, 0x00	; 0
 756:	0e 94 db 04 	call	0x9b6	; 0x9b6 <__fp_powser>
 75a:	0e 94 10 05 	call	0xa20	; 0xa20 <__fp_round>
 75e:	2f 91       	pop	r18
 760:	3f 91       	pop	r19
 762:	4f 91       	pop	r20
 764:	5f 91       	pop	r21
 766:	0e 94 65 05 	call	0xaca	; 0xaca <__mulsf3x>
 76a:	dd 23       	and	r29, r29
 76c:	51 f0       	breq	.+20     	; 0x782 <atan+0x58>
 76e:	90 58       	subi	r25, 0x80	; 128
 770:	a2 ea       	ldi	r26, 0xA2	; 162
 772:	2a ed       	ldi	r18, 0xDA	; 218
 774:	3f e0       	ldi	r19, 0x0F	; 15
 776:	49 ec       	ldi	r20, 0xC9	; 201
 778:	5f e3       	ldi	r21, 0x3F	; 63
 77a:	d0 78       	andi	r29, 0x80	; 128
 77c:	5d 27       	eor	r21, r29
 77e:	0e 94 40 03 	call	0x680	; 0x680 <__addsf3x>
 782:	df 91       	pop	r29
 784:	0c 94 10 05 	jmp	0xa20	; 0xa20 <__fp_round>

00000788 <__cmpsf2>:
 788:	0e 94 ae 04 	call	0x95c	; 0x95c <__fp_cmp>
 78c:	08 f4       	brcc	.+2      	; 0x790 <__cmpsf2+0x8>
 78e:	81 e0       	ldi	r24, 0x01	; 1
 790:	08 95       	ret

00000792 <__divsf3>:
 792:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__divsf3x>
 796:	0c 94 10 05 	jmp	0xa20	; 0xa20 <__fp_round>
 79a:	0e 94 09 05 	call	0xa12	; 0xa12 <__fp_pscB>
 79e:	58 f0       	brcs	.+22     	; 0x7b6 <__divsf3+0x24>
 7a0:	0e 94 02 05 	call	0xa04	; 0xa04 <__fp_pscA>
 7a4:	40 f0       	brcs	.+16     	; 0x7b6 <__divsf3+0x24>
 7a6:	29 f4       	brne	.+10     	; 0x7b2 <__divsf3+0x20>
 7a8:	5f 3f       	cpi	r21, 0xFF	; 255
 7aa:	29 f0       	breq	.+10     	; 0x7b6 <__divsf3+0x24>
 7ac:	0c 94 d2 04 	jmp	0x9a4	; 0x9a4 <__fp_inf>
 7b0:	51 11       	cpse	r21, r1
 7b2:	0c 94 44 05 	jmp	0xa88	; 0xa88 <__fp_szero>
 7b6:	0c 94 d8 04 	jmp	0x9b0	; 0x9b0 <__fp_nan>

000007ba <__divsf3x>:
 7ba:	0e 94 21 05 	call	0xa42	; 0xa42 <__fp_split3>
 7be:	68 f3       	brcs	.-38     	; 0x79a <__divsf3+0x8>

000007c0 <__divsf3_pse>:
 7c0:	99 23       	and	r25, r25
 7c2:	b1 f3       	breq	.-20     	; 0x7b0 <__divsf3+0x1e>
 7c4:	55 23       	and	r21, r21
 7c6:	91 f3       	breq	.-28     	; 0x7ac <__divsf3+0x1a>
 7c8:	95 1b       	sub	r25, r21
 7ca:	55 0b       	sbc	r21, r21
 7cc:	bb 27       	eor	r27, r27
 7ce:	aa 27       	eor	r26, r26
 7d0:	62 17       	cp	r22, r18
 7d2:	73 07       	cpc	r23, r19
 7d4:	84 07       	cpc	r24, r20
 7d6:	38 f0       	brcs	.+14     	; 0x7e6 <__divsf3_pse+0x26>
 7d8:	9f 5f       	subi	r25, 0xFF	; 255
 7da:	5f 4f       	sbci	r21, 0xFF	; 255
 7dc:	22 0f       	add	r18, r18
 7de:	33 1f       	adc	r19, r19
 7e0:	44 1f       	adc	r20, r20
 7e2:	aa 1f       	adc	r26, r26
 7e4:	a9 f3       	breq	.-22     	; 0x7d0 <__divsf3_pse+0x10>
 7e6:	35 d0       	rcall	.+106    	; 0x852 <__divsf3_pse+0x92>
 7e8:	0e 2e       	mov	r0, r30
 7ea:	3a f0       	brmi	.+14     	; 0x7fa <__divsf3_pse+0x3a>
 7ec:	e0 e8       	ldi	r30, 0x80	; 128
 7ee:	32 d0       	rcall	.+100    	; 0x854 <__divsf3_pse+0x94>
 7f0:	91 50       	subi	r25, 0x01	; 1
 7f2:	50 40       	sbci	r21, 0x00	; 0
 7f4:	e6 95       	lsr	r30
 7f6:	00 1c       	adc	r0, r0
 7f8:	ca f7       	brpl	.-14     	; 0x7ec <__divsf3_pse+0x2c>
 7fa:	2b d0       	rcall	.+86     	; 0x852 <__divsf3_pse+0x92>
 7fc:	fe 2f       	mov	r31, r30
 7fe:	29 d0       	rcall	.+82     	; 0x852 <__divsf3_pse+0x92>
 800:	66 0f       	add	r22, r22
 802:	77 1f       	adc	r23, r23
 804:	88 1f       	adc	r24, r24
 806:	bb 1f       	adc	r27, r27
 808:	26 17       	cp	r18, r22
 80a:	37 07       	cpc	r19, r23
 80c:	48 07       	cpc	r20, r24
 80e:	ab 07       	cpc	r26, r27
 810:	b0 e8       	ldi	r27, 0x80	; 128
 812:	09 f0       	breq	.+2      	; 0x816 <__divsf3_pse+0x56>
 814:	bb 0b       	sbc	r27, r27
 816:	80 2d       	mov	r24, r0
 818:	bf 01       	movw	r22, r30
 81a:	ff 27       	eor	r31, r31
 81c:	93 58       	subi	r25, 0x83	; 131
 81e:	5f 4f       	sbci	r21, 0xFF	; 255
 820:	3a f0       	brmi	.+14     	; 0x830 <__divsf3_pse+0x70>
 822:	9e 3f       	cpi	r25, 0xFE	; 254
 824:	51 05       	cpc	r21, r1
 826:	78 f0       	brcs	.+30     	; 0x846 <__divsf3_pse+0x86>
 828:	0c 94 d2 04 	jmp	0x9a4	; 0x9a4 <__fp_inf>
 82c:	0c 94 44 05 	jmp	0xa88	; 0xa88 <__fp_szero>
 830:	5f 3f       	cpi	r21, 0xFF	; 255
 832:	e4 f3       	brlt	.-8      	; 0x82c <__divsf3_pse+0x6c>
 834:	98 3e       	cpi	r25, 0xE8	; 232
 836:	d4 f3       	brlt	.-12     	; 0x82c <__divsf3_pse+0x6c>
 838:	86 95       	lsr	r24
 83a:	77 95       	ror	r23
 83c:	67 95       	ror	r22
 83e:	b7 95       	ror	r27
 840:	f7 95       	ror	r31
 842:	9f 5f       	subi	r25, 0xFF	; 255
 844:	c9 f7       	brne	.-14     	; 0x838 <__divsf3_pse+0x78>
 846:	88 0f       	add	r24, r24
 848:	91 1d       	adc	r25, r1
 84a:	96 95       	lsr	r25
 84c:	87 95       	ror	r24
 84e:	97 f9       	bld	r25, 7
 850:	08 95       	ret
 852:	e1 e0       	ldi	r30, 0x01	; 1
 854:	66 0f       	add	r22, r22
 856:	77 1f       	adc	r23, r23
 858:	88 1f       	adc	r24, r24
 85a:	bb 1f       	adc	r27, r27
 85c:	62 17       	cp	r22, r18
 85e:	73 07       	cpc	r23, r19
 860:	84 07       	cpc	r24, r20
 862:	ba 07       	cpc	r27, r26
 864:	20 f0       	brcs	.+8      	; 0x86e <__divsf3_pse+0xae>
 866:	62 1b       	sub	r22, r18
 868:	73 0b       	sbc	r23, r19
 86a:	84 0b       	sbc	r24, r20
 86c:	ba 0b       	sbc	r27, r26
 86e:	ee 1f       	adc	r30, r30
 870:	88 f7       	brcc	.-30     	; 0x854 <__divsf3_pse+0x94>
 872:	e0 95       	com	r30
 874:	08 95       	ret

00000876 <__fixsfsi>:
 876:	0e 94 42 04 	call	0x884	; 0x884 <__fixunssfsi>
 87a:	68 94       	set
 87c:	b1 11       	cpse	r27, r1
 87e:	0c 94 44 05 	jmp	0xa88	; 0xa88 <__fp_szero>
 882:	08 95       	ret

00000884 <__fixunssfsi>:
 884:	0e 94 29 05 	call	0xa52	; 0xa52 <__fp_splitA>
 888:	88 f0       	brcs	.+34     	; 0x8ac <__fixunssfsi+0x28>
 88a:	9f 57       	subi	r25, 0x7F	; 127
 88c:	98 f0       	brcs	.+38     	; 0x8b4 <__fixunssfsi+0x30>
 88e:	b9 2f       	mov	r27, r25
 890:	99 27       	eor	r25, r25
 892:	b7 51       	subi	r27, 0x17	; 23
 894:	b0 f0       	brcs	.+44     	; 0x8c2 <__fixunssfsi+0x3e>
 896:	e1 f0       	breq	.+56     	; 0x8d0 <__fixunssfsi+0x4c>
 898:	66 0f       	add	r22, r22
 89a:	77 1f       	adc	r23, r23
 89c:	88 1f       	adc	r24, r24
 89e:	99 1f       	adc	r25, r25
 8a0:	1a f0       	brmi	.+6      	; 0x8a8 <__fixunssfsi+0x24>
 8a2:	ba 95       	dec	r27
 8a4:	c9 f7       	brne	.-14     	; 0x898 <__fixunssfsi+0x14>
 8a6:	14 c0       	rjmp	.+40     	; 0x8d0 <__fixunssfsi+0x4c>
 8a8:	b1 30       	cpi	r27, 0x01	; 1
 8aa:	91 f0       	breq	.+36     	; 0x8d0 <__fixunssfsi+0x4c>
 8ac:	0e 94 43 05 	call	0xa86	; 0xa86 <__fp_zero>
 8b0:	b1 e0       	ldi	r27, 0x01	; 1
 8b2:	08 95       	ret
 8b4:	0c 94 43 05 	jmp	0xa86	; 0xa86 <__fp_zero>
 8b8:	67 2f       	mov	r22, r23
 8ba:	78 2f       	mov	r23, r24
 8bc:	88 27       	eor	r24, r24
 8be:	b8 5f       	subi	r27, 0xF8	; 248
 8c0:	39 f0       	breq	.+14     	; 0x8d0 <__fixunssfsi+0x4c>
 8c2:	b9 3f       	cpi	r27, 0xF9	; 249
 8c4:	cc f3       	brlt	.-14     	; 0x8b8 <__fixunssfsi+0x34>
 8c6:	86 95       	lsr	r24
 8c8:	77 95       	ror	r23
 8ca:	67 95       	ror	r22
 8cc:	b3 95       	inc	r27
 8ce:	d9 f7       	brne	.-10     	; 0x8c6 <__fixunssfsi+0x42>
 8d0:	3e f4       	brtc	.+14     	; 0x8e0 <__fixunssfsi+0x5c>
 8d2:	90 95       	com	r25
 8d4:	80 95       	com	r24
 8d6:	70 95       	com	r23
 8d8:	61 95       	neg	r22
 8da:	7f 4f       	sbci	r23, 0xFF	; 255
 8dc:	8f 4f       	sbci	r24, 0xFF	; 255
 8de:	9f 4f       	sbci	r25, 0xFF	; 255
 8e0:	08 95       	ret

000008e2 <__floatunsisf>:
 8e2:	e8 94       	clt
 8e4:	09 c0       	rjmp	.+18     	; 0x8f8 <__floatsisf+0x12>

000008e6 <__floatsisf>:
 8e6:	97 fb       	bst	r25, 7
 8e8:	3e f4       	brtc	.+14     	; 0x8f8 <__floatsisf+0x12>
 8ea:	90 95       	com	r25
 8ec:	80 95       	com	r24
 8ee:	70 95       	com	r23
 8f0:	61 95       	neg	r22
 8f2:	7f 4f       	sbci	r23, 0xFF	; 255
 8f4:	8f 4f       	sbci	r24, 0xFF	; 255
 8f6:	9f 4f       	sbci	r25, 0xFF	; 255
 8f8:	99 23       	and	r25, r25
 8fa:	a9 f0       	breq	.+42     	; 0x926 <__floatsisf+0x40>
 8fc:	f9 2f       	mov	r31, r25
 8fe:	96 e9       	ldi	r25, 0x96	; 150
 900:	bb 27       	eor	r27, r27
 902:	93 95       	inc	r25
 904:	f6 95       	lsr	r31
 906:	87 95       	ror	r24
 908:	77 95       	ror	r23
 90a:	67 95       	ror	r22
 90c:	b7 95       	ror	r27
 90e:	f1 11       	cpse	r31, r1
 910:	f8 cf       	rjmp	.-16     	; 0x902 <__floatsisf+0x1c>
 912:	fa f4       	brpl	.+62     	; 0x952 <__floatsisf+0x6c>
 914:	bb 0f       	add	r27, r27
 916:	11 f4       	brne	.+4      	; 0x91c <__floatsisf+0x36>
 918:	60 ff       	sbrs	r22, 0
 91a:	1b c0       	rjmp	.+54     	; 0x952 <__floatsisf+0x6c>
 91c:	6f 5f       	subi	r22, 0xFF	; 255
 91e:	7f 4f       	sbci	r23, 0xFF	; 255
 920:	8f 4f       	sbci	r24, 0xFF	; 255
 922:	9f 4f       	sbci	r25, 0xFF	; 255
 924:	16 c0       	rjmp	.+44     	; 0x952 <__floatsisf+0x6c>
 926:	88 23       	and	r24, r24
 928:	11 f0       	breq	.+4      	; 0x92e <__floatsisf+0x48>
 92a:	96 e9       	ldi	r25, 0x96	; 150
 92c:	11 c0       	rjmp	.+34     	; 0x950 <__floatsisf+0x6a>
 92e:	77 23       	and	r23, r23
 930:	21 f0       	breq	.+8      	; 0x93a <__floatsisf+0x54>
 932:	9e e8       	ldi	r25, 0x8E	; 142
 934:	87 2f       	mov	r24, r23
 936:	76 2f       	mov	r23, r22
 938:	05 c0       	rjmp	.+10     	; 0x944 <__floatsisf+0x5e>
 93a:	66 23       	and	r22, r22
 93c:	71 f0       	breq	.+28     	; 0x95a <__floatsisf+0x74>
 93e:	96 e8       	ldi	r25, 0x86	; 134
 940:	86 2f       	mov	r24, r22
 942:	70 e0       	ldi	r23, 0x00	; 0
 944:	60 e0       	ldi	r22, 0x00	; 0
 946:	2a f0       	brmi	.+10     	; 0x952 <__floatsisf+0x6c>
 948:	9a 95       	dec	r25
 94a:	66 0f       	add	r22, r22
 94c:	77 1f       	adc	r23, r23
 94e:	88 1f       	adc	r24, r24
 950:	da f7       	brpl	.-10     	; 0x948 <__floatsisf+0x62>
 952:	88 0f       	add	r24, r24
 954:	96 95       	lsr	r25
 956:	87 95       	ror	r24
 958:	97 f9       	bld	r25, 7
 95a:	08 95       	ret

0000095c <__fp_cmp>:
 95c:	99 0f       	add	r25, r25
 95e:	00 08       	sbc	r0, r0
 960:	55 0f       	add	r21, r21
 962:	aa 0b       	sbc	r26, r26
 964:	e0 e8       	ldi	r30, 0x80	; 128
 966:	fe ef       	ldi	r31, 0xFE	; 254
 968:	16 16       	cp	r1, r22
 96a:	17 06       	cpc	r1, r23
 96c:	e8 07       	cpc	r30, r24
 96e:	f9 07       	cpc	r31, r25
 970:	c0 f0       	brcs	.+48     	; 0x9a2 <__fp_cmp+0x46>
 972:	12 16       	cp	r1, r18
 974:	13 06       	cpc	r1, r19
 976:	e4 07       	cpc	r30, r20
 978:	f5 07       	cpc	r31, r21
 97a:	98 f0       	brcs	.+38     	; 0x9a2 <__fp_cmp+0x46>
 97c:	62 1b       	sub	r22, r18
 97e:	73 0b       	sbc	r23, r19
 980:	84 0b       	sbc	r24, r20
 982:	95 0b       	sbc	r25, r21
 984:	39 f4       	brne	.+14     	; 0x994 <__fp_cmp+0x38>
 986:	0a 26       	eor	r0, r26
 988:	61 f0       	breq	.+24     	; 0x9a2 <__fp_cmp+0x46>
 98a:	23 2b       	or	r18, r19
 98c:	24 2b       	or	r18, r20
 98e:	25 2b       	or	r18, r21
 990:	21 f4       	brne	.+8      	; 0x99a <__fp_cmp+0x3e>
 992:	08 95       	ret
 994:	0a 26       	eor	r0, r26
 996:	09 f4       	brne	.+2      	; 0x99a <__fp_cmp+0x3e>
 998:	a1 40       	sbci	r26, 0x01	; 1
 99a:	a6 95       	lsr	r26
 99c:	8f ef       	ldi	r24, 0xFF	; 255
 99e:	81 1d       	adc	r24, r1
 9a0:	81 1d       	adc	r24, r1
 9a2:	08 95       	ret

000009a4 <__fp_inf>:
 9a4:	97 f9       	bld	r25, 7
 9a6:	9f 67       	ori	r25, 0x7F	; 127
 9a8:	80 e8       	ldi	r24, 0x80	; 128
 9aa:	70 e0       	ldi	r23, 0x00	; 0
 9ac:	60 e0       	ldi	r22, 0x00	; 0
 9ae:	08 95       	ret

000009b0 <__fp_nan>:
 9b0:	9f ef       	ldi	r25, 0xFF	; 255
 9b2:	80 ec       	ldi	r24, 0xC0	; 192
 9b4:	08 95       	ret

000009b6 <__fp_powser>:
 9b6:	df 93       	push	r29
 9b8:	cf 93       	push	r28
 9ba:	1f 93       	push	r17
 9bc:	0f 93       	push	r16
 9be:	ff 92       	push	r15
 9c0:	ef 92       	push	r14
 9c2:	df 92       	push	r13
 9c4:	7b 01       	movw	r14, r22
 9c6:	8c 01       	movw	r16, r24
 9c8:	68 94       	set
 9ca:	06 c0       	rjmp	.+12     	; 0x9d8 <__fp_powser+0x22>
 9cc:	da 2e       	mov	r13, r26
 9ce:	ef 01       	movw	r28, r30
 9d0:	0e 94 65 05 	call	0xaca	; 0xaca <__mulsf3x>
 9d4:	fe 01       	movw	r30, r28
 9d6:	e8 94       	clt
 9d8:	a5 91       	lpm	r26, Z+
 9da:	25 91       	lpm	r18, Z+
 9dc:	35 91       	lpm	r19, Z+
 9de:	45 91       	lpm	r20, Z+
 9e0:	55 91       	lpm	r21, Z+
 9e2:	a6 f3       	brts	.-24     	; 0x9cc <__fp_powser+0x16>
 9e4:	ef 01       	movw	r28, r30
 9e6:	0e 94 40 03 	call	0x680	; 0x680 <__addsf3x>
 9ea:	fe 01       	movw	r30, r28
 9ec:	97 01       	movw	r18, r14
 9ee:	a8 01       	movw	r20, r16
 9f0:	da 94       	dec	r13
 9f2:	69 f7       	brne	.-38     	; 0x9ce <__fp_powser+0x18>
 9f4:	df 90       	pop	r13
 9f6:	ef 90       	pop	r14
 9f8:	ff 90       	pop	r15
 9fa:	0f 91       	pop	r16
 9fc:	1f 91       	pop	r17
 9fe:	cf 91       	pop	r28
 a00:	df 91       	pop	r29
 a02:	08 95       	ret

00000a04 <__fp_pscA>:
 a04:	00 24       	eor	r0, r0
 a06:	0a 94       	dec	r0
 a08:	16 16       	cp	r1, r22
 a0a:	17 06       	cpc	r1, r23
 a0c:	18 06       	cpc	r1, r24
 a0e:	09 06       	cpc	r0, r25
 a10:	08 95       	ret

00000a12 <__fp_pscB>:
 a12:	00 24       	eor	r0, r0
 a14:	0a 94       	dec	r0
 a16:	12 16       	cp	r1, r18
 a18:	13 06       	cpc	r1, r19
 a1a:	14 06       	cpc	r1, r20
 a1c:	05 06       	cpc	r0, r21
 a1e:	08 95       	ret

00000a20 <__fp_round>:
 a20:	09 2e       	mov	r0, r25
 a22:	03 94       	inc	r0
 a24:	00 0c       	add	r0, r0
 a26:	11 f4       	brne	.+4      	; 0xa2c <__fp_round+0xc>
 a28:	88 23       	and	r24, r24
 a2a:	52 f0       	brmi	.+20     	; 0xa40 <__fp_round+0x20>
 a2c:	bb 0f       	add	r27, r27
 a2e:	40 f4       	brcc	.+16     	; 0xa40 <__fp_round+0x20>
 a30:	bf 2b       	or	r27, r31
 a32:	11 f4       	brne	.+4      	; 0xa38 <__fp_round+0x18>
 a34:	60 ff       	sbrs	r22, 0
 a36:	04 c0       	rjmp	.+8      	; 0xa40 <__fp_round+0x20>
 a38:	6f 5f       	subi	r22, 0xFF	; 255
 a3a:	7f 4f       	sbci	r23, 0xFF	; 255
 a3c:	8f 4f       	sbci	r24, 0xFF	; 255
 a3e:	9f 4f       	sbci	r25, 0xFF	; 255
 a40:	08 95       	ret

00000a42 <__fp_split3>:
 a42:	57 fd       	sbrc	r21, 7
 a44:	90 58       	subi	r25, 0x80	; 128
 a46:	44 0f       	add	r20, r20
 a48:	55 1f       	adc	r21, r21
 a4a:	59 f0       	breq	.+22     	; 0xa62 <__fp_splitA+0x10>
 a4c:	5f 3f       	cpi	r21, 0xFF	; 255
 a4e:	71 f0       	breq	.+28     	; 0xa6c <__fp_splitA+0x1a>
 a50:	47 95       	ror	r20

00000a52 <__fp_splitA>:
 a52:	88 0f       	add	r24, r24
 a54:	97 fb       	bst	r25, 7
 a56:	99 1f       	adc	r25, r25
 a58:	61 f0       	breq	.+24     	; 0xa72 <__fp_splitA+0x20>
 a5a:	9f 3f       	cpi	r25, 0xFF	; 255
 a5c:	79 f0       	breq	.+30     	; 0xa7c <__fp_splitA+0x2a>
 a5e:	87 95       	ror	r24
 a60:	08 95       	ret
 a62:	12 16       	cp	r1, r18
 a64:	13 06       	cpc	r1, r19
 a66:	14 06       	cpc	r1, r20
 a68:	55 1f       	adc	r21, r21
 a6a:	f2 cf       	rjmp	.-28     	; 0xa50 <__fp_split3+0xe>
 a6c:	46 95       	lsr	r20
 a6e:	f1 df       	rcall	.-30     	; 0xa52 <__fp_splitA>
 a70:	08 c0       	rjmp	.+16     	; 0xa82 <__fp_splitA+0x30>
 a72:	16 16       	cp	r1, r22
 a74:	17 06       	cpc	r1, r23
 a76:	18 06       	cpc	r1, r24
 a78:	99 1f       	adc	r25, r25
 a7a:	f1 cf       	rjmp	.-30     	; 0xa5e <__fp_splitA+0xc>
 a7c:	86 95       	lsr	r24
 a7e:	71 05       	cpc	r23, r1
 a80:	61 05       	cpc	r22, r1
 a82:	08 94       	sec
 a84:	08 95       	ret

00000a86 <__fp_zero>:
 a86:	e8 94       	clt

00000a88 <__fp_szero>:
 a88:	bb 27       	eor	r27, r27
 a8a:	66 27       	eor	r22, r22
 a8c:	77 27       	eor	r23, r23
 a8e:	cb 01       	movw	r24, r22
 a90:	97 f9       	bld	r25, 7
 a92:	08 95       	ret

00000a94 <inverse>:
 a94:	9b 01       	movw	r18, r22
 a96:	ac 01       	movw	r20, r24
 a98:	60 e0       	ldi	r22, 0x00	; 0
 a9a:	70 e0       	ldi	r23, 0x00	; 0
 a9c:	80 e8       	ldi	r24, 0x80	; 128
 a9e:	9f e3       	ldi	r25, 0x3F	; 63
 aa0:	0c 94 c9 03 	jmp	0x792	; 0x792 <__divsf3>

00000aa4 <__mulsf3>:
 aa4:	0e 94 65 05 	call	0xaca	; 0xaca <__mulsf3x>
 aa8:	0c 94 10 05 	jmp	0xa20	; 0xa20 <__fp_round>
 aac:	0e 94 02 05 	call	0xa04	; 0xa04 <__fp_pscA>
 ab0:	38 f0       	brcs	.+14     	; 0xac0 <__mulsf3+0x1c>
 ab2:	0e 94 09 05 	call	0xa12	; 0xa12 <__fp_pscB>
 ab6:	20 f0       	brcs	.+8      	; 0xac0 <__mulsf3+0x1c>
 ab8:	95 23       	and	r25, r21
 aba:	11 f0       	breq	.+4      	; 0xac0 <__mulsf3+0x1c>
 abc:	0c 94 d2 04 	jmp	0x9a4	; 0x9a4 <__fp_inf>
 ac0:	0c 94 d8 04 	jmp	0x9b0	; 0x9b0 <__fp_nan>
 ac4:	11 24       	eor	r1, r1
 ac6:	0c 94 44 05 	jmp	0xa88	; 0xa88 <__fp_szero>

00000aca <__mulsf3x>:
 aca:	0e 94 21 05 	call	0xa42	; 0xa42 <__fp_split3>
 ace:	70 f3       	brcs	.-36     	; 0xaac <__mulsf3+0x8>

00000ad0 <__mulsf3_pse>:
 ad0:	95 9f       	mul	r25, r21
 ad2:	c1 f3       	breq	.-16     	; 0xac4 <__mulsf3+0x20>
 ad4:	95 0f       	add	r25, r21
 ad6:	50 e0       	ldi	r21, 0x00	; 0
 ad8:	55 1f       	adc	r21, r21
 ada:	62 9f       	mul	r22, r18
 adc:	f0 01       	movw	r30, r0
 ade:	72 9f       	mul	r23, r18
 ae0:	bb 27       	eor	r27, r27
 ae2:	f0 0d       	add	r31, r0
 ae4:	b1 1d       	adc	r27, r1
 ae6:	63 9f       	mul	r22, r19
 ae8:	aa 27       	eor	r26, r26
 aea:	f0 0d       	add	r31, r0
 aec:	b1 1d       	adc	r27, r1
 aee:	aa 1f       	adc	r26, r26
 af0:	64 9f       	mul	r22, r20
 af2:	66 27       	eor	r22, r22
 af4:	b0 0d       	add	r27, r0
 af6:	a1 1d       	adc	r26, r1
 af8:	66 1f       	adc	r22, r22
 afa:	82 9f       	mul	r24, r18
 afc:	22 27       	eor	r18, r18
 afe:	b0 0d       	add	r27, r0
 b00:	a1 1d       	adc	r26, r1
 b02:	62 1f       	adc	r22, r18
 b04:	73 9f       	mul	r23, r19
 b06:	b0 0d       	add	r27, r0
 b08:	a1 1d       	adc	r26, r1
 b0a:	62 1f       	adc	r22, r18
 b0c:	83 9f       	mul	r24, r19
 b0e:	a0 0d       	add	r26, r0
 b10:	61 1d       	adc	r22, r1
 b12:	22 1f       	adc	r18, r18
 b14:	74 9f       	mul	r23, r20
 b16:	33 27       	eor	r19, r19
 b18:	a0 0d       	add	r26, r0
 b1a:	61 1d       	adc	r22, r1
 b1c:	23 1f       	adc	r18, r19
 b1e:	84 9f       	mul	r24, r20
 b20:	60 0d       	add	r22, r0
 b22:	21 1d       	adc	r18, r1
 b24:	82 2f       	mov	r24, r18
 b26:	76 2f       	mov	r23, r22
 b28:	6a 2f       	mov	r22, r26
 b2a:	11 24       	eor	r1, r1
 b2c:	9f 57       	subi	r25, 0x7F	; 127
 b2e:	50 40       	sbci	r21, 0x00	; 0
 b30:	9a f0       	brmi	.+38     	; 0xb58 <__mulsf3_pse+0x88>
 b32:	f1 f0       	breq	.+60     	; 0xb70 <__mulsf3_pse+0xa0>
 b34:	88 23       	and	r24, r24
 b36:	4a f0       	brmi	.+18     	; 0xb4a <__mulsf3_pse+0x7a>
 b38:	ee 0f       	add	r30, r30
 b3a:	ff 1f       	adc	r31, r31
 b3c:	bb 1f       	adc	r27, r27
 b3e:	66 1f       	adc	r22, r22
 b40:	77 1f       	adc	r23, r23
 b42:	88 1f       	adc	r24, r24
 b44:	91 50       	subi	r25, 0x01	; 1
 b46:	50 40       	sbci	r21, 0x00	; 0
 b48:	a9 f7       	brne	.-22     	; 0xb34 <__mulsf3_pse+0x64>
 b4a:	9e 3f       	cpi	r25, 0xFE	; 254
 b4c:	51 05       	cpc	r21, r1
 b4e:	80 f0       	brcs	.+32     	; 0xb70 <__mulsf3_pse+0xa0>
 b50:	0c 94 d2 04 	jmp	0x9a4	; 0x9a4 <__fp_inf>
 b54:	0c 94 44 05 	jmp	0xa88	; 0xa88 <__fp_szero>
 b58:	5f 3f       	cpi	r21, 0xFF	; 255
 b5a:	e4 f3       	brlt	.-8      	; 0xb54 <__mulsf3_pse+0x84>
 b5c:	98 3e       	cpi	r25, 0xE8	; 232
 b5e:	d4 f3       	brlt	.-12     	; 0xb54 <__mulsf3_pse+0x84>
 b60:	86 95       	lsr	r24
 b62:	77 95       	ror	r23
 b64:	67 95       	ror	r22
 b66:	b7 95       	ror	r27
 b68:	f7 95       	ror	r31
 b6a:	e7 95       	ror	r30
 b6c:	9f 5f       	subi	r25, 0xFF	; 255
 b6e:	c1 f7       	brne	.-16     	; 0xb60 <__mulsf3_pse+0x90>
 b70:	fe 2b       	or	r31, r30
 b72:	88 0f       	add	r24, r24
 b74:	91 1d       	adc	r25, r1
 b76:	96 95       	lsr	r25
 b78:	87 95       	ror	r24
 b7a:	97 f9       	bld	r25, 7
 b7c:	08 95       	ret
 b7e:	19 f4       	brne	.+6      	; 0xb86 <__mulsf3_pse+0xb6>
 b80:	16 f4       	brtc	.+4      	; 0xb86 <__mulsf3_pse+0xb6>
 b82:	0c 94 d8 04 	jmp	0x9b0	; 0x9b0 <__fp_nan>
 b86:	0c 94 2f 06 	jmp	0xc5e	; 0xc5e <__fp_mpack>

00000b8a <sqrt>:
 b8a:	0e 94 29 05 	call	0xa52	; 0xa52 <__fp_splitA>
 b8e:	b8 f3       	brcs	.-18     	; 0xb7e <__mulsf3_pse+0xae>
 b90:	99 23       	and	r25, r25
 b92:	c9 f3       	breq	.-14     	; 0xb86 <__mulsf3_pse+0xb6>
 b94:	b6 f3       	brts	.-20     	; 0xb82 <__mulsf3_pse+0xb2>
 b96:	9f 57       	subi	r25, 0x7F	; 127
 b98:	55 0b       	sbc	r21, r21
 b9a:	87 ff       	sbrs	r24, 7
 b9c:	0e 94 3d 06 	call	0xc7a	; 0xc7a <__fp_norm2>
 ba0:	00 24       	eor	r0, r0
 ba2:	a0 e6       	ldi	r26, 0x60	; 96
 ba4:	40 ea       	ldi	r20, 0xA0	; 160
 ba6:	90 01       	movw	r18, r0
 ba8:	80 58       	subi	r24, 0x80	; 128
 baa:	56 95       	lsr	r21
 bac:	97 95       	ror	r25
 bae:	28 f4       	brcc	.+10     	; 0xbba <sqrt+0x30>
 bb0:	80 5c       	subi	r24, 0xC0	; 192
 bb2:	66 0f       	add	r22, r22
 bb4:	77 1f       	adc	r23, r23
 bb6:	88 1f       	adc	r24, r24
 bb8:	20 f0       	brcs	.+8      	; 0xbc2 <sqrt+0x38>
 bba:	26 17       	cp	r18, r22
 bbc:	37 07       	cpc	r19, r23
 bbe:	48 07       	cpc	r20, r24
 bc0:	30 f4       	brcc	.+12     	; 0xbce <sqrt+0x44>
 bc2:	62 1b       	sub	r22, r18
 bc4:	73 0b       	sbc	r23, r19
 bc6:	84 0b       	sbc	r24, r20
 bc8:	20 29       	or	r18, r0
 bca:	31 29       	or	r19, r1
 bcc:	4a 2b       	or	r20, r26
 bce:	a6 95       	lsr	r26
 bd0:	17 94       	ror	r1
 bd2:	07 94       	ror	r0
 bd4:	20 25       	eor	r18, r0
 bd6:	31 25       	eor	r19, r1
 bd8:	4a 27       	eor	r20, r26
 bda:	58 f7       	brcc	.-42     	; 0xbb2 <sqrt+0x28>
 bdc:	66 0f       	add	r22, r22
 bde:	77 1f       	adc	r23, r23
 be0:	88 1f       	adc	r24, r24
 be2:	20 f0       	brcs	.+8      	; 0xbec <sqrt+0x62>
 be4:	26 17       	cp	r18, r22
 be6:	37 07       	cpc	r19, r23
 be8:	48 07       	cpc	r20, r24
 bea:	30 f4       	brcc	.+12     	; 0xbf8 <sqrt+0x6e>
 bec:	62 0b       	sbc	r22, r18
 bee:	73 0b       	sbc	r23, r19
 bf0:	84 0b       	sbc	r24, r20
 bf2:	20 0d       	add	r18, r0
 bf4:	31 1d       	adc	r19, r1
 bf6:	41 1d       	adc	r20, r1
 bf8:	a0 95       	com	r26
 bfa:	81 f7       	brne	.-32     	; 0xbdc <sqrt+0x52>
 bfc:	b9 01       	movw	r22, r18
 bfe:	84 2f       	mov	r24, r20
 c00:	91 58       	subi	r25, 0x81	; 129
 c02:	88 0f       	add	r24, r24
 c04:	96 95       	lsr	r25
 c06:	87 95       	ror	r24
 c08:	08 95       	ret

00000c0a <square>:
 c0a:	9b 01       	movw	r18, r22
 c0c:	ac 01       	movw	r20, r24
 c0e:	0c 94 52 05 	jmp	0xaa4	; 0xaa4 <__mulsf3>

00000c12 <trunc>:
 c12:	0e 94 44 06 	call	0xc88	; 0xc88 <__fp_trunc>
 c16:	30 f0       	brcs	.+12     	; 0xc24 <trunc+0x12>
 c18:	9f 37       	cpi	r25, 0x7F	; 127
 c1a:	10 f4       	brcc	.+4      	; 0xc20 <trunc+0xe>
 c1c:	0c 94 44 05 	jmp	0xa88	; 0xa88 <__fp_szero>
 c20:	0c 94 14 06 	jmp	0xc28	; 0xc28 <__fp_mintl>
 c24:	0c 94 2f 06 	jmp	0xc5e	; 0xc5e <__fp_mpack>

00000c28 <__fp_mintl>:
 c28:	88 23       	and	r24, r24
 c2a:	71 f4       	brne	.+28     	; 0xc48 <__fp_mintl+0x20>
 c2c:	77 23       	and	r23, r23
 c2e:	21 f0       	breq	.+8      	; 0xc38 <__fp_mintl+0x10>
 c30:	98 50       	subi	r25, 0x08	; 8
 c32:	87 2b       	or	r24, r23
 c34:	76 2f       	mov	r23, r22
 c36:	07 c0       	rjmp	.+14     	; 0xc46 <__fp_mintl+0x1e>
 c38:	66 23       	and	r22, r22
 c3a:	11 f4       	brne	.+4      	; 0xc40 <__fp_mintl+0x18>
 c3c:	99 27       	eor	r25, r25
 c3e:	0d c0       	rjmp	.+26     	; 0xc5a <__fp_mintl+0x32>
 c40:	90 51       	subi	r25, 0x10	; 16
 c42:	86 2b       	or	r24, r22
 c44:	70 e0       	ldi	r23, 0x00	; 0
 c46:	60 e0       	ldi	r22, 0x00	; 0
 c48:	2a f0       	brmi	.+10     	; 0xc54 <__fp_mintl+0x2c>
 c4a:	9a 95       	dec	r25
 c4c:	66 0f       	add	r22, r22
 c4e:	77 1f       	adc	r23, r23
 c50:	88 1f       	adc	r24, r24
 c52:	da f7       	brpl	.-10     	; 0xc4a <__fp_mintl+0x22>
 c54:	88 0f       	add	r24, r24
 c56:	96 95       	lsr	r25
 c58:	87 95       	ror	r24
 c5a:	97 f9       	bld	r25, 7
 c5c:	08 95       	ret

00000c5e <__fp_mpack>:
 c5e:	9f 3f       	cpi	r25, 0xFF	; 255
 c60:	31 f0       	breq	.+12     	; 0xc6e <__fp_mpack_finite+0xc>

00000c62 <__fp_mpack_finite>:
 c62:	91 50       	subi	r25, 0x01	; 1
 c64:	20 f4       	brcc	.+8      	; 0xc6e <__fp_mpack_finite+0xc>
 c66:	87 95       	ror	r24
 c68:	77 95       	ror	r23
 c6a:	67 95       	ror	r22
 c6c:	b7 95       	ror	r27
 c6e:	88 0f       	add	r24, r24
 c70:	91 1d       	adc	r25, r1
 c72:	96 95       	lsr	r25
 c74:	87 95       	ror	r24
 c76:	97 f9       	bld	r25, 7
 c78:	08 95       	ret

00000c7a <__fp_norm2>:
 c7a:	91 50       	subi	r25, 0x01	; 1
 c7c:	50 40       	sbci	r21, 0x00	; 0
 c7e:	66 0f       	add	r22, r22
 c80:	77 1f       	adc	r23, r23
 c82:	88 1f       	adc	r24, r24
 c84:	d2 f7       	brpl	.-12     	; 0xc7a <__fp_norm2>
 c86:	08 95       	ret

00000c88 <__fp_trunc>:
 c88:	0e 94 29 05 	call	0xa52	; 0xa52 <__fp_splitA>
 c8c:	a0 f0       	brcs	.+40     	; 0xcb6 <__fp_trunc+0x2e>
 c8e:	be e7       	ldi	r27, 0x7E	; 126
 c90:	b9 17       	cp	r27, r25
 c92:	88 f4       	brcc	.+34     	; 0xcb6 <__fp_trunc+0x2e>
 c94:	bb 27       	eor	r27, r27
 c96:	9f 38       	cpi	r25, 0x8F	; 143
 c98:	60 f4       	brcc	.+24     	; 0xcb2 <__fp_trunc+0x2a>
 c9a:	16 16       	cp	r1, r22
 c9c:	b1 1d       	adc	r27, r1
 c9e:	67 2f       	mov	r22, r23
 ca0:	78 2f       	mov	r23, r24
 ca2:	88 27       	eor	r24, r24
 ca4:	98 5f       	subi	r25, 0xF8	; 248
 ca6:	f7 cf       	rjmp	.-18     	; 0xc96 <__fp_trunc+0xe>
 ca8:	86 95       	lsr	r24
 caa:	77 95       	ror	r23
 cac:	67 95       	ror	r22
 cae:	b1 1d       	adc	r27, r1
 cb0:	93 95       	inc	r25
 cb2:	96 39       	cpi	r25, 0x96	; 150
 cb4:	c8 f3       	brcs	.-14     	; 0xca8 <__fp_trunc+0x20>
 cb6:	08 95       	ret

00000cb8 <_exit>:
 cb8:	f8 94       	cli

00000cba <__stop_program>:
 cba:	ff cf       	rjmp	.-2      	; 0xcba <__stop_program>
