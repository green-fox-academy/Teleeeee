
led_potentiometer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000a6a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009f6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800100  00800100  00000a6a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000a6a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a9c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  00000adc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c3b  00000000  00000000  00000b6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008a4  00000000  00000000  000017a7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000571  00000000  00000000  0000204b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000016c  00000000  00000000  000025bc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004f8  00000000  00000000  00002728  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005f9  00000000  00000000  00002c20  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000070  00000000  00000000  00003219  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__ctors_end>
   4:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
   8:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
   c:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  10:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  14:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  18:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  1c:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  20:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  24:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  28:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  2c:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  30:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  34:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  38:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  3c:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  40:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  44:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  48:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  4c:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  50:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  54:	0c 94 ed 00 	jmp	0x1da	; 0x1da <__vector_21>
  58:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  5c:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  60:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  64:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  68:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__bad_interrupt>
  6c:	08 4a       	sbci	r16, 0xA8	; 168
  6e:	d7 3b       	cpi	r29, 0xB7	; 183
  70:	3b ce       	rjmp	.-906    	; 0xfffffce8 <__eeprom_end+0xff7efce8>
  72:	01 6e       	ori	r16, 0xE1	; 225
  74:	84 bc       	out	0x24, r8	; 36
  76:	bf fd       	.word	0xfdbf	; ????
  78:	c1 2f       	mov	r28, r17
  7a:	3d 6c       	ori	r19, 0xCD	; 205
  7c:	74 31       	cpi	r23, 0x14	; 20
  7e:	9a bd       	out	0x2a, r25	; 42
  80:	56 83       	std	Z+6, r21	; 0x06
  82:	3d da       	rcall	.-2950   	; 0xfffff4fe <__eeprom_end+0xff7ef4fe>
  84:	3d 00       	.word	0x003d	; ????
  86:	c7 7f       	andi	r28, 0xF7	; 247
  88:	11 be       	out	0x31, r1	; 49
  8a:	d9 e4       	ldi	r29, 0x49	; 73
  8c:	bb 4c       	sbci	r27, 0xCB	; 203
  8e:	3e 91       	ld	r19, -X
  90:	6b aa       	std	Y+51, r6	; 0x33
  92:	aa be       	out	0x3a, r10	; 58
  94:	00 00       	nop
  96:	00 80       	ld	r0, Z
  98:	3f 00       	.word	0x003f	; ????

0000009a <__ctors_end>:
  9a:	11 24       	eor	r1, r1
  9c:	1f be       	out	0x3f, r1	; 63
  9e:	cf ef       	ldi	r28, 0xFF	; 255
  a0:	d4 e0       	ldi	r29, 0x04	; 4
  a2:	de bf       	out	0x3e, r29	; 62
  a4:	cd bf       	out	0x3d, r28	; 61

000000a6 <__do_clear_bss>:
  a6:	21 e0       	ldi	r18, 0x01	; 1
  a8:	a0 e0       	ldi	r26, 0x00	; 0
  aa:	b1 e0       	ldi	r27, 0x01	; 1
  ac:	01 c0       	rjmp	.+2      	; 0xb0 <.do_clear_bss_start>

000000ae <.do_clear_bss_loop>:
  ae:	1d 92       	st	X+, r1

000000b0 <.do_clear_bss_start>:
  b0:	a4 30       	cpi	r26, 0x04	; 4
  b2:	b2 07       	cpc	r27, r18
  b4:	e1 f7       	brne	.-8      	; 0xae <.do_clear_bss_loop>
  b6:	0e 94 18 01 	call	0x230	; 0x230 <main>
  ba:	0c 94 f9 04 	jmp	0x9f2	; 0x9f2 <_exit>

000000be <__bad_interrupt>:
  be:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c2 <HsvToRgb>:
	hsv.h = 85 + 43 * (rgb.b - rgb.r) / (rgbMax - rgbMin);
	else
	hsv.h = 171 + 43 * (rgb.r - rgb.g) / (rgbMax - rgbMin);

	return hsv;
  c2:	ef 92       	push	r14
  c4:	ff 92       	push	r15
  c6:	1f 93       	push	r17
  c8:	cf 93       	push	r28
  ca:	df 93       	push	r29
  cc:	18 2f       	mov	r17, r24
  ce:	71 11       	cpse	r23, r1
  d0:	03 c0       	rjmp	.+6      	; 0xd8 <HsvToRgb+0x16>
  d2:	68 2f       	mov	r22, r24
  d4:	78 2f       	mov	r23, r24
  d6:	72 c0       	rjmp	.+228    	; 0x1bc <HsvToRgb+0xfa>
  d8:	9f eb       	ldi	r25, 0xBF	; 191
  da:	69 9f       	mul	r22, r25
  dc:	91 2d       	mov	r25, r1
  de:	11 24       	eor	r1, r1
  e0:	92 95       	swap	r25
  e2:	96 95       	lsr	r25
  e4:	97 70       	andi	r25, 0x07	; 7
  e6:	a8 2f       	mov	r26, r24
  e8:	b0 e0       	ldi	r27, 0x00	; 0
  ea:	47 2f       	mov	r20, r23
  ec:	50 e0       	ldi	r21, 0x00	; 0
  ee:	ef ef       	ldi	r30, 0xFF	; 255
  f0:	f0 e0       	ldi	r31, 0x00	; 0
  f2:	9f 01       	movw	r18, r30
  f4:	24 1b       	sub	r18, r20
  f6:	35 0b       	sbc	r19, r21
  f8:	2a 9f       	mul	r18, r26
  fa:	e0 01       	movw	r28, r0
  fc:	2b 9f       	mul	r18, r27
  fe:	d0 0d       	add	r29, r0
 100:	3a 9f       	mul	r19, r26
 102:	d0 0d       	add	r29, r0
 104:	11 24       	eor	r1, r1
 106:	26 2f       	mov	r18, r22
 108:	30 e0       	ldi	r19, 0x00	; 0
 10a:	6b e2       	ldi	r22, 0x2B	; 43
 10c:	96 9f       	mul	r25, r22
 10e:	20 19       	sub	r18, r0
 110:	31 09       	sbc	r19, r1
 112:	11 24       	eor	r1, r1
 114:	62 2f       	mov	r22, r18
 116:	66 0f       	add	r22, r22
 118:	26 0f       	add	r18, r22
 11a:	22 0f       	add	r18, r18
 11c:	30 e0       	ldi	r19, 0x00	; 0
 11e:	42 9f       	mul	r20, r18
 120:	b0 01       	movw	r22, r0
 122:	43 9f       	mul	r20, r19
 124:	70 0d       	add	r23, r0
 126:	52 9f       	mul	r21, r18
 128:	70 0d       	add	r23, r0
 12a:	11 24       	eor	r1, r1
 12c:	67 2f       	mov	r22, r23
 12e:	77 0f       	add	r23, r23
 130:	77 0b       	sbc	r23, r23
 132:	7f 01       	movw	r14, r30
 134:	e6 1a       	sub	r14, r22
 136:	f7 0a       	sbc	r15, r23
 138:	b7 01       	movw	r22, r14
 13a:	6a 9f       	mul	r22, r26
 13c:	70 01       	movw	r14, r0
 13e:	6b 9f       	mul	r22, r27
 140:	f0 0c       	add	r15, r0
 142:	7a 9f       	mul	r23, r26
 144:	f0 0c       	add	r15, r0
 146:	11 24       	eor	r1, r1
 148:	bf 01       	movw	r22, r30
 14a:	62 1b       	sub	r22, r18
 14c:	73 0b       	sbc	r23, r19
 14e:	64 9f       	mul	r22, r20
 150:	90 01       	movw	r18, r0
 152:	65 9f       	mul	r22, r21
 154:	30 0d       	add	r19, r0
 156:	74 9f       	mul	r23, r20
 158:	30 0d       	add	r19, r0
 15a:	11 24       	eor	r1, r1
 15c:	23 2f       	mov	r18, r19
 15e:	33 0f       	add	r19, r19
 160:	33 0b       	sbc	r19, r19
 162:	e2 1b       	sub	r30, r18
 164:	f3 0b       	sbc	r31, r19
 166:	ea 9f       	mul	r30, r26
 168:	90 01       	movw	r18, r0
 16a:	eb 9f       	mul	r30, r27
 16c:	30 0d       	add	r19, r0
 16e:	fa 9f       	mul	r31, r26
 170:	30 0d       	add	r19, r0
 172:	11 24       	eor	r1, r1
 174:	92 30       	cpi	r25, 0x02	; 2
 176:	79 f0       	breq	.+30     	; 0x196 <HsvToRgb+0xd4>
 178:	28 f4       	brcc	.+10     	; 0x184 <HsvToRgb+0xc2>
 17a:	99 23       	and	r25, r25
 17c:	d9 f0       	breq	.+54     	; 0x1b4 <HsvToRgb+0xf2>
 17e:	91 30       	cpi	r25, 0x01	; 1
 180:	31 f0       	breq	.+12     	; 0x18e <HsvToRgb+0xcc>
 182:	15 c0       	rjmp	.+42     	; 0x1ae <HsvToRgb+0xec>
 184:	93 30       	cpi	r25, 0x03	; 3
 186:	59 f0       	breq	.+22     	; 0x19e <HsvToRgb+0xdc>
 188:	94 30       	cpi	r25, 0x04	; 4
 18a:	69 f0       	breq	.+26     	; 0x1a6 <HsvToRgb+0xe4>
 18c:	10 c0       	rjmp	.+32     	; 0x1ae <HsvToRgb+0xec>
 18e:	9d 2f       	mov	r25, r29
 190:	78 2f       	mov	r23, r24
 192:	1f 2d       	mov	r17, r15
 194:	11 c0       	rjmp	.+34     	; 0x1b8 <HsvToRgb+0xf6>
 196:	93 2f       	mov	r25, r19
 198:	78 2f       	mov	r23, r24
 19a:	1d 2f       	mov	r17, r29
 19c:	0d c0       	rjmp	.+26     	; 0x1b8 <HsvToRgb+0xf6>
 19e:	98 2f       	mov	r25, r24
 1a0:	7f 2d       	mov	r23, r15
 1a2:	1d 2f       	mov	r17, r29
 1a4:	09 c0       	rjmp	.+18     	; 0x1b8 <HsvToRgb+0xf6>
 1a6:	98 2f       	mov	r25, r24
 1a8:	7d 2f       	mov	r23, r29
 1aa:	13 2f       	mov	r17, r19
 1ac:	05 c0       	rjmp	.+10     	; 0x1b8 <HsvToRgb+0xf6>
 1ae:	9f 2d       	mov	r25, r15
 1b0:	7d 2f       	mov	r23, r29
 1b2:	02 c0       	rjmp	.+4      	; 0x1b8 <HsvToRgb+0xf6>
 1b4:	9d 2f       	mov	r25, r29
 1b6:	73 2f       	mov	r23, r19
 1b8:	61 2f       	mov	r22, r17
 1ba:	89 2f       	mov	r24, r25
 1bc:	df 91       	pop	r29
 1be:	cf 91       	pop	r28
 1c0:	1f 91       	pop	r17
 1c2:	ff 90       	pop	r15
 1c4:	ef 90       	pop	r14
 1c6:	08 95       	ret

000001c8 <init_ADC>:
uint16_t duty = 0;
uint16_t all_result_x = 0;
uint16_t all_result_y = 0;

void init_ADC(){
	sei();
 1c8:	78 94       	sei
	ADMUX = 0b00000000;
 1ca:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
	
	ADCSRA = 0b11101111;
 1ce:	8f ee       	ldi	r24, 0xEF	; 239
 1d0:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
	ADCSRB = 0b00000000;
 1d4:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__DATA_REGION_ORIGIN__+0x1b>
 1d8:	08 95       	ret

000001da <__vector_21>:
}

ISR(ADC_vect){
 1da:	1f 92       	push	r1
 1dc:	0f 92       	push	r0
 1de:	0f b6       	in	r0, 0x3f	; 63
 1e0:	0f 92       	push	r0
 1e2:	11 24       	eor	r1, r1
 1e4:	2f 93       	push	r18
 1e6:	8f 93       	push	r24
 1e8:	9f 93       	push	r25
	uint8_t result_ADCH;
	uint8_t result_ADCL;
	result_ADCL = ADCL;
 1ea:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
	result_ADCH = ADCH;
 1ee:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
	//duty = abs(100 - all_result_first / 10) ;
	//set_duty(duty);
	if(ADMUX == 0b00000000){
 1f2:	90 91 7c 00 	lds	r25, 0x007C	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
 1f6:	91 11       	cpse	r25, r1
 1f8:	0a c0       	rjmp	.+20     	; 0x20e <__vector_21+0x34>
		all_result_x = (((uint16_t)result_ADCH << 8) | result_ADCL);	
 1fa:	90 e0       	ldi	r25, 0x00	; 0
 1fc:	92 2b       	or	r25, r18
 1fe:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <all_result_x+0x1>
 202:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <all_result_x>
		ADMUX = 0b00000001;
 206:	81 e0       	ldi	r24, 0x01	; 1
 208:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
 20c:	08 c0       	rjmp	.+16     	; 0x21e <__vector_21+0x44>
	}else{
		all_result_y = (((uint16_t)result_ADCH << 8) | result_ADCL);
 20e:	90 e0       	ldi	r25, 0x00	; 0
 210:	92 2b       	or	r25, r18
 212:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
 216:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
		ADMUX = 0b00000000;
 21a:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
	}
	cli();
 21e:	f8 94       	cli
}
 220:	9f 91       	pop	r25
 222:	8f 91       	pop	r24
 224:	2f 91       	pop	r18
 226:	0f 90       	pop	r0
 228:	0f be       	out	0x3f, r0	; 63
 22a:	0f 90       	pop	r0
 22c:	1f 90       	pop	r1
 22e:	18 95       	reti

00000230 <main>:



int main(void)
{
 230:	cf 93       	push	r28
 232:	df 93       	push	r29
 234:	cd b7       	in	r28, 0x3d	; 61
 236:	de b7       	in	r29, 0x3e	; 62
 238:	63 97       	sbiw	r28, 0x13	; 19
 23a:	0f b6       	in	r0, 0x3f	; 63
 23c:	f8 94       	cli
 23e:	de bf       	out	0x3e, r29	; 62
 240:	0f be       	out	0x3f, r0	; 63
 242:	cd bf       	out	0x3d, r28	; 61
	
	init_fast_pwm_first_channel();
 244:	0e 94 c4 01 	call	0x388	; 0x388 <init_fast_pwm_first_channel>
	init_fast_pwm_second_channel();
 248:	0e 94 cb 01 	call	0x396	; 0x396 <init_fast_pwm_second_channel>
	init_fast_pwm_third_channel();
 24c:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <init_fast_pwm_third_channel>
	init_ADC();
 250:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <init_ADC>
	
    while (1) 
    {
		volatile float x =  (((float)all_result_x - 512.0)) / 512; 
 254:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <all_result_x>
 258:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <all_result_x+0x1>
 25c:	80 e0       	ldi	r24, 0x00	; 0
 25e:	90 e0       	ldi	r25, 0x00	; 0
 260:	0e 94 70 03 	call	0x6e0	; 0x6e0 <__floatunsisf>
 264:	20 e0       	ldi	r18, 0x00	; 0
 266:	30 e0       	ldi	r19, 0x00	; 0
 268:	40 e0       	ldi	r20, 0x00	; 0
 26a:	54 e4       	ldi	r21, 0x44	; 68
 26c:	0e 94 33 02 	call	0x466	; 0x466 <__subsf3>
 270:	20 e0       	ldi	r18, 0x00	; 0
 272:	30 e0       	ldi	r19, 0x00	; 0
 274:	40 e0       	ldi	r20, 0x00	; 0
 276:	5b e3       	ldi	r21, 0x3B	; 59
 278:	0e 94 2d 04 	call	0x85a	; 0x85a <__mulsf3>
 27c:	6d 83       	std	Y+5, r22	; 0x05
 27e:	7e 83       	std	Y+6, r23	; 0x06
 280:	8f 83       	std	Y+7, r24	; 0x07
 282:	98 87       	std	Y+8, r25	; 0x08
		volatile float y =  (((float)all_result_y - 512.0)) / 512;
 284:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <_edata>
 288:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <_edata+0x1>
 28c:	80 e0       	ldi	r24, 0x00	; 0
 28e:	90 e0       	ldi	r25, 0x00	; 0
 290:	0e 94 70 03 	call	0x6e0	; 0x6e0 <__floatunsisf>
 294:	20 e0       	ldi	r18, 0x00	; 0
 296:	30 e0       	ldi	r19, 0x00	; 0
 298:	40 e0       	ldi	r20, 0x00	; 0
 29a:	54 e4       	ldi	r21, 0x44	; 68
 29c:	0e 94 33 02 	call	0x466	; 0x466 <__subsf3>
 2a0:	20 e0       	ldi	r18, 0x00	; 0
 2a2:	30 e0       	ldi	r19, 0x00	; 0
 2a4:	40 e0       	ldi	r20, 0x00	; 0
 2a6:	5b e3       	ldi	r21, 0x3B	; 59
 2a8:	0e 94 2d 04 	call	0x85a	; 0x85a <__mulsf3>
 2ac:	69 83       	std	Y+1, r22	; 0x01
 2ae:	7a 83       	std	Y+2, r23	; 0x02
 2b0:	8b 83       	std	Y+3, r24	; 0x03
 2b2:	9c 83       	std	Y+4, r25	; 0x04
		float T = sqrtf((x * x) + (y * y));
 2b4:	cd 80       	ldd	r12, Y+5	; 0x05
 2b6:	de 80       	ldd	r13, Y+6	; 0x06
 2b8:	ef 80       	ldd	r14, Y+7	; 0x07
 2ba:	f8 84       	ldd	r15, Y+8	; 0x08
 2bc:	8d 80       	ldd	r8, Y+5	; 0x05
 2be:	9e 80       	ldd	r9, Y+6	; 0x06
 2c0:	af 80       	ldd	r10, Y+7	; 0x07
 2c2:	b8 84       	ldd	r11, Y+8	; 0x08
 2c4:	49 80       	ldd	r4, Y+1	; 0x01
 2c6:	5a 80       	ldd	r5, Y+2	; 0x02
 2c8:	6b 80       	ldd	r6, Y+3	; 0x03
 2ca:	7c 80       	ldd	r7, Y+4	; 0x04
 2cc:	89 81       	ldd	r24, Y+1	; 0x01
 2ce:	9a 81       	ldd	r25, Y+2	; 0x02
 2d0:	ab 81       	ldd	r26, Y+3	; 0x03
 2d2:	bc 81       	ldd	r27, Y+4	; 0x04
 2d4:	8c 87       	std	Y+12, r24	; 0x0c
 2d6:	9d 87       	std	Y+13, r25	; 0x0d
 2d8:	ae 87       	std	Y+14, r26	; 0x0e
 2da:	bf 87       	std	Y+15, r27	; 0x0f
 2dc:	a5 01       	movw	r20, r10
 2de:	94 01       	movw	r18, r8
 2e0:	c7 01       	movw	r24, r14
 2e2:	b6 01       	movw	r22, r12
 2e4:	0e 94 2d 04 	call	0x85a	; 0x85a <__mulsf3>
 2e8:	68 8b       	std	Y+16, r22	; 0x10
 2ea:	79 8b       	std	Y+17, r23	; 0x11
 2ec:	8a 8b       	std	Y+18, r24	; 0x12
 2ee:	9b 8b       	std	Y+19, r25	; 0x13
 2f0:	a5 01       	movw	r20, r10
 2f2:	94 01       	movw	r18, r8
 2f4:	c7 01       	movw	r24, r14
 2f6:	b6 01       	movw	r22, r12
 2f8:	0e 94 2d 04 	call	0x85a	; 0x85a <__mulsf3>
 2fc:	6b 01       	movw	r12, r22
 2fe:	7c 01       	movw	r14, r24
 300:	2c 85       	ldd	r18, Y+12	; 0x0c
 302:	3d 85       	ldd	r19, Y+13	; 0x0d
 304:	4e 85       	ldd	r20, Y+14	; 0x0e
 306:	5f 85       	ldd	r21, Y+15	; 0x0f
 308:	c3 01       	movw	r24, r6
 30a:	b2 01       	movw	r22, r4
 30c:	0e 94 2d 04 	call	0x85a	; 0x85a <__mulsf3>
 310:	9b 01       	movw	r18, r22
 312:	ac 01       	movw	r20, r24
 314:	c7 01       	movw	r24, r14
 316:	b6 01       	movw	r22, r12
 318:	0e 94 34 02 	call	0x468	; 0x468 <__addsf3>
 31c:	0e 94 a0 04 	call	0x940	; 0x940 <sqrt>
 320:	4b 01       	movw	r8, r22
 322:	5c 01       	movw	r10, r24
		float pszi = atan((y/x));
 324:	69 81       	ldd	r22, Y+1	; 0x01
 326:	7a 81       	ldd	r23, Y+2	; 0x02
 328:	8b 81       	ldd	r24, Y+3	; 0x03
 32a:	9c 81       	ldd	r25, Y+4	; 0x04
 32c:	2d 81       	ldd	r18, Y+5	; 0x05
 32e:	3e 81       	ldd	r19, Y+6	; 0x06
 330:	4f 81       	ldd	r20, Y+7	; 0x07
 332:	58 85       	ldd	r21, Y+8	; 0x08
 334:	0e 94 cf 02 	call	0x59e	; 0x59e <__divsf3>
 338:	0e 94 a0 02 	call	0x540	; 0x540 <atan>
		struct HsvColor data = {pszi * 255, T * 255 , 255 };
 33c:	20 e0       	ldi	r18, 0x00	; 0
 33e:	30 e0       	ldi	r19, 0x00	; 0
 340:	4f e7       	ldi	r20, 0x7F	; 127
 342:	53 e4       	ldi	r21, 0x43	; 67
 344:	0e 94 2d 04 	call	0x85a	; 0x85a <__mulsf3>
 348:	0e 94 41 03 	call	0x682	; 0x682 <__fixunssfsi>
 34c:	f6 2e       	mov	r15, r22
 34e:	20 e0       	ldi	r18, 0x00	; 0
 350:	30 e0       	ldi	r19, 0x00	; 0
 352:	4f e7       	ldi	r20, 0x7F	; 127
 354:	53 e4       	ldi	r21, 0x43	; 67
 356:	c5 01       	movw	r24, r10
 358:	b4 01       	movw	r22, r8
 35a:	0e 94 2d 04 	call	0x85a	; 0x85a <__mulsf3>
 35e:	0e 94 41 03 	call	0x682	; 0x682 <__fixunssfsi>
 362:	76 2f       	mov	r23, r22
		struct RgbColor value = HsvToRgb(data);
 364:	6f 2d       	mov	r22, r15
 366:	8f ef       	ldi	r24, 0xFF	; 255
 368:	0e 94 61 00 	call	0xc2	; 0xc2 <HsvToRgb>
		
		volatile uint8_t R = value.r;
 36c:	6b 87       	std	Y+11, r22	; 0x0b
		volatile uint8_t B = value.b;
 36e:	8a 87       	std	Y+10, r24	; 0x0a
		volatile uint8_t G = value.g;
 370:	79 87       	std	Y+9, r23	; 0x09
			
		set_duty_R(R);
 372:	8b 85       	ldd	r24, Y+11	; 0x0b
 374:	0e 94 db 01 	call	0x3b6	; 0x3b6 <set_duty_R>
		set_duty_B(B);
 378:	8a 85       	ldd	r24, Y+10	; 0x0a
 37a:	0e 94 f7 01 	call	0x3ee	; 0x3ee <set_duty_B>
		set_duty_G(G);
 37e:	89 85       	ldd	r24, Y+9	; 0x09
 380:	0e 94 16 02 	call	0x42c	; 0x42c <set_duty_G>
		sei();
 384:	78 94       	sei
 386:	66 cf       	rjmp	.-308    	; 0x254 <main+0x24>

00000388 <init_fast_pwm_first_channel>:

void init_phase_correct_pwm(){
	
	DDRD |= 1 << 6;
	TCCR0A = 0b10000011;
	TCCR0B = 0b00000001;
 388:	80 e4       	ldi	r24, 0x40	; 64
 38a:	8a b9       	out	0x0a, r24	; 10
 38c:	83 e8       	ldi	r24, 0x83	; 131
 38e:	84 bd       	out	0x24, r24	; 36
 390:	83 e0       	ldi	r24, 0x03	; 3
 392:	85 bd       	out	0x25, r24	; 37
 394:	08 95       	ret

00000396 <init_fast_pwm_second_channel>:
 396:	21 9a       	sbi	0x04, 1	; 4
 398:	81 e8       	ldi	r24, 0x81	; 129
 39a:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
 39e:	8b e0       	ldi	r24, 0x0B	; 11
 3a0:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
 3a4:	08 95       	ret

000003a6 <init_fast_pwm_third_channel>:
 3a6:	23 9a       	sbi	0x04, 3	; 4
 3a8:	83 e8       	ldi	r24, 0x83	; 131
 3aa:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__DATA_REGION_ORIGIN__+0x50>
 3ae:	83 e0       	ldi	r24, 0x03	; 3
 3b0:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__DATA_REGION_ORIGIN__+0x51>
 3b4:	08 95       	ret

000003b6 <set_duty_R>:
	
}

void set_duty_R(uint8_t duty){
	OCR0A = ((duty/2.0) * 255)/100;
 3b6:	68 2f       	mov	r22, r24
 3b8:	70 e0       	ldi	r23, 0x00	; 0
 3ba:	80 e0       	ldi	r24, 0x00	; 0
 3bc:	90 e0       	ldi	r25, 0x00	; 0
 3be:	0e 94 72 03 	call	0x6e4	; 0x6e4 <__floatsisf>
 3c2:	20 e0       	ldi	r18, 0x00	; 0
 3c4:	30 e0       	ldi	r19, 0x00	; 0
 3c6:	40 e0       	ldi	r20, 0x00	; 0
 3c8:	5f e3       	ldi	r21, 0x3F	; 63
 3ca:	0e 94 2d 04 	call	0x85a	; 0x85a <__mulsf3>
 3ce:	20 e0       	ldi	r18, 0x00	; 0
 3d0:	30 e0       	ldi	r19, 0x00	; 0
 3d2:	4f e7       	ldi	r20, 0x7F	; 127
 3d4:	53 e4       	ldi	r21, 0x43	; 67
 3d6:	0e 94 2d 04 	call	0x85a	; 0x85a <__mulsf3>
 3da:	20 e0       	ldi	r18, 0x00	; 0
 3dc:	30 e0       	ldi	r19, 0x00	; 0
 3de:	48 ec       	ldi	r20, 0xC8	; 200
 3e0:	52 e4       	ldi	r21, 0x42	; 66
 3e2:	0e 94 cf 02 	call	0x59e	; 0x59e <__divsf3>
 3e6:	0e 94 41 03 	call	0x682	; 0x682 <__fixunssfsi>
 3ea:	67 bd       	out	0x27, r22	; 39
 3ec:	08 95       	ret

000003ee <set_duty_B>:
}

void set_duty_B(uint8_t duty){
	OCR1A = ((duty/2.0) * 255)/100;
 3ee:	68 2f       	mov	r22, r24
 3f0:	70 e0       	ldi	r23, 0x00	; 0
 3f2:	80 e0       	ldi	r24, 0x00	; 0
 3f4:	90 e0       	ldi	r25, 0x00	; 0
 3f6:	0e 94 72 03 	call	0x6e4	; 0x6e4 <__floatsisf>
 3fa:	20 e0       	ldi	r18, 0x00	; 0
 3fc:	30 e0       	ldi	r19, 0x00	; 0
 3fe:	40 e0       	ldi	r20, 0x00	; 0
 400:	5f e3       	ldi	r21, 0x3F	; 63
 402:	0e 94 2d 04 	call	0x85a	; 0x85a <__mulsf3>
 406:	20 e0       	ldi	r18, 0x00	; 0
 408:	30 e0       	ldi	r19, 0x00	; 0
 40a:	4f e7       	ldi	r20, 0x7F	; 127
 40c:	53 e4       	ldi	r21, 0x43	; 67
 40e:	0e 94 2d 04 	call	0x85a	; 0x85a <__mulsf3>
 412:	20 e0       	ldi	r18, 0x00	; 0
 414:	30 e0       	ldi	r19, 0x00	; 0
 416:	48 ec       	ldi	r20, 0xC8	; 200
 418:	52 e4       	ldi	r21, 0x42	; 66
 41a:	0e 94 cf 02 	call	0x59e	; 0x59e <__divsf3>
 41e:	0e 94 41 03 	call	0x682	; 0x682 <__fixunssfsi>
 422:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
 426:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
 42a:	08 95       	ret

0000042c <set_duty_G>:
}

void set_duty_G(uint8_t duty){
	OCR2A = ((duty/2.0) * 255)/100;
 42c:	68 2f       	mov	r22, r24
 42e:	70 e0       	ldi	r23, 0x00	; 0
 430:	80 e0       	ldi	r24, 0x00	; 0
 432:	90 e0       	ldi	r25, 0x00	; 0
 434:	0e 94 72 03 	call	0x6e4	; 0x6e4 <__floatsisf>
 438:	20 e0       	ldi	r18, 0x00	; 0
 43a:	30 e0       	ldi	r19, 0x00	; 0
 43c:	40 e0       	ldi	r20, 0x00	; 0
 43e:	5f e3       	ldi	r21, 0x3F	; 63
 440:	0e 94 2d 04 	call	0x85a	; 0x85a <__mulsf3>
 444:	20 e0       	ldi	r18, 0x00	; 0
 446:	30 e0       	ldi	r19, 0x00	; 0
 448:	4f e7       	ldi	r20, 0x7F	; 127
 44a:	53 e4       	ldi	r21, 0x43	; 67
 44c:	0e 94 2d 04 	call	0x85a	; 0x85a <__mulsf3>
 450:	20 e0       	ldi	r18, 0x00	; 0
 452:	30 e0       	ldi	r19, 0x00	; 0
 454:	48 ec       	ldi	r20, 0xC8	; 200
 456:	52 e4       	ldi	r21, 0x42	; 66
 458:	0e 94 cf 02 	call	0x59e	; 0x59e <__divsf3>
 45c:	0e 94 41 03 	call	0x682	; 0x682 <__fixunssfsi>
 460:	60 93 b3 00 	sts	0x00B3, r22	; 0x8000b3 <__DATA_REGION_ORIGIN__+0x53>
 464:	08 95       	ret

00000466 <__subsf3>:
 466:	50 58       	subi	r21, 0x80	; 128

00000468 <__addsf3>:
 468:	bb 27       	eor	r27, r27
 46a:	aa 27       	eor	r26, r26
 46c:	0e 94 4b 02 	call	0x496	; 0x496 <__addsf3x>
 470:	0c 94 eb 03 	jmp	0x7d6	; 0x7d6 <__fp_round>
 474:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__fp_pscA>
 478:	38 f0       	brcs	.+14     	; 0x488 <__addsf3+0x20>
 47a:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <__fp_pscB>
 47e:	20 f0       	brcs	.+8      	; 0x488 <__addsf3+0x20>
 480:	39 f4       	brne	.+14     	; 0x490 <__addsf3+0x28>
 482:	9f 3f       	cpi	r25, 0xFF	; 255
 484:	19 f4       	brne	.+6      	; 0x48c <__addsf3+0x24>
 486:	26 f4       	brtc	.+8      	; 0x490 <__addsf3+0x28>
 488:	0c 94 b3 03 	jmp	0x766	; 0x766 <__fp_nan>
 48c:	0e f4       	brtc	.+2      	; 0x490 <__addsf3+0x28>
 48e:	e0 95       	com	r30
 490:	e7 fb       	bst	r30, 7
 492:	0c 94 ad 03 	jmp	0x75a	; 0x75a <__fp_inf>

00000496 <__addsf3x>:
 496:	e9 2f       	mov	r30, r25
 498:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <__fp_split3>
 49c:	58 f3       	brcs	.-42     	; 0x474 <__addsf3+0xc>
 49e:	ba 17       	cp	r27, r26
 4a0:	62 07       	cpc	r22, r18
 4a2:	73 07       	cpc	r23, r19
 4a4:	84 07       	cpc	r24, r20
 4a6:	95 07       	cpc	r25, r21
 4a8:	20 f0       	brcs	.+8      	; 0x4b2 <__addsf3x+0x1c>
 4aa:	79 f4       	brne	.+30     	; 0x4ca <__addsf3x+0x34>
 4ac:	a6 f5       	brtc	.+104    	; 0x516 <__stack+0x17>
 4ae:	0c 94 1e 04 	jmp	0x83c	; 0x83c <__fp_zero>
 4b2:	0e f4       	brtc	.+2      	; 0x4b6 <__addsf3x+0x20>
 4b4:	e0 95       	com	r30
 4b6:	0b 2e       	mov	r0, r27
 4b8:	ba 2f       	mov	r27, r26
 4ba:	a0 2d       	mov	r26, r0
 4bc:	0b 01       	movw	r0, r22
 4be:	b9 01       	movw	r22, r18
 4c0:	90 01       	movw	r18, r0
 4c2:	0c 01       	movw	r0, r24
 4c4:	ca 01       	movw	r24, r20
 4c6:	a0 01       	movw	r20, r0
 4c8:	11 24       	eor	r1, r1
 4ca:	ff 27       	eor	r31, r31
 4cc:	59 1b       	sub	r21, r25
 4ce:	99 f0       	breq	.+38     	; 0x4f6 <__addsf3x+0x60>
 4d0:	59 3f       	cpi	r21, 0xF9	; 249
 4d2:	50 f4       	brcc	.+20     	; 0x4e8 <__addsf3x+0x52>
 4d4:	50 3e       	cpi	r21, 0xE0	; 224
 4d6:	68 f1       	brcs	.+90     	; 0x532 <__stack+0x33>
 4d8:	1a 16       	cp	r1, r26
 4da:	f0 40       	sbci	r31, 0x00	; 0
 4dc:	a2 2f       	mov	r26, r18
 4de:	23 2f       	mov	r18, r19
 4e0:	34 2f       	mov	r19, r20
 4e2:	44 27       	eor	r20, r20
 4e4:	58 5f       	subi	r21, 0xF8	; 248
 4e6:	f3 cf       	rjmp	.-26     	; 0x4ce <__addsf3x+0x38>
 4e8:	46 95       	lsr	r20
 4ea:	37 95       	ror	r19
 4ec:	27 95       	ror	r18
 4ee:	a7 95       	ror	r26
 4f0:	f0 40       	sbci	r31, 0x00	; 0
 4f2:	53 95       	inc	r21
 4f4:	c9 f7       	brne	.-14     	; 0x4e8 <__addsf3x+0x52>
 4f6:	7e f4       	brtc	.+30     	; 0x516 <__stack+0x17>
 4f8:	1f 16       	cp	r1, r31
 4fa:	ba 0b       	sbc	r27, r26
 4fc:	62 0b       	sbc	r22, r18
 4fe:	73 0b       	sbc	r23, r19
 500:	84 0b       	sbc	r24, r20
 502:	ba f0       	brmi	.+46     	; 0x532 <__stack+0x33>
 504:	91 50       	subi	r25, 0x01	; 1
 506:	a1 f0       	breq	.+40     	; 0x530 <__stack+0x31>
 508:	ff 0f       	add	r31, r31
 50a:	bb 1f       	adc	r27, r27
 50c:	66 1f       	adc	r22, r22
 50e:	77 1f       	adc	r23, r23
 510:	88 1f       	adc	r24, r24
 512:	c2 f7       	brpl	.-16     	; 0x504 <__stack+0x5>
 514:	0e c0       	rjmp	.+28     	; 0x532 <__stack+0x33>
 516:	ba 0f       	add	r27, r26
 518:	62 1f       	adc	r22, r18
 51a:	73 1f       	adc	r23, r19
 51c:	84 1f       	adc	r24, r20
 51e:	48 f4       	brcc	.+18     	; 0x532 <__stack+0x33>
 520:	87 95       	ror	r24
 522:	77 95       	ror	r23
 524:	67 95       	ror	r22
 526:	b7 95       	ror	r27
 528:	f7 95       	ror	r31
 52a:	9e 3f       	cpi	r25, 0xFE	; 254
 52c:	08 f0       	brcs	.+2      	; 0x530 <__stack+0x31>
 52e:	b0 cf       	rjmp	.-160    	; 0x490 <__addsf3+0x28>
 530:	93 95       	inc	r25
 532:	88 0f       	add	r24, r24
 534:	08 f0       	brcs	.+2      	; 0x538 <__stack+0x39>
 536:	99 27       	eor	r25, r25
 538:	ee 0f       	add	r30, r30
 53a:	97 95       	ror	r25
 53c:	87 95       	ror	r24
 53e:	08 95       	ret

00000540 <atan>:
 540:	df 93       	push	r29
 542:	dd 27       	eor	r29, r29
 544:	b9 2f       	mov	r27, r25
 546:	bf 77       	andi	r27, 0x7F	; 127
 548:	40 e8       	ldi	r20, 0x80	; 128
 54a:	5f e3       	ldi	r21, 0x3F	; 63
 54c:	16 16       	cp	r1, r22
 54e:	17 06       	cpc	r1, r23
 550:	48 07       	cpc	r20, r24
 552:	5b 07       	cpc	r21, r27
 554:	18 f4       	brcc	.+6      	; 0x55c <atan+0x1c>
 556:	d9 2f       	mov	r29, r25
 558:	0e 94 25 04 	call	0x84a	; 0x84a <inverse>
 55c:	9f 93       	push	r25
 55e:	8f 93       	push	r24
 560:	7f 93       	push	r23
 562:	6f 93       	push	r22
 564:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <square>
 568:	ec e6       	ldi	r30, 0x6C	; 108
 56a:	f0 e0       	ldi	r31, 0x00	; 0
 56c:	0e 94 b6 03 	call	0x76c	; 0x76c <__fp_powser>
 570:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <__fp_round>
 574:	2f 91       	pop	r18
 576:	3f 91       	pop	r19
 578:	4f 91       	pop	r20
 57a:	5f 91       	pop	r21
 57c:	0e 94 40 04 	call	0x880	; 0x880 <__mulsf3x>
 580:	dd 23       	and	r29, r29
 582:	51 f0       	breq	.+20     	; 0x598 <atan+0x58>
 584:	90 58       	subi	r25, 0x80	; 128
 586:	a2 ea       	ldi	r26, 0xA2	; 162
 588:	2a ed       	ldi	r18, 0xDA	; 218
 58a:	3f e0       	ldi	r19, 0x0F	; 15
 58c:	49 ec       	ldi	r20, 0xC9	; 201
 58e:	5f e3       	ldi	r21, 0x3F	; 63
 590:	d0 78       	andi	r29, 0x80	; 128
 592:	5d 27       	eor	r21, r29
 594:	0e 94 4b 02 	call	0x496	; 0x496 <__addsf3x>
 598:	df 91       	pop	r29
 59a:	0c 94 eb 03 	jmp	0x7d6	; 0x7d6 <__fp_round>

0000059e <__divsf3>:
 59e:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <__divsf3x>
 5a2:	0c 94 eb 03 	jmp	0x7d6	; 0x7d6 <__fp_round>
 5a6:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <__fp_pscB>
 5aa:	58 f0       	brcs	.+22     	; 0x5c2 <__divsf3+0x24>
 5ac:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__fp_pscA>
 5b0:	40 f0       	brcs	.+16     	; 0x5c2 <__divsf3+0x24>
 5b2:	29 f4       	brne	.+10     	; 0x5be <__divsf3+0x20>
 5b4:	5f 3f       	cpi	r21, 0xFF	; 255
 5b6:	29 f0       	breq	.+10     	; 0x5c2 <__divsf3+0x24>
 5b8:	0c 94 ad 03 	jmp	0x75a	; 0x75a <__fp_inf>
 5bc:	51 11       	cpse	r21, r1
 5be:	0c 94 1f 04 	jmp	0x83e	; 0x83e <__fp_szero>
 5c2:	0c 94 b3 03 	jmp	0x766	; 0x766 <__fp_nan>

000005c6 <__divsf3x>:
 5c6:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <__fp_split3>
 5ca:	68 f3       	brcs	.-38     	; 0x5a6 <__divsf3+0x8>

000005cc <__divsf3_pse>:
 5cc:	99 23       	and	r25, r25
 5ce:	b1 f3       	breq	.-20     	; 0x5bc <__divsf3+0x1e>
 5d0:	55 23       	and	r21, r21
 5d2:	91 f3       	breq	.-28     	; 0x5b8 <__divsf3+0x1a>
 5d4:	95 1b       	sub	r25, r21
 5d6:	55 0b       	sbc	r21, r21
 5d8:	bb 27       	eor	r27, r27
 5da:	aa 27       	eor	r26, r26
 5dc:	62 17       	cp	r22, r18
 5de:	73 07       	cpc	r23, r19
 5e0:	84 07       	cpc	r24, r20
 5e2:	38 f0       	brcs	.+14     	; 0x5f2 <__divsf3_pse+0x26>
 5e4:	9f 5f       	subi	r25, 0xFF	; 255
 5e6:	5f 4f       	sbci	r21, 0xFF	; 255
 5e8:	22 0f       	add	r18, r18
 5ea:	33 1f       	adc	r19, r19
 5ec:	44 1f       	adc	r20, r20
 5ee:	aa 1f       	adc	r26, r26
 5f0:	a9 f3       	breq	.-22     	; 0x5dc <__divsf3_pse+0x10>
 5f2:	35 d0       	rcall	.+106    	; 0x65e <__divsf3_pse+0x92>
 5f4:	0e 2e       	mov	r0, r30
 5f6:	3a f0       	brmi	.+14     	; 0x606 <__divsf3_pse+0x3a>
 5f8:	e0 e8       	ldi	r30, 0x80	; 128
 5fa:	32 d0       	rcall	.+100    	; 0x660 <__divsf3_pse+0x94>
 5fc:	91 50       	subi	r25, 0x01	; 1
 5fe:	50 40       	sbci	r21, 0x00	; 0
 600:	e6 95       	lsr	r30
 602:	00 1c       	adc	r0, r0
 604:	ca f7       	brpl	.-14     	; 0x5f8 <__divsf3_pse+0x2c>
 606:	2b d0       	rcall	.+86     	; 0x65e <__divsf3_pse+0x92>
 608:	fe 2f       	mov	r31, r30
 60a:	29 d0       	rcall	.+82     	; 0x65e <__divsf3_pse+0x92>
 60c:	66 0f       	add	r22, r22
 60e:	77 1f       	adc	r23, r23
 610:	88 1f       	adc	r24, r24
 612:	bb 1f       	adc	r27, r27
 614:	26 17       	cp	r18, r22
 616:	37 07       	cpc	r19, r23
 618:	48 07       	cpc	r20, r24
 61a:	ab 07       	cpc	r26, r27
 61c:	b0 e8       	ldi	r27, 0x80	; 128
 61e:	09 f0       	breq	.+2      	; 0x622 <__divsf3_pse+0x56>
 620:	bb 0b       	sbc	r27, r27
 622:	80 2d       	mov	r24, r0
 624:	bf 01       	movw	r22, r30
 626:	ff 27       	eor	r31, r31
 628:	93 58       	subi	r25, 0x83	; 131
 62a:	5f 4f       	sbci	r21, 0xFF	; 255
 62c:	3a f0       	brmi	.+14     	; 0x63c <__divsf3_pse+0x70>
 62e:	9e 3f       	cpi	r25, 0xFE	; 254
 630:	51 05       	cpc	r21, r1
 632:	78 f0       	brcs	.+30     	; 0x652 <__divsf3_pse+0x86>
 634:	0c 94 ad 03 	jmp	0x75a	; 0x75a <__fp_inf>
 638:	0c 94 1f 04 	jmp	0x83e	; 0x83e <__fp_szero>
 63c:	5f 3f       	cpi	r21, 0xFF	; 255
 63e:	e4 f3       	brlt	.-8      	; 0x638 <__divsf3_pse+0x6c>
 640:	98 3e       	cpi	r25, 0xE8	; 232
 642:	d4 f3       	brlt	.-12     	; 0x638 <__divsf3_pse+0x6c>
 644:	86 95       	lsr	r24
 646:	77 95       	ror	r23
 648:	67 95       	ror	r22
 64a:	b7 95       	ror	r27
 64c:	f7 95       	ror	r31
 64e:	9f 5f       	subi	r25, 0xFF	; 255
 650:	c9 f7       	brne	.-14     	; 0x644 <__divsf3_pse+0x78>
 652:	88 0f       	add	r24, r24
 654:	91 1d       	adc	r25, r1
 656:	96 95       	lsr	r25
 658:	87 95       	ror	r24
 65a:	97 f9       	bld	r25, 7
 65c:	08 95       	ret
 65e:	e1 e0       	ldi	r30, 0x01	; 1
 660:	66 0f       	add	r22, r22
 662:	77 1f       	adc	r23, r23
 664:	88 1f       	adc	r24, r24
 666:	bb 1f       	adc	r27, r27
 668:	62 17       	cp	r22, r18
 66a:	73 07       	cpc	r23, r19
 66c:	84 07       	cpc	r24, r20
 66e:	ba 07       	cpc	r27, r26
 670:	20 f0       	brcs	.+8      	; 0x67a <__divsf3_pse+0xae>
 672:	62 1b       	sub	r22, r18
 674:	73 0b       	sbc	r23, r19
 676:	84 0b       	sbc	r24, r20
 678:	ba 0b       	sbc	r27, r26
 67a:	ee 1f       	adc	r30, r30
 67c:	88 f7       	brcc	.-30     	; 0x660 <__divsf3_pse+0x94>
 67e:	e0 95       	com	r30
 680:	08 95       	ret

00000682 <__fixunssfsi>:
 682:	0e 94 04 04 	call	0x808	; 0x808 <__fp_splitA>
 686:	88 f0       	brcs	.+34     	; 0x6aa <__fixunssfsi+0x28>
 688:	9f 57       	subi	r25, 0x7F	; 127
 68a:	98 f0       	brcs	.+38     	; 0x6b2 <__fixunssfsi+0x30>
 68c:	b9 2f       	mov	r27, r25
 68e:	99 27       	eor	r25, r25
 690:	b7 51       	subi	r27, 0x17	; 23
 692:	b0 f0       	brcs	.+44     	; 0x6c0 <__fixunssfsi+0x3e>
 694:	e1 f0       	breq	.+56     	; 0x6ce <__fixunssfsi+0x4c>
 696:	66 0f       	add	r22, r22
 698:	77 1f       	adc	r23, r23
 69a:	88 1f       	adc	r24, r24
 69c:	99 1f       	adc	r25, r25
 69e:	1a f0       	brmi	.+6      	; 0x6a6 <__fixunssfsi+0x24>
 6a0:	ba 95       	dec	r27
 6a2:	c9 f7       	brne	.-14     	; 0x696 <__fixunssfsi+0x14>
 6a4:	14 c0       	rjmp	.+40     	; 0x6ce <__fixunssfsi+0x4c>
 6a6:	b1 30       	cpi	r27, 0x01	; 1
 6a8:	91 f0       	breq	.+36     	; 0x6ce <__fixunssfsi+0x4c>
 6aa:	0e 94 1e 04 	call	0x83c	; 0x83c <__fp_zero>
 6ae:	b1 e0       	ldi	r27, 0x01	; 1
 6b0:	08 95       	ret
 6b2:	0c 94 1e 04 	jmp	0x83c	; 0x83c <__fp_zero>
 6b6:	67 2f       	mov	r22, r23
 6b8:	78 2f       	mov	r23, r24
 6ba:	88 27       	eor	r24, r24
 6bc:	b8 5f       	subi	r27, 0xF8	; 248
 6be:	39 f0       	breq	.+14     	; 0x6ce <__fixunssfsi+0x4c>
 6c0:	b9 3f       	cpi	r27, 0xF9	; 249
 6c2:	cc f3       	brlt	.-14     	; 0x6b6 <__fixunssfsi+0x34>
 6c4:	86 95       	lsr	r24
 6c6:	77 95       	ror	r23
 6c8:	67 95       	ror	r22
 6ca:	b3 95       	inc	r27
 6cc:	d9 f7       	brne	.-10     	; 0x6c4 <__fixunssfsi+0x42>
 6ce:	3e f4       	brtc	.+14     	; 0x6de <__fixunssfsi+0x5c>
 6d0:	90 95       	com	r25
 6d2:	80 95       	com	r24
 6d4:	70 95       	com	r23
 6d6:	61 95       	neg	r22
 6d8:	7f 4f       	sbci	r23, 0xFF	; 255
 6da:	8f 4f       	sbci	r24, 0xFF	; 255
 6dc:	9f 4f       	sbci	r25, 0xFF	; 255
 6de:	08 95       	ret

000006e0 <__floatunsisf>:
 6e0:	e8 94       	clt
 6e2:	09 c0       	rjmp	.+18     	; 0x6f6 <__floatsisf+0x12>

000006e4 <__floatsisf>:
 6e4:	97 fb       	bst	r25, 7
 6e6:	3e f4       	brtc	.+14     	; 0x6f6 <__floatsisf+0x12>
 6e8:	90 95       	com	r25
 6ea:	80 95       	com	r24
 6ec:	70 95       	com	r23
 6ee:	61 95       	neg	r22
 6f0:	7f 4f       	sbci	r23, 0xFF	; 255
 6f2:	8f 4f       	sbci	r24, 0xFF	; 255
 6f4:	9f 4f       	sbci	r25, 0xFF	; 255
 6f6:	99 23       	and	r25, r25
 6f8:	a9 f0       	breq	.+42     	; 0x724 <__floatsisf+0x40>
 6fa:	f9 2f       	mov	r31, r25
 6fc:	96 e9       	ldi	r25, 0x96	; 150
 6fe:	bb 27       	eor	r27, r27
 700:	93 95       	inc	r25
 702:	f6 95       	lsr	r31
 704:	87 95       	ror	r24
 706:	77 95       	ror	r23
 708:	67 95       	ror	r22
 70a:	b7 95       	ror	r27
 70c:	f1 11       	cpse	r31, r1
 70e:	f8 cf       	rjmp	.-16     	; 0x700 <__floatsisf+0x1c>
 710:	fa f4       	brpl	.+62     	; 0x750 <__floatsisf+0x6c>
 712:	bb 0f       	add	r27, r27
 714:	11 f4       	brne	.+4      	; 0x71a <__floatsisf+0x36>
 716:	60 ff       	sbrs	r22, 0
 718:	1b c0       	rjmp	.+54     	; 0x750 <__floatsisf+0x6c>
 71a:	6f 5f       	subi	r22, 0xFF	; 255
 71c:	7f 4f       	sbci	r23, 0xFF	; 255
 71e:	8f 4f       	sbci	r24, 0xFF	; 255
 720:	9f 4f       	sbci	r25, 0xFF	; 255
 722:	16 c0       	rjmp	.+44     	; 0x750 <__floatsisf+0x6c>
 724:	88 23       	and	r24, r24
 726:	11 f0       	breq	.+4      	; 0x72c <__floatsisf+0x48>
 728:	96 e9       	ldi	r25, 0x96	; 150
 72a:	11 c0       	rjmp	.+34     	; 0x74e <__floatsisf+0x6a>
 72c:	77 23       	and	r23, r23
 72e:	21 f0       	breq	.+8      	; 0x738 <__floatsisf+0x54>
 730:	9e e8       	ldi	r25, 0x8E	; 142
 732:	87 2f       	mov	r24, r23
 734:	76 2f       	mov	r23, r22
 736:	05 c0       	rjmp	.+10     	; 0x742 <__floatsisf+0x5e>
 738:	66 23       	and	r22, r22
 73a:	71 f0       	breq	.+28     	; 0x758 <__floatsisf+0x74>
 73c:	96 e8       	ldi	r25, 0x86	; 134
 73e:	86 2f       	mov	r24, r22
 740:	70 e0       	ldi	r23, 0x00	; 0
 742:	60 e0       	ldi	r22, 0x00	; 0
 744:	2a f0       	brmi	.+10     	; 0x750 <__floatsisf+0x6c>
 746:	9a 95       	dec	r25
 748:	66 0f       	add	r22, r22
 74a:	77 1f       	adc	r23, r23
 74c:	88 1f       	adc	r24, r24
 74e:	da f7       	brpl	.-10     	; 0x746 <__floatsisf+0x62>
 750:	88 0f       	add	r24, r24
 752:	96 95       	lsr	r25
 754:	87 95       	ror	r24
 756:	97 f9       	bld	r25, 7
 758:	08 95       	ret

0000075a <__fp_inf>:
 75a:	97 f9       	bld	r25, 7
 75c:	9f 67       	ori	r25, 0x7F	; 127
 75e:	80 e8       	ldi	r24, 0x80	; 128
 760:	70 e0       	ldi	r23, 0x00	; 0
 762:	60 e0       	ldi	r22, 0x00	; 0
 764:	08 95       	ret

00000766 <__fp_nan>:
 766:	9f ef       	ldi	r25, 0xFF	; 255
 768:	80 ec       	ldi	r24, 0xC0	; 192
 76a:	08 95       	ret

0000076c <__fp_powser>:
 76c:	df 93       	push	r29
 76e:	cf 93       	push	r28
 770:	1f 93       	push	r17
 772:	0f 93       	push	r16
 774:	ff 92       	push	r15
 776:	ef 92       	push	r14
 778:	df 92       	push	r13
 77a:	7b 01       	movw	r14, r22
 77c:	8c 01       	movw	r16, r24
 77e:	68 94       	set
 780:	06 c0       	rjmp	.+12     	; 0x78e <__fp_powser+0x22>
 782:	da 2e       	mov	r13, r26
 784:	ef 01       	movw	r28, r30
 786:	0e 94 40 04 	call	0x880	; 0x880 <__mulsf3x>
 78a:	fe 01       	movw	r30, r28
 78c:	e8 94       	clt
 78e:	a5 91       	lpm	r26, Z+
 790:	25 91       	lpm	r18, Z+
 792:	35 91       	lpm	r19, Z+
 794:	45 91       	lpm	r20, Z+
 796:	55 91       	lpm	r21, Z+
 798:	a6 f3       	brts	.-24     	; 0x782 <__fp_powser+0x16>
 79a:	ef 01       	movw	r28, r30
 79c:	0e 94 4b 02 	call	0x496	; 0x496 <__addsf3x>
 7a0:	fe 01       	movw	r30, r28
 7a2:	97 01       	movw	r18, r14
 7a4:	a8 01       	movw	r20, r16
 7a6:	da 94       	dec	r13
 7a8:	69 f7       	brne	.-38     	; 0x784 <__fp_powser+0x18>
 7aa:	df 90       	pop	r13
 7ac:	ef 90       	pop	r14
 7ae:	ff 90       	pop	r15
 7b0:	0f 91       	pop	r16
 7b2:	1f 91       	pop	r17
 7b4:	cf 91       	pop	r28
 7b6:	df 91       	pop	r29
 7b8:	08 95       	ret

000007ba <__fp_pscA>:
 7ba:	00 24       	eor	r0, r0
 7bc:	0a 94       	dec	r0
 7be:	16 16       	cp	r1, r22
 7c0:	17 06       	cpc	r1, r23
 7c2:	18 06       	cpc	r1, r24
 7c4:	09 06       	cpc	r0, r25
 7c6:	08 95       	ret

000007c8 <__fp_pscB>:
 7c8:	00 24       	eor	r0, r0
 7ca:	0a 94       	dec	r0
 7cc:	12 16       	cp	r1, r18
 7ce:	13 06       	cpc	r1, r19
 7d0:	14 06       	cpc	r1, r20
 7d2:	05 06       	cpc	r0, r21
 7d4:	08 95       	ret

000007d6 <__fp_round>:
 7d6:	09 2e       	mov	r0, r25
 7d8:	03 94       	inc	r0
 7da:	00 0c       	add	r0, r0
 7dc:	11 f4       	brne	.+4      	; 0x7e2 <__fp_round+0xc>
 7de:	88 23       	and	r24, r24
 7e0:	52 f0       	brmi	.+20     	; 0x7f6 <__fp_round+0x20>
 7e2:	bb 0f       	add	r27, r27
 7e4:	40 f4       	brcc	.+16     	; 0x7f6 <__fp_round+0x20>
 7e6:	bf 2b       	or	r27, r31
 7e8:	11 f4       	brne	.+4      	; 0x7ee <__fp_round+0x18>
 7ea:	60 ff       	sbrs	r22, 0
 7ec:	04 c0       	rjmp	.+8      	; 0x7f6 <__fp_round+0x20>
 7ee:	6f 5f       	subi	r22, 0xFF	; 255
 7f0:	7f 4f       	sbci	r23, 0xFF	; 255
 7f2:	8f 4f       	sbci	r24, 0xFF	; 255
 7f4:	9f 4f       	sbci	r25, 0xFF	; 255
 7f6:	08 95       	ret

000007f8 <__fp_split3>:
 7f8:	57 fd       	sbrc	r21, 7
 7fa:	90 58       	subi	r25, 0x80	; 128
 7fc:	44 0f       	add	r20, r20
 7fe:	55 1f       	adc	r21, r21
 800:	59 f0       	breq	.+22     	; 0x818 <__fp_splitA+0x10>
 802:	5f 3f       	cpi	r21, 0xFF	; 255
 804:	71 f0       	breq	.+28     	; 0x822 <__fp_splitA+0x1a>
 806:	47 95       	ror	r20

00000808 <__fp_splitA>:
 808:	88 0f       	add	r24, r24
 80a:	97 fb       	bst	r25, 7
 80c:	99 1f       	adc	r25, r25
 80e:	61 f0       	breq	.+24     	; 0x828 <__fp_splitA+0x20>
 810:	9f 3f       	cpi	r25, 0xFF	; 255
 812:	79 f0       	breq	.+30     	; 0x832 <__fp_splitA+0x2a>
 814:	87 95       	ror	r24
 816:	08 95       	ret
 818:	12 16       	cp	r1, r18
 81a:	13 06       	cpc	r1, r19
 81c:	14 06       	cpc	r1, r20
 81e:	55 1f       	adc	r21, r21
 820:	f2 cf       	rjmp	.-28     	; 0x806 <__fp_split3+0xe>
 822:	46 95       	lsr	r20
 824:	f1 df       	rcall	.-30     	; 0x808 <__fp_splitA>
 826:	08 c0       	rjmp	.+16     	; 0x838 <__fp_splitA+0x30>
 828:	16 16       	cp	r1, r22
 82a:	17 06       	cpc	r1, r23
 82c:	18 06       	cpc	r1, r24
 82e:	99 1f       	adc	r25, r25
 830:	f1 cf       	rjmp	.-30     	; 0x814 <__fp_splitA+0xc>
 832:	86 95       	lsr	r24
 834:	71 05       	cpc	r23, r1
 836:	61 05       	cpc	r22, r1
 838:	08 94       	sec
 83a:	08 95       	ret

0000083c <__fp_zero>:
 83c:	e8 94       	clt

0000083e <__fp_szero>:
 83e:	bb 27       	eor	r27, r27
 840:	66 27       	eor	r22, r22
 842:	77 27       	eor	r23, r23
 844:	cb 01       	movw	r24, r22
 846:	97 f9       	bld	r25, 7
 848:	08 95       	ret

0000084a <inverse>:
 84a:	9b 01       	movw	r18, r22
 84c:	ac 01       	movw	r20, r24
 84e:	60 e0       	ldi	r22, 0x00	; 0
 850:	70 e0       	ldi	r23, 0x00	; 0
 852:	80 e8       	ldi	r24, 0x80	; 128
 854:	9f e3       	ldi	r25, 0x3F	; 63
 856:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__divsf3>

0000085a <__mulsf3>:
 85a:	0e 94 40 04 	call	0x880	; 0x880 <__mulsf3x>
 85e:	0c 94 eb 03 	jmp	0x7d6	; 0x7d6 <__fp_round>
 862:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__fp_pscA>
 866:	38 f0       	brcs	.+14     	; 0x876 <__mulsf3+0x1c>
 868:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <__fp_pscB>
 86c:	20 f0       	brcs	.+8      	; 0x876 <__mulsf3+0x1c>
 86e:	95 23       	and	r25, r21
 870:	11 f0       	breq	.+4      	; 0x876 <__mulsf3+0x1c>
 872:	0c 94 ad 03 	jmp	0x75a	; 0x75a <__fp_inf>
 876:	0c 94 b3 03 	jmp	0x766	; 0x766 <__fp_nan>
 87a:	11 24       	eor	r1, r1
 87c:	0c 94 1f 04 	jmp	0x83e	; 0x83e <__fp_szero>

00000880 <__mulsf3x>:
 880:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <__fp_split3>
 884:	70 f3       	brcs	.-36     	; 0x862 <__mulsf3+0x8>

00000886 <__mulsf3_pse>:
 886:	95 9f       	mul	r25, r21
 888:	c1 f3       	breq	.-16     	; 0x87a <__mulsf3+0x20>
 88a:	95 0f       	add	r25, r21
 88c:	50 e0       	ldi	r21, 0x00	; 0
 88e:	55 1f       	adc	r21, r21
 890:	62 9f       	mul	r22, r18
 892:	f0 01       	movw	r30, r0
 894:	72 9f       	mul	r23, r18
 896:	bb 27       	eor	r27, r27
 898:	f0 0d       	add	r31, r0
 89a:	b1 1d       	adc	r27, r1
 89c:	63 9f       	mul	r22, r19
 89e:	aa 27       	eor	r26, r26
 8a0:	f0 0d       	add	r31, r0
 8a2:	b1 1d       	adc	r27, r1
 8a4:	aa 1f       	adc	r26, r26
 8a6:	64 9f       	mul	r22, r20
 8a8:	66 27       	eor	r22, r22
 8aa:	b0 0d       	add	r27, r0
 8ac:	a1 1d       	adc	r26, r1
 8ae:	66 1f       	adc	r22, r22
 8b0:	82 9f       	mul	r24, r18
 8b2:	22 27       	eor	r18, r18
 8b4:	b0 0d       	add	r27, r0
 8b6:	a1 1d       	adc	r26, r1
 8b8:	62 1f       	adc	r22, r18
 8ba:	73 9f       	mul	r23, r19
 8bc:	b0 0d       	add	r27, r0
 8be:	a1 1d       	adc	r26, r1
 8c0:	62 1f       	adc	r22, r18
 8c2:	83 9f       	mul	r24, r19
 8c4:	a0 0d       	add	r26, r0
 8c6:	61 1d       	adc	r22, r1
 8c8:	22 1f       	adc	r18, r18
 8ca:	74 9f       	mul	r23, r20
 8cc:	33 27       	eor	r19, r19
 8ce:	a0 0d       	add	r26, r0
 8d0:	61 1d       	adc	r22, r1
 8d2:	23 1f       	adc	r18, r19
 8d4:	84 9f       	mul	r24, r20
 8d6:	60 0d       	add	r22, r0
 8d8:	21 1d       	adc	r18, r1
 8da:	82 2f       	mov	r24, r18
 8dc:	76 2f       	mov	r23, r22
 8de:	6a 2f       	mov	r22, r26
 8e0:	11 24       	eor	r1, r1
 8e2:	9f 57       	subi	r25, 0x7F	; 127
 8e4:	50 40       	sbci	r21, 0x00	; 0
 8e6:	9a f0       	brmi	.+38     	; 0x90e <__mulsf3_pse+0x88>
 8e8:	f1 f0       	breq	.+60     	; 0x926 <__mulsf3_pse+0xa0>
 8ea:	88 23       	and	r24, r24
 8ec:	4a f0       	brmi	.+18     	; 0x900 <__mulsf3_pse+0x7a>
 8ee:	ee 0f       	add	r30, r30
 8f0:	ff 1f       	adc	r31, r31
 8f2:	bb 1f       	adc	r27, r27
 8f4:	66 1f       	adc	r22, r22
 8f6:	77 1f       	adc	r23, r23
 8f8:	88 1f       	adc	r24, r24
 8fa:	91 50       	subi	r25, 0x01	; 1
 8fc:	50 40       	sbci	r21, 0x00	; 0
 8fe:	a9 f7       	brne	.-22     	; 0x8ea <__mulsf3_pse+0x64>
 900:	9e 3f       	cpi	r25, 0xFE	; 254
 902:	51 05       	cpc	r21, r1
 904:	80 f0       	brcs	.+32     	; 0x926 <__mulsf3_pse+0xa0>
 906:	0c 94 ad 03 	jmp	0x75a	; 0x75a <__fp_inf>
 90a:	0c 94 1f 04 	jmp	0x83e	; 0x83e <__fp_szero>
 90e:	5f 3f       	cpi	r21, 0xFF	; 255
 910:	e4 f3       	brlt	.-8      	; 0x90a <__mulsf3_pse+0x84>
 912:	98 3e       	cpi	r25, 0xE8	; 232
 914:	d4 f3       	brlt	.-12     	; 0x90a <__mulsf3_pse+0x84>
 916:	86 95       	lsr	r24
 918:	77 95       	ror	r23
 91a:	67 95       	ror	r22
 91c:	b7 95       	ror	r27
 91e:	f7 95       	ror	r31
 920:	e7 95       	ror	r30
 922:	9f 5f       	subi	r25, 0xFF	; 255
 924:	c1 f7       	brne	.-16     	; 0x916 <__mulsf3_pse+0x90>
 926:	fe 2b       	or	r31, r30
 928:	88 0f       	add	r24, r24
 92a:	91 1d       	adc	r25, r1
 92c:	96 95       	lsr	r25
 92e:	87 95       	ror	r24
 930:	97 f9       	bld	r25, 7
 932:	08 95       	ret
 934:	19 f4       	brne	.+6      	; 0x93c <__mulsf3_pse+0xb6>
 936:	16 f4       	brtc	.+4      	; 0x93c <__mulsf3_pse+0xb6>
 938:	0c 94 b3 03 	jmp	0x766	; 0x766 <__fp_nan>
 93c:	0c 94 e4 04 	jmp	0x9c8	; 0x9c8 <__fp_mpack>

00000940 <sqrt>:
 940:	0e 94 04 04 	call	0x808	; 0x808 <__fp_splitA>
 944:	b8 f3       	brcs	.-18     	; 0x934 <__mulsf3_pse+0xae>
 946:	99 23       	and	r25, r25
 948:	c9 f3       	breq	.-14     	; 0x93c <__mulsf3_pse+0xb6>
 94a:	b6 f3       	brts	.-20     	; 0x938 <__mulsf3_pse+0xb2>
 94c:	9f 57       	subi	r25, 0x7F	; 127
 94e:	55 0b       	sbc	r21, r21
 950:	87 ff       	sbrs	r24, 7
 952:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <__fp_norm2>
 956:	00 24       	eor	r0, r0
 958:	a0 e6       	ldi	r26, 0x60	; 96
 95a:	40 ea       	ldi	r20, 0xA0	; 160
 95c:	90 01       	movw	r18, r0
 95e:	80 58       	subi	r24, 0x80	; 128
 960:	56 95       	lsr	r21
 962:	97 95       	ror	r25
 964:	28 f4       	brcc	.+10     	; 0x970 <sqrt+0x30>
 966:	80 5c       	subi	r24, 0xC0	; 192
 968:	66 0f       	add	r22, r22
 96a:	77 1f       	adc	r23, r23
 96c:	88 1f       	adc	r24, r24
 96e:	20 f0       	brcs	.+8      	; 0x978 <sqrt+0x38>
 970:	26 17       	cp	r18, r22
 972:	37 07       	cpc	r19, r23
 974:	48 07       	cpc	r20, r24
 976:	30 f4       	brcc	.+12     	; 0x984 <sqrt+0x44>
 978:	62 1b       	sub	r22, r18
 97a:	73 0b       	sbc	r23, r19
 97c:	84 0b       	sbc	r24, r20
 97e:	20 29       	or	r18, r0
 980:	31 29       	or	r19, r1
 982:	4a 2b       	or	r20, r26
 984:	a6 95       	lsr	r26
 986:	17 94       	ror	r1
 988:	07 94       	ror	r0
 98a:	20 25       	eor	r18, r0
 98c:	31 25       	eor	r19, r1
 98e:	4a 27       	eor	r20, r26
 990:	58 f7       	brcc	.-42     	; 0x968 <sqrt+0x28>
 992:	66 0f       	add	r22, r22
 994:	77 1f       	adc	r23, r23
 996:	88 1f       	adc	r24, r24
 998:	20 f0       	brcs	.+8      	; 0x9a2 <sqrt+0x62>
 99a:	26 17       	cp	r18, r22
 99c:	37 07       	cpc	r19, r23
 99e:	48 07       	cpc	r20, r24
 9a0:	30 f4       	brcc	.+12     	; 0x9ae <sqrt+0x6e>
 9a2:	62 0b       	sbc	r22, r18
 9a4:	73 0b       	sbc	r23, r19
 9a6:	84 0b       	sbc	r24, r20
 9a8:	20 0d       	add	r18, r0
 9aa:	31 1d       	adc	r19, r1
 9ac:	41 1d       	adc	r20, r1
 9ae:	a0 95       	com	r26
 9b0:	81 f7       	brne	.-32     	; 0x992 <sqrt+0x52>
 9b2:	b9 01       	movw	r22, r18
 9b4:	84 2f       	mov	r24, r20
 9b6:	91 58       	subi	r25, 0x81	; 129
 9b8:	88 0f       	add	r24, r24
 9ba:	96 95       	lsr	r25
 9bc:	87 95       	ror	r24
 9be:	08 95       	ret

000009c0 <square>:
 9c0:	9b 01       	movw	r18, r22
 9c2:	ac 01       	movw	r20, r24
 9c4:	0c 94 2d 04 	jmp	0x85a	; 0x85a <__mulsf3>

000009c8 <__fp_mpack>:
 9c8:	9f 3f       	cpi	r25, 0xFF	; 255
 9ca:	31 f0       	breq	.+12     	; 0x9d8 <__fp_mpack_finite+0xc>

000009cc <__fp_mpack_finite>:
 9cc:	91 50       	subi	r25, 0x01	; 1
 9ce:	20 f4       	brcc	.+8      	; 0x9d8 <__fp_mpack_finite+0xc>
 9d0:	87 95       	ror	r24
 9d2:	77 95       	ror	r23
 9d4:	67 95       	ror	r22
 9d6:	b7 95       	ror	r27
 9d8:	88 0f       	add	r24, r24
 9da:	91 1d       	adc	r25, r1
 9dc:	96 95       	lsr	r25
 9de:	87 95       	ror	r24
 9e0:	97 f9       	bld	r25, 7
 9e2:	08 95       	ret

000009e4 <__fp_norm2>:
 9e4:	91 50       	subi	r25, 0x01	; 1
 9e6:	50 40       	sbci	r21, 0x00	; 0
 9e8:	66 0f       	add	r22, r22
 9ea:	77 1f       	adc	r23, r23
 9ec:	88 1f       	adc	r24, r24
 9ee:	d2 f7       	brpl	.-12     	; 0x9e4 <__fp_norm2>
 9f0:	08 95       	ret

000009f2 <_exit>:
 9f2:	f8 94       	cli

000009f4 <__stop_program>:
 9f4:	ff cf       	rjmp	.-2      	; 0x9f4 <__stop_program>
